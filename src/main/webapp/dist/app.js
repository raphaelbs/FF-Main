angular.module("financeiro",["ngMaterial","ngMessages","datatables","ngSanitize","ui.router","ngAnimate","jsonFormatter"]).run(["DTDefaultOptions",function(e){e.setLanguageSource(GetDOMINIOEndpoint("recursos/angular-datatables-pt-br.json"))}]).config(["$mdThemingProvider","$locationProvider","$stateProvider","$urlRouterProvider","JSONFormatterConfigProvider",function(e,o,a,t,r){t.otherwise("/"),a.state("financeiro",{url:"/",templateUrl:GetDOMINIOEndpoint("views/principal.html"),controller:"principal"}).state("formulario",{url:"/formulario?id_form&tipo_idioma&banco",templateUrl:GetDOMINIOEndpoint("views/formulario.html"),controller:"formulario"}).state("cadastro-formulario",{url:"/cadastro-formulario",templateUrl:GetDOMINIOEndpoint("views/cadastro-formulario.html"),controller:"cadastroFormulario"}).state("configuracoes",{url:"/configuracoes",templateUrl:GetDOMINIOEndpoint("views/configuracoes.html"),controller:"configuracoes"}),o.html5Mode({requireBase:!1,enabled:!0}),e.definePalette("custompurple",{50:"#f0eef6",100:"#c5bcdc",200:"#a597c9",300:"#7d68b0",400:"#6c55a4",500:"#5f4b90",600:"#52417c",700:"#443668",800:"#372c54",900:"#2a2140",A100:"#f0eef6",A200:"#c5bcdc",A400:"#6c55a4",A700:"#443668",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 A100 A200"}),e.theme("default").primaryPalette("custompurple").accentPalette("orange"),e.enableBrowserColor({theme:"default",palette:"primary",hue:"800"}),r.hoverPreviewEnabled=!0,r.hoverPreviewArrayCount=100,r.hoverPreviewFieldCount=5}]),angular.module("financeiro").controller("tudo",["$scope","$mdSidenav","$ecv","$mdMedia",function(e,o,a,t){e.menu=a.menu,a.menu.html.fixado=!0,a.menu.fn.toggle=function(e){return e||t("gt-md")?void(a.menu.html.fixado=!a.menu.html.fixado):void o("left").toggle()},a.menu.fn.close=function(){return a.menu.html.fixado?void(a.menu.html.fixado=!1):void o("left").close()},e.$watch(function(){return t("gt-md")},function(e){a.menu.html.fixado&&!e&&a.menu.html.carregado&&a.menu.fn.toggle(!0)}),e.$watch(function(){return a.menu.html.carregado},function(e){a.menu.html.fixado&&!t("gt-md")&&e&&a.menu.fn.toggle(!0)})}]),angular.module("financeiro").directive("ecvAutocomplete",["$mdDialog",function(e){return{restrict:"E",scope:{componente:"="},templateUrl:GetDOMINIOEndpoint("angular-templates/componentes/ecv-autocomplete.html"),link:function(o,a){o.modalMdAutocomplete=function(a,t){e.show({multiple:!0,templateUrl:GetDOMINIOEndpoint("angular-templates/modals/ecv-modal-autocomplete.html"),controller:"ecvModalAutocomplete",parent:angular.element(document.body),targetEvent:t,clickOutsideToClose:!0,locals:{componente:o.componente,fn:{close:function(){e.cancel()}}}})}}}}]),angular.module("financeiro").directive("ecvCombobox",["$http",function(e){return{restrict:"E",scope:{desabilitado:"@?",obrigatorio:"@?",referencia:"@",alias:"@",modelo:"=",ajax:"@?",opcoes:"=?",descricao:"@?"},transclude:!0,templateUrl:GetDOMINIOEndpoint("angular-templates/componentes/ecv-combobox.html"),link:function(o,a){var t=!1;o.$watch(function(){return o.modelo},function(e){e&&o.opcoes.forEach(function(a){e[o.descricao]===a[o.descricao]&&e!==a&&(o.modelo=a)})}),o.ajax&&!t&&e.get(GetRESTEndpoint(o.ajax)).then(function(e){e.data.Retorno&&(t=!0,o.opcoes=e.data.Retorno)})}}}]),angular.module("financeiro").directive("ecvGradeDetalhe",[function(){return{restrict:"E",scope:{componente:"=",data:"="},templateUrl:GetDOMINIOEndpoint("angular-templates/componentes/ecv-grade-detalhe.html"),controller:["$scope","DTOptionsBuilder","DTColumnBuilder","$http","$ecv","$mdDialog","$compile","$timeout",function($scope,DTOptionsBuilder,DTColumnBuilder,$http,$ecv,$mdDialog,$compile,$timeout){function modalDetalhe(e,o,a,t){$mdDialog.show({multiple:!0,controller:"ecvModalFormDetail",templateUrl:"angular-templates/modals/ecv-modal-form-detail.html",parent:angular.element("form > md-content"),clickOutsideToClose:!1,targetEvent:t,fullscreen:!1,locals:{$data:e}}).then(o,a)}var detalhamento=$scope.componente.detalhamento;return detalhamento.carregarForm?(detalhamento.data=DTOptionsBuilder.newOptions().withPaginationType("full_numbers"),detalhamento.instancia={},$scope.novo=function(e){modalDetalhe({idForm:detalhamento.carregarForm},function(e){$scope.componente.modelo[$scope.componente.ultimaReferencia].push(e),$ecv.toast.ok("Novo detalhe inserido")},function(e){},e)},$scope.atualizar=function(e,o){var a=angular.copy(e);modalDetalhe({modelo:e,idForm:detalhamento.carregarForm},function(e){detalhamento.instancia.rerender(),$ecv.toast.ok("Detalhe atualizado")},function(o){for(var t in e)e[t]=a[t]},o)},$scope.deletar=function(e){$timeout(function(){$scope.componente.modelo[$scope.componente.ultimaReferencia].splice(e,1)},0)},$scope.buscaValor=function(chave,linha){var ev="linha."+chave;return eval(ev)},void $http.get(GetRESTEndpoint(detalhamento.cabecalhoGrade)).then(function(e){return"ERRO"===e.data.Resultado?$ecv.toast.erro(e.data.Erro,"Erro ao buscar cabeçalho GradeDetalhe"):void(e.data&&e.data.Retorno&&0!==e.data.Retorno.length&&(detalhamento.colunas=[],detalhamento.colunasRaw=[],e.data.Retorno.sort(function(e,o){return e.id-o.id}),e.data.Retorno.forEach(function(e){detalhamento.colunas.push(DTColumnBuilder.newColumn(e.chave).withTitle(e.alias)),detalhamento.colunasRaw.push({key:e.chave})}),detalhamento.colunas.push(DTColumnBuilder.newColumn("Ações").withTitle("Ações")),$scope.componente.autorizado=!0,$ecv.toast.ok("Tabela carregada com sucesso!")))},function(e){$ecv.toast.erro(e.data,"Erro ao buscar cabeçalho GradeDetalhe")})):$ecv.toast.erro("A grade de exibição (id: "+$scope.componente.id+") não contem o detalhe do tipo carregarForm (7514). Este detalhe é obrigatório e deve conter o forumário a ser carregado.","Erro ao criar a GradeDetalhe")}]}}]),angular.module("financeiro").directive("ecvGrade",["DTOptionsBuilder","DTColumnBuilder","$http","$ecv",function(e,o,a,t){return{restrict:"E",scope:{componente:"=",data:"="},templateUrl:GetDOMINIOEndpoint("angular-templates/componentes/ecv-grade.html"),link:function(r,n){function i(e,o,n,i){return $("td",e).unbind("click"),$("td",e).bind("click",function(){o.ID&&(t.toast.ok("Buscando registro..."),a.get(GetRESTEndpoint(c.unicoRegistro+"/"+o.ID)).then(function(e){if("ERRO"===e.data.Resultado)return t.toast.erro(e.data.Erro,"Houve um erro ao buscar");var o;r.data.model=e.data.Retorno,r.data.telas.forEach(function(e,a){"TELA DE PESQUISA"!==e.tipo&&(o=a,e.containers.forEach(function(e){e.forEach(function(e){e.componentes&&e.componentes.forEach(function(e){t.utils.recur(r.data.model,e.referencia,e)})})}))}),r.data.telas.selecionada=o,t.toast.ok("Registro carregado!")},function(e){t.toast.erro(e.data,"Houve um erro ao buscar")}))}),e}var c=r.componente.detalhamento;c.data=e.fromSource(GetRESTEndpoint(c.opcoes)).withOption("rowCallback",i).withDataProp("Retorno").withPaginationType("full_numbers"),c.instancia={},r.recarregar=function(){c.instancia.reloadData()},a.get(GetRESTEndpoint(c.cabecalhoGrade)).then(function(e){return"ERRO"===e.data.Resultado?t.toast.erro(e.data.Erro,"Houve um erro ao inserir"):void(e.data&&e.data.Retorno&&0!==e.data.Retorno.length&&(c.colunas=[],e.data.Retorno.sort(function(e,o){return e.id-o.id}),e.data.Retorno.forEach(function(e){c.colunas.push(o.newColumn(e.alias).withTitle(e.alias))}),r.componente.autorizado=!0,t.toast.ok("Tabela carregada com sucesso!")))},function(e){t.toast.erro(e.data,"Houve um erro ao inserir")})}}}]),angular.module("financeiro").directive("ecvHtmlAutocomplete",["$mdDialog",function(e){return{restrict:"E",scope:{desabilitado:"@?",obrigatorio:"@?",referencia:"@",alias:"@",inputAlias:"@",modelo:"=",opcoes:"@?",caracteresMinimos:"@?"},templateUrl:GetDOMINIOEndpoint("angular-templates/componentes/ecv-html-autocomplete.html"),link:function(o,a){o.modalMdAutocomplete=function(a){e.show({templateUrl:GetDOMINIOEndpoint("angular-templates/modals/ecv-modal-html-autocomplete.html"),controller:"ecvModalHtmlAutocomplete",parent:angular.element(document.body),targetEvent:a,clickOutsideToClose:!0,locals:{componente:o,fn:{close:function(){e.cancel()}}}})}}}}]),angular.module("financeiro").directive("ecvHtmlGrade",["DTOptionsBuilder","DTColumnBuilder","$http","$ecv","$mdDialog",function(e,o,a,t,r){return{restrict:"E",scope:{colunas:"=?",modelo:"=?",editar:"=?",deletar:"=?",opcoes:"@?",cabecalhoGrade:"@?",linhaClique:"=?",dialogoDeletar:"=?"},templateUrl:GetDOMINIOEndpoint("angular-templates/componentes/ecv-html-grade.html"),link:function(n,i){function c(e,o,a,t){return $("td",e).unbind("click"),$("td",e).bind("click",function(){n.linhaClique&&n.linhaClique(e,o,a,t)}),e}n.opcoes?n.data=e.fromSource(GetRESTEndpoint(n.opcoes)).withOption("rowCallback",c).withDataProp("Retorno").withPaginationType("full_numbers"):n.data=e.newOptions().withPaginationType("full_numbers"),n.instancia={},n.recarregar=function(){n.instancia.reloadData()};var l=n.dialogoDeletar||r.confirm().title("Deseja deletar este registro?").textContent("Esta ação não poderá ser desfeita.").ariaLabel("Deletar registro").ok("Deletar").cancel("Cancelar");n.deletarDialog=function(e,o,a){l.targetEvent(a),r.show(l).then(function(){n.deletar(e,o,a,function(){n.modelo.splice(o,1)})})},n.colunas||a.get(GetRESTEndpoint(n.cabecalhoGrade)).then(function(e){return"ERRO"===e.data.Resultado?t.toast.erro(e.data.Erro,"Houve um erro ao pesquisar o cabeçalho da tabela."):void(e.data&&e.data.Retorno&&0!==e.data.Retorno.length&&(n.colunas=[],n.colunasRaw=[],e.data.Retorno.sort(function(e,o){return e.id-o.id}),e.data.Retorno.forEach(function(e){return n.opcoes?void n.colunas.push(o.newColumn(e.alias).withTitle(e.alias)):(n.colunas.push(o.newColumn(e.chave).withTitle(e.alias)),void n.colunasRaw.push({key:e.chave}))}),n.opcoes||n.colunas.push(o.newColumn("AÇÕES").withTitle("AÇÕES")),n.autorizado=!0))},function(e){t.toast.erro(e.data,"Houve um erro ao inserir")})}}}]),angular.module("financeiro").directive("ecvImagem",["$mdDialog",function(e){return{restrict:"E",scope:{componente:"=",componentes:"="},templateUrl:GetDOMINIOEndpoint("angular-templates/componentes/ecv-imagem.html"),link:function(o,a){a.css("cursor",o.componente.habilitado===!1?"not-allowed":"pointer");for(var t=0;t<o.componentes.length;t++){var r=o.componentes[t];if("c2_5501"===r.ultimaReferencia){o.componenteLegenda=r;break}}o.uploadImagem=function(a){return!o.componente.habilitado||void e.show({controller:"ecvModalImagemUpload",templateUrl:GetDOMINIOEndpoint("angular-templates/modals/ecv-modal-imagem-upload.html"),parent:angular.element(document.body),targetEvent:a,clickOutsideToClose:!0,locals:{componente:o.componente,componenteLegenda:o.componenteLegenda,fn:{close:function(){e.cancel()}}}})}}}}]),angular.module("financeiro").directive("ecvInputs",["$http",function(e){var o=95;return{restrict:"E",scope:{componentes:"=",debug:"=",data:"="},templateUrl:GetDOMINIOEndpoint("angular-templates/componentes/ecv-inputs.html"),replace:!0,link:function(a,t,r){a.ehTipo=function(e,o){switch(o.ultimaReferencia){case"c2_5501":return!1}switch(o.tipo.toLowerCase()){case void 0:case"input text":case"number":case"password":if("input"===e)return!0;break;case"combo box - incremental":case"combo box":if(!o.detalhamento&&"select-ajax"===e)return!0;if("select-array"===e&&"object"==typeof o.detalhamento.opcoes)return!0;if("select-ajax"===e&&"string"==typeof o.detalhamento.opcoes)return!0;break;case"autocomplete":if(!o.detalhamento&&"autocomplete-ajax"===e)return!0;if("autocomplete-array"===e&&"object"==typeof o.detalhamento.opcoes)return!0;if("autocomplete-ajax"===e&&"string"==typeof o.detalhamento.opcoes)return!0;break;case"check box":if("checkbox"===e)return!0;break;case"imagem - upload":if("imagem"===e)return!0;break;case"textarea":if("textarea"===e)return!0;break;case"grade de exibicao":if("gradeExibicao"===e)return!0;break;case"grade de exibicao - detail":if("gradeExibicaoDetalhe"===e)return!0}return!1},a.tamanhoFlex=function(e){return e?e.icone||e.descricao?o:100:100-o},a.carregaSelectAsync=function(o){o.opcoesCarregadas||e.get(GetRESTEndpoint(o.detalhamento.opcoes)).then(function(e){e.data.Retorno&&(o.detalhamento.opcoesCarregadas=e.data.Retorno)})}}}}]),angular.module("financeiro").directive("ecvFormMasterDetail",["$http","$ecv","$mdDialog",function(e,o,a){return{restrict:"E",templateUrl:GetDOMINIOEndpoint("angular-templates/formularios/ecv-form-master-detail.html"),scope:{data:"="},link:function(a,t){function r(e,o){return o?void(e.carregando=!0):void(e.carregando=!1)}o.menu.html.carregado=!0,a.toggleMenu=o.menu.fn.toggle,a.novaGuia=function(e,t){function r(e){var t=e.referencia.indexOf(i);if(!(t<0)){t+=i.length+1;var r=e.referencia.substr(t).indexOf("]")+t;e.referencia=e.referencia.substr(0,t)+l+e.referencia.substr(r),o.utils.recur(a.data.model,e.referencia,e)}}var n=e[0],i=n.mapeamento;if(!i)return o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+n.id+").","Erro ao criar nova aba..");var c=angular.copy(n),l=e.length;c.componentes&&c.componentes.forEach(r),t.containers.forEach(function(o){e!==o&&o.forEach(function(e){n!==e&&e.componentes&&e.componentes.forEach(r)})}),e.push(c)},a.deletarGuia=function(e,t,r){var n=t[e];return n.mapeamento?(e!==t.selecionado&&t.selecionado!==t.length-1||t.selecionado--,r.containers.forEach(function(r){if(t!==r)for(var i=r.length-1;i>0;i--){var c=r[i];if(!c.componentes)return;for(var l=!1,d=1;d<c.componentes.length;d++){var u=c.componentes[d],s=u.referencia.indexOf(n.mapeamento);if(!(s<0)){s+=n.mapeamento.length+1;var m=u.referencia.substr(s).indexOf("]")+s,f=u.referencia.substr(s,m-s);f===e&&(o.utils.limparPaiDoModelo(a.data.model,u.referencia,n.mapeamento),l=!0)}}l&&r.splice(i,1)}}),n.componentes&&n.componentes.forEach(function(e){o.utils.limparPaiDoModelo(a.data.model,e.referencia,n.mapeamento)}),void t.splice(e,1)):o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+n.id+").","Erro ao criar nova aba..")},a.atualizarGuiasDetalhes=function(e,t,r){function n(t){var r=t.referencia.indexOf(c);if(!(r<0)){r+=c.length+1;var n=t.referencia.substr(r).indexOf("]")+r;t.referencia=t.referencia.substr(0,r)+e+t.referencia.substr(n),o.utils.recur(a.data.model,t.referencia,t)}}var i=t[e];if("TELA DE PESQUISA"!==r.tipo&&i&&i.tipo.match("INCREMENTAL")){if(!i.mapeamento)return o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+i.id+").","Erro ao criar nova aba..");var c=i.mapeamento;r.containers.forEach(function(e){t!==e&&e.forEach(function(e){e.componentes&&e.componentes.forEach(n)})})}},a.acaoCrud=function(t){if(!t.alias)return o.toast.erro("Botão de ação sem [alias].<br>Cadastre algum termo no campo c7_204_801 para este componente (id: "+t.id+").","Erro no botão de ação");var n=t.alias.toLowerCase();return"novo"===n?void o.modelo.limpar(a.data):"deletar"===n?t.valor?(r(t,!0),void e({headers:{"Content-Type":"application/json"},method:"DELETE",data:o.modelo.copiarELimpar(a.data.model),url:GetRESTEndpoint(t.valor)}).then(function(e){return r(t),"ERRO"===e.data.Resultado?o.toast.erro(e.data.Erro,"Houve um erro ao deletar"):(o.toast.ok("Deletado com sucesso!"),void o.modelo.limpar(a.data))},function(e){r(t),o.toast.erro(e.data,"Houve um erro ao deletar")})):o.toast.erro("Botão de ação DELETAR sem [valor].<br>Cadastre a rota do DELETE no campo c13_204 para este componente (id: "+t.id+").","Erro no botão de GRAVAR"):void 0},a.validar=function(t){if(t.$invalid)return void angular.forEach(t.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})});for(var n,i=0;i<a.data.crud.length;i++){var c=a.data.crud[i];if("GRAVAR"===c.alias){n=c;break}}return n.valor?(r(n,!0),void e.post(GetRESTEndpoint(n.valor),o.modelo.copiarELimpar(a.data.model)).then(function(e){return r(n),"ERRO"===e.data.Resultado?o.toast.erro(e.data.Erro,"Houve um erro ao inserir"):(a.data.model=e.data.Retorno,a.data.telas.forEach(function(e){"TELA DE PESQUISA"!==e.tipo&&e.containers.forEach(function(e){e.forEach(function(e){e.componentes&&e.componentes.forEach(function(e){o.utils.recur(a.data.model,e.referencia,e)})})})}),void o.toast.ok("Inserido com sucesso!"))},function(e){r(n),o.toast.erro(e.data,"Houve um erro ao inserir")})):o.toast.erro("Botão de ação GRAVAR sem [valor].<br>Cadastre a rota do POST no campo c13_204 para este componente (id: "+n.id+").","Erro no botão de GRAVAR")},a.inserirColapse=function(e,t,r,n,i){function c(e){var t=e.referencia.indexOf(l);if(!(t<0)){t+=l.length+1;var r=e.referencia.substr(t).indexOf("]")+t;e.referencia=e.referencia.substr(0,t)+d+e.referencia.substr(r),o.utils.recur(a.data.model,e.referencia,e)}}var l=r.mapeamento;if(!l)return o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+r.id+").","Erro ao criar nova aba..");t=angular.copy(t),t.nome=t.nome+" "+e.length;var d=e.length;t.componentes&&t.componentes.forEach(c),n.containers.forEach(function(e){i!==e&&e.forEach(function(e){r!==e&&e.componentes&&e.componentes.forEach(c)})}),e.push(t)}}}}]),angular.module("financeiro").directive("ecvFormMasterSingleDetail",["$http","$ecv",function(e,o){return{restrict:"E",templateUrl:GetDOMINIOEndpoint("angular-templates/formularios/ecv-form-master-single-detail.html"),scope:{data:"="},link:function(a,t){function r(e,o){return o?void(e.carregando=!0):void(e.carregando=!1)}o.menu.html.carregado=!0,a.toggleMenu=o.menu.fn.toggle,a.novaGuia=function(e,t){function r(e){var t=e.referencia.indexOf(i);if(!(t<0)){t+=i.length+1;var r=e.referencia.substr(t).indexOf("]")+t;e.referencia=e.referencia.substr(0,t)+l+e.referencia.substr(r),o.utils.recur(a.data.model,e.referencia,e)}}var n=e[0],i=n.mapeamento;if(!i)return o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+n.id+").","Erro ao criar nova aba..");var c=angular.copy(n),l=e.length;c.componentes&&c.componentes.forEach(r),t.containers.forEach(function(o){e!==o&&o.forEach(function(e){n!==e&&e.componentes&&e.componentes.forEach(r)})}),e.push(c)},a.deletarGuia=function(e,t,r){var n=t[e];return n.mapeamento?(e!==t.selecionado&&t.selecionado!==t.length-1||t.selecionado--,r.containers.forEach(function(r){if(t!==r)for(var i=r.length-1;i>0;i--){var c=r[i];if(!c.componentes)return;for(var l=!1,d=1;d<c.componentes.length;d++){var u=c.componentes[d],s=u.referencia.indexOf(n.mapeamento);if(!(s<0)){s+=n.mapeamento.length+1;var m=u.referencia.substr(s).indexOf("]")+s,f=u.referencia.substr(s,m-s);f===e&&(o.utils.limparPaiDoModelo(a.data.model,u.referencia,n.mapeamento),l=!0)}}l&&r.splice(i,1)}}),n.componentes&&n.componentes.forEach(function(e){o.utils.limparPaiDoModelo(a.data.model,e.referencia,n.mapeamento)}),void t.splice(e,1)):o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+n.id+").","Erro ao criar nova aba..")},a.atualizarGuiasDetalhes=function(e,t,r){function n(t){var r=t.referencia.indexOf(c);if(!(r<0)){r+=c.length+1;var n=t.referencia.substr(r).indexOf("]")+r;t.referencia=t.referencia.substr(0,r)+e+t.referencia.substr(n),o.utils.recur(a.data.model,t.referencia,t)}}var i=t[e];if("TELA DE PESQUISA"!==r.tipo&&i&&i.tipo.match("INCREMENTAL")){if(!i.mapeamento)return o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+i.id+").","Erro ao criar nova aba..");var c=i.mapeamento;r.containers.forEach(function(e){t!==e&&e.forEach(function(e){e.componentes&&e.componentes.forEach(n)})})}},a.acaoCrud=function(t){if(!t.alias)return o.toast.erro("Botão de ação sem [alias].<br>Cadastre algum termo no campo c7_204_801 para este componente (id: "+t.id+").","Erro no botão de ação");var n=t.alias.toLowerCase();return"novo"===n?void o.modelo.limpar(a.data):"deletar"===n?t.valor?(r(t,!0),void e({headers:{"Content-Type":"application/json"},method:"DELETE",data:o.modelo.copiarELimpar(a.data.model),url:GetRESTEndpoint(t.valor)}).then(function(e){return r(t),"ERRO"===e.data.Resultado?o.toast.erro(e.data.Erro,"Houve um erro ao deletar"):(o.toast.ok("Deletado com sucesso!"),void o.modelo.limpar(a.data))},function(e){r(t),o.toast.erro(e.data,"Houve um erro ao deletar")})):o.toast.erro("Botão de ação DELETAR sem [valor].<br>Cadastre a rota do DELETE no campo c13_204 para este componente (id: "+t.id+").","Erro no botão de GRAVAR"):void 0},a.validar=function(t){if(t.$invalid)return void angular.forEach(t.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})});for(var n,i=0;i<a.data.crud.length;i++){var c=a.data.crud[i];if("GRAVAR"===c.alias){n=c;break}}return n.valor?(r(n,!0),void e.post(GetRESTEndpoint(n.valor),o.modelo.copiarELimpar(a.data.model)).then(function(e){return r(n),"ERRO"===e.data.Resultado?o.toast.erro(e.data.Erro,"Houve um erro ao inserir"):(a.data.model=e.data.Retorno,a.data.telas.forEach(function(e){"TELA DE PESQUISA"!==e.tipo&&e.containers.forEach(function(e){e.forEach(function(e){e.componentes&&e.componentes.forEach(function(e){o.utils.recur(a.data.model,e.referencia,e)})})})}),void o.toast.ok("Inserido com sucesso!"))},function(e){r(n),o.toast.erro(e.data,"Houve um erro ao inserir")})):o.toast.erro("Botão de ação GRAVAR sem [valor].<br>Cadastre a rota do POST no campo c13_204 para este componente (id: "+n.id+").","Erro no botão de GRAVAR")},a.inserirColapse=function(e,t,r,n,i){function c(e){var t=e.referencia.indexOf(l);if(!(t<0)){t+=l.length+1;var r=e.referencia.substr(t).indexOf("]")+t;e.referencia=e.referencia.substr(0,t)+d+e.referencia.substr(r),o.utils.recur(a.data.model,e.referencia,e)}}var l=r.mapeamento;if(!l)return o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+r.id+").","Erro ao criar nova aba..");t=angular.copy(t),t.nome=t.nome+" "+e.length;var d=e.length;t.componentes&&t.componentes.forEach(c),n.containers.forEach(function(e){i!==e&&e.forEach(function(e){r!==e&&e.componentes&&e.componentes.forEach(c)})}),e.push(t)}}}}]),angular.module("financeiro").directive("ecvFormSingleDetail",["$http","$ecv","$mdDialog",function(e,o,a){return{restrict:"E",templateUrl:GetDOMINIOEndpoint("angular-templates/formularios/ecv-form-single-detail.html"),scope:{data:"="},link:function(t,r){function n(e,o){return o?void(e.carregando=!0):void(e.carregando=!1)}o.menu.html.carregado=!0,t.voltar=function(){a.cancel(t.data.model)},t.novaGuia=function(e,a){function r(e){var a=e.referencia.indexOf(i);if(!(a<0)){a+=i.length+1;var r=e.referencia.substr(a).indexOf("]")+a;e.referencia=e.referencia.substr(0,a)+l+e.referencia.substr(r),o.utils.recur(t.data.model,e.referencia,e)}}var n=e[0],i=n.mapeamento;if(!i)return o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+n.id+").","Erro ao criar nova aba..");var c=angular.copy(n),l=e.length;c.componentes&&c.componentes.forEach(r),a.containers.forEach(function(o){e!==o&&o.forEach(function(e){n!==e&&e.componentes&&e.componentes.forEach(r)})}),e.push(c)},t.deletarGuia=function(e,a,r){var n=a[e];return n.mapeamento?(e!==a.selecionado&&a.selecionado!==a.length-1||a.selecionado--,r.containers.forEach(function(r){if(a!==r)for(var i=r.length-1;i>0;i--){var c=r[i];if(!c.componentes)return;for(var l=!1,d=1;d<c.componentes.length;d++){var u=c.componentes[d],s=u.referencia.indexOf(n.mapeamento);if(!(s<0)){s+=n.mapeamento.length+1;var m=u.referencia.substr(s).indexOf("]")+s,f=u.referencia.substr(s,m-s);f===e&&(o.utils.limparPaiDoModelo(t.data.model,u.referencia,n.mapeamento),l=!0)}}l&&r.splice(i,1)}}),n.componentes&&n.componentes.forEach(function(e){o.utils.limparPaiDoModelo(t.data.model,e.referencia,n.mapeamento)}),void a.splice(e,1)):o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+n.id+").","Erro ao criar nova aba..")},t.atualizarGuiasDetalhes=function(e,a,r){function n(a){var r=a.referencia.indexOf(c);if(!(r<0)){r+=c.length+1;var n=a.referencia.substr(r).indexOf("]")+r;a.referencia=a.referencia.substr(0,r)+e+a.referencia.substr(n),o.utils.recur(t.data.model,a.referencia,a)}}var i=a[e];if("TELA DE PESQUISA"!==r.tipo&&i&&i.tipo.match("INCREMENTAL")){if(!i.mapeamento)return o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+i.id+").","Erro ao criar nova aba..");var c=i.mapeamento;r.containers.forEach(function(e){a!==e&&e.forEach(function(e){e.componentes&&e.componentes.forEach(n)})})}},t.acaoCrud=function(a){if(!a.alias)return o.toast.erro("Botão de ação sem [alias].<br>Cadastre algum termo no campo c7_204_801 para este componente (id: "+a.id+").","Erro no botão de ação");var r=a.alias.toLowerCase();return"novo"===r?void o.modelo.limpar(t.data):"deletar"===r?a.valor?(n(a,!0),void e({headers:{"Content-Type":"application/json"},method:"DELETE",data:o.modelo.copiarELimpar(t.data.model),url:GetRESTEndpoint(a.valor)}).then(function(e){return n(a),"ERRO"===e.data.Resultado?o.toast.erro(e.data.Erro,"Houve um erro ao deletar"):(o.toast.ok("Deletado com sucesso!"),void o.modelo.limpar(t.data))},function(e){n(a),o.toast.erro(e.data,"Houve um erro ao deletar")})):o.toast.erro("Botão de ação DELETAR sem [valor].<br>Cadastre a rota do DELETE no campo c13_204 para este componente (id: "+a.id+").","Erro no botão de GRAVAR"):void 0},t.validar=function(e){if(e.$invalid)return void angular.forEach(e.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})});for(var o,r=0;r<t.data.crud.length;r++){var i=t.data.crud[r];if("GRAVAR"===i.alias){o=i;break}}n(o,!0),a.hide(t.data.model)},t.inserirColapse=function(e,a,r,n,i){function c(e){var a=e.referencia.indexOf(l);if(!(a<0)){a+=l.length+1;var r=e.referencia.substr(a).indexOf("]")+a;e.referencia=e.referencia.substr(0,a)+d+e.referencia.substr(r),o.utils.recur(t.data.model,e.referencia,e)}}var l=r.mapeamento;if(!l)return o.toast.erro("Faltando valor MAPEAMENTO (c10_203) para esta guia (id : "+r.id+").","Erro ao criar nova aba..");a=angular.copy(a),a.nome=a.nome+" "+e.length;var d=e.length;a.componentes&&a.componentes.forEach(c),n.containers.forEach(function(e){i!==e&&e.forEach(function(e){r!==e&&e.componentes&&e.componentes.forEach(c)})}),e.push(a)}}}}]),angular.module("financeiro").directive("ecvForm",["$http","$mdSidenav","$ecv",function(e,o,a){return{restrict:"E",scope:{idForm:"=",tipoIdioma:"=",banco:"=",modelo:"="},templateUrl:GetDOMINIOEndpoint("angular-templates/formularios/ecv-form.html"),link:function(o,t){function r(e){if("ERRO"===e.data.Resultado)return o.carregarError=!0,delete o.carregando,o.error.e500=e.data.Erro,void(o.error.detalhe=e.data.Retorno);o.formData=e.data.Retorno,document.title=o.formData.nome,delete o.carregando,o.formData.telas.forEach(function(e){e.containers=[],e.guias.forEach(function(o){var a=0;o.container&&(a=o.container),delete o.container,e.containers[a]?e.containers[a].push(o):e.containers[a]=[o]}),delete e.guias}),o.formData.model=o.modelo||{};var t=o.formData.model;o.formData.telas.forEach(function(e){"TELA DE PESQUISA"!==e.tipo&&e.containers.forEach(function(e){e.forEach(function(e){e.componentes&&(e.tipo.match("COLAPSE")&&(e.modelo={componentes:e.componentes,nome:e.nome},e.colapses=[e.modelo]),e.componentes.forEach(function(e){a.utils.recur(t,e.referencia,e)}))})})})}function n(e){o.carregarError=!0,delete o.carregando,o.error.e500=e.data}o.carregando="Buscando formulário...",o.error={};var i="Informe [idForm] buscar um formulário!",c=o.idForm,l=o.tipoIdioma||a.config.tipo_idioma,d=o.banco||a.config.banco,u="?id_form="+c+"&tipo_idioma="+l+"&banco="+d;return c&&l&&d?(u=u.toLowerCase(),void e.get(GetRESTEndpoint("FORMULARIO/BUSCAR"+u)).then(r,n)):(delete o.carregando,o.carregarError=!0,void(o.error.e400=i))}}}]),angular.module("financeiro").directive("ecvMenuItem",["$state",function(e){return{restrict:"E",scope:{debug:"=",item:"=",pai:"="},templateUrl:GetDOMINIOEndpoint("angular-templates/menu/ecv-menu-item.html"),replace:!0,link:function(o,a,t){o.$state=e,o.cores={menu:{},form:{}},o.cores.menu.fundo="grey-200",o.cores.menu.cor="grey-A200",o.cores.form.fundo="grey-A100",o.cores.form.cor="grey-A200",o.cores.menu.fundoA="accent",o.cores.menu.corA="grey-A100",o.cores.form.fundoA="accent",o.cores.form.corA="grey-A100"}}}]),angular.module("financeiro").directive("ecvMenuLateral",["$http","$ecv",function(e,o){return{restrict:"E",scope:{debug:"=",data:"="},templateUrl:GetDOMINIOEndpoint("angular-templates/menu/ecv-menu-lateral.html"),replace:!0,link:function(a,t,r){a.$watch(function(){return o.config.tipo_idioma},function(e){switch(e){case 1602:a.bandeira="flag-icon-es";break;case 1603:a.bandeira="flag-icon-us";break;default:a.bandeira="flag-icon-br"}}),a.menuCarregado=!1,a.erroAoCarregar=!1,a.menu=o.menu,e.get(GetRESTEndpoint("T9802")).then(function(e){return a.menuCarregado=!0,"ERRO"===e.data.Resultado?(a.erroAoCarregar=!0,o.toast.erro(e.data.Erro,"Houve um erro ao buscar o menu")):void(e.data.Retorno&&(a.items=e.data.Retorno))},function(e){a.menuCarregado=!0,a.erroAoCarregar=!0,o.toast.erro(e.data,"Houve um erro ao buscar o menu")})}}}]),angular.module("financeiro").controller("ecvModalAutocomplete",["$scope","componente","fn","$http",function(e,o,a,t){e.componente=o,e.fn=a,e.querySearch=function(e,o){if(!(e.detalhamento.caracteresMinimos&&e.detalhamento.caracteresMinimos>o.length))return t.get(GetRESTEndpoint(e.detalhamento.opcoes)+"&query='%25"+o+"%25'").then(function(e){if(e.data.Retorno)return e.data.Retorno})}}]),angular.module("financeiro").controller("ecvModalFormDetail",["$scope","$mdDialog","$data","$http",function(e,o,a){e.data=a}]),angular.module("financeiro").controller("ecvModalHtmlAutocomplete",["$scope","componente","fn","$http",function(e,o,a,t){e.componente=o,e.fn=a,e.querySearch=function(e,o){if(e.opcoes&&!(e.caracteresMinimos&&e.caracteresMinimos>o.length))return t.get(GetRESTEndpoint(e.opcoes)+"&query='%25"+o+"%25'").then(function(e){if(e.data.Retorno)return e.data.Retorno})}}]),angular.module("financeiro").controller("ecvModalImagemUpload",["$scope","componente","componenteLegenda","fn",function(e,o,a,t){function r(e,o){var a=new FileReader;a.onload=function(){var e=a.result,t=e.split(",")[1];o(t)},a.readAsDataURL(e)}e.componente=o,e.componenteLegenda=a;var n=o.detalhamento;e.fn=t;var i=null;e.imagemSelecionada=function(a,t){var r=$("#imgProfile");i?i.cropper("replace",t.file64):(r.attr("src",t.file64),r.cropper({crop:function(e){o.imagemCorte={x:e.x,y:e.y,w:e.width,h:e.height,ow:e.target.width,oh:e.target.height}},built:function(){i=$(this)},aspectRatio:n.largura&&n.altura&&parseInt(n.largura)/parseInt(n.altura),viewMode:1,background:!1,modal:!1,movable:!1,rotatable:!1,scalable:!1,zoomable:!1,zoomOnTouch:!1,zoomOnWheel:!1})),e.$apply(function(){e.files=t,e.imagemAberta=!0})},e.recortar=function(){n.imagemRecortada=i.cropper("getCroppedCanvas",{width:n.largura,height:n.altura}),n.imagemRecortada.toBlob(function(a){r(a,function(a){e.$apply(function(){o.modelo[o.ultimaReferencia]="data:image/jpeg;base64,"+a})})}),t.close()}}]),angular.module("financeiro").factory("$ecv",["$mdToast","$mdDialog",function($mdToast,$mdDialog){function erro(e,o){$mdToast.show(toastError.textContent(o)).then(function(a){"ok"==a&&$mdDialog.show(dialog.title(o).htmlContent(e).ariaLabel(o))})}function ok(e){$mdToast.show(toastOk.textContent(e))}function limpaVazios(e){varrer(e,function(e,o,a){if(!a)return void delete e[o];if("object"===a&&0===Object.keys(e[o]).length){if(0===e[o].length)return;return void delete e[o]}})}function copiarELimpar(e){var o=angular.copy(e);return limpaVazios(o),o}function varrer(e,o){if(e&&o){if("object"!=typeof e)return o(e,null,typeof e[a]);for(var a in e)e[a]||0===e[a]?("object"==typeof e[a]&&varrer(e[a],o),o(e,a,typeof e[a])):o(e,a,e[a]);o(e,a,typeof e[a])}}function limpar(e){e.telas.forEach(function(e){"TELA DE PESQUISA"!==e.tipo&&e.containers.forEach(function(e){e.forEach(function(e){e.componentes&&e.componentes.forEach(function(e){if(e.referencia){if("GRADE DE EXIBICAO - DETAIL"===e.tipo)return void(e.modelo[e.ultimaReferencia].length=0);if(("object"!=typeof e.modelo[e.ultimaReferencia]||e.visivel)&&(e.modelo[e.ultimaReferencia]=void 0),e.valor)try{e.modelo[e.ultimaReferencia]=JSON.parse(e.valor)}catch(o){e.modelo[e.ultimaReferencia]=e.valor}}})})})})}function recur(obj,ref,comp){if(ref){if(!obj||!comp)throw"ECV-RECURException:\nFaltando parâmetros\n"+comp.referencia+"\nComponente id: "+comp.id+"\nrecur("+JSON.stringify(obj)+", "+ref+", "+JSON.stringify(comp)+");";
if(ref.indexOf(".")!==-1){var refl=ref.indexOf(".");ref.indexOf("[")<refl&&(refl=ref.indexOf("]")+1);var n=ref.substr(0,refl);ref=ref.substr(refl+1);var rx=/(.+)\[([^\]]*)\]/.exec(n);if(rx){var isRx2Number=parseInt(rx[2])>-1;obj[rx[1]]||(obj[rx[1]]=[]);var rci=rx[2];if(!isRx2Number&&(obj[rx[1]].referenciaComposta||(obj[rx[1]].referenciaComposta={}),obj[rx[1]].referenciaComposta[rx[1]]||(obj[rx[1]].referenciaComposta[rx[1]]=[]),rci=obj[rx[1]].referenciaComposta[rx[1]].indexOf(rx[2]),rci<0))if(obj[rx[1]].length>0)try{var rx2Json=JSON.parse(rx[2]),acObj=angular.copy(obj[rx[1]]);e:for(var key in rx2Json)for(var i=acObj.length-1;i>-1;i--){var rx1Obj=acObj[i];if(eval("rx1Obj."+key)==rx2Json[key]){obj[rx[1]].referenciaComposta[rx[1]][i]=rx[2],rci=i;break e}acObj.splice(i,1)}}catch(e){throw"ECV-RECURException:\nHouve um erro ao converter o JSON da referencia\n"+comp.referencia+"\nComponente id: "+comp.id+"\nErro:\n"+e}else rci=obj[rx[1]].referenciaComposta[rx[1]].push(rx[2])-1;return obj[rx[1]][rci]||(obj[rx[1]][rci]={}),recur(obj[rx[1]][rci],ref,comp)}return obj[n]||(obj[n]={}),recur(obj[n],ref,comp)}if(ref.indexOf("[")>0){var rx=/(.+)\[([^\]]*)\]/.exec(ref);return void(rx&&(obj[rx[1]]||(obj[rx[1]]=[]),comp.modelo=obj,comp.ultimaReferencia=ref.substr(0,ref.indexOf("[")),comp.modelo[comp.ultimaReferencia]=obj[rx[1]]))}comp.ultimaReferencia=ref;var val=obj[comp.ultimaReferencia]||comp.valor;if(comp.modelo=obj,!val)return;try{comp.modelo[comp.ultimaReferencia]=JSON.parse(val)}catch(e){if("COMBO BOX"===comp.tipo&&comp.detalhamento)if(comp.detalhamento.opcoesCarregadas&&comp.detalhamento.opcoesCarregadas.length>0)for(var i=0;i<comp.detalhamento.opcoesCarregadas.length;i++){var ocObj=comp.detalhamento.opcoesCarregadas[i];if(val[comp.detalhamento.descricao]===ocObj[comp.detalhamento.descricao]){val=ocObj;break}}else comp.detalhamento.opcoesCarregadas=[val];comp.modelo[comp.ultimaReferencia]=val}}}function limparPaiDoModelo(e,o,a){var t=o.substr(0,o.indexOf("."));o=o.substr(o.indexOf(".")+1);var r=/(.+)\[(\d+)\]/.exec(t);{if(!r)return limparPaiDoModelo(e[t],o,a);if(e[r[1]]&&e[r[1]][r[2]]){if(r[1]!==a)return limparPaiDoModelo(e[r[1]][r[2]],o,a);e[r[1]].splice(r[2],1)}}}function ultimoArrayDaReferencia(obj,ref){var last=ref.lastIndexOf("[");return ref=ref.substr(0,last),ref="obj."+ref,eval(ref)}var posicao="bottom right",toastError=$mdToast.simple().action("LOG").highlightAction(!0).highlightClass("md-accent").hideDelay(5e3).position(posicao),toastOk=$mdToast.simple().hideDelay(3e3).position(posicao),dialog=$mdDialog.alert().clickOutsideToClose(!1).ok("Ok");return{toast:{erro:erro,ok:ok},utils:{recur:recur,varrer:varrer,limparPaiDoModelo:limparPaiDoModelo,ultimoArrayDaReferencia:ultimoArrayDaReferencia},modelo:{limpar:limpar,copiarELimpar:copiarELimpar,limpaVazios:limpaVazios},menu:{html:{},fn:{}},config:{tipo_idioma:1601,banco:"bd_0"}}}]),angular.module("financeiro").directive("bcUploadFile",[function(){return{restrict:"E",scope:{componente:"=",callback:"&",image:"=",accept:"="},transclude:!0,templateUrl:GetDOMINIOEndpoint("angular-templates/utils/bc-upload-file.html"),compile:function(e,o){e.find("input");return e.css("cursor","pointer"),function(e,o){var a=o.find("input");e.accept&&a.attr("accept",e.accept),o.on("click",function(){a.click()}),a.on("click",function(e){e.stopPropagation()}),a.on("change",function(){if(!this.files||!this.files[0])return e.callback()("Não existe arquivo");var o=new FileReader,a=this.files[0];o.onload=function(o){return e.callback()(null,{file:a,file64:o.target.result})},o.readAsDataURL(this.files[0]),$(this)[0].value=""})}}}}]),angular.module("financeiro").directive("topico",[function(){return{restrict:"E",transclude:{titulo:"topicoTitulo",botoes:"?topicoBotoes",conteudo:"topicoConteudo"},replace:!0,templateUrl:GetDOMINIOEndpoint("angular-templates/utils/topico.html")}}]),angular.module("financeiro").controller("cadastroFormulario",["$scope","$ecv","$http","DTOptionsBuilder","DTColumnBuilder","$mdDialog",function(e,o,a,t,r,n){document.title="CADASTRO FORMS 1.2",o.menu.html.carregado=!0,e.toggleMenu=o.menu.fn.toggle,e.botoes={},e.modelo={},e.modeloTela={},e.modeloGuia={},e.modeloComponente={},e.modeloDetalhe={},a.get(GetRESTEndpoint("T201")).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):void(e.modelos=a.data.Retorno)},function(e){o.toast.erro(e.data,"Erro ao buscar")}),e.gradeFormularios={deletar:function(t,r,n,i){a({headers:{"Content-Type":"application/json"},method:"DELETE",data:t,url:GetRESTEndpoint("T201")}).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao deletar"):(o.toast.ok("Formulário deletado com sucesso!"),i(),e.modelo={},e.modeloTela={},e.modeloGuia={},e.modeloComponente={},void(e.modeloDetalhe={}))},function(e){o.toast.erro(e.data,"Erro ao deletar")})},editar:function(t,r){t.c1_201&&(o.toast.ok("Buscando formulário..."),a.get(GetRESTEndpoint("T201/"+t.c1_201)).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):(e.modelo=a.data.Retorno,e.telaSelecionada=1,e.detalheSelecionado=0,e.modeloTela={},e.modeloGuia={},e.modeloComponente={},e.modeloDetalhe={},void o.toast.ok("Formulário carregado!"))},function(e){o.toast.erro(e.data,"Erro ao buscar")}))}},e.gradeTelas={deletar:function(t,r,n,i){a({headers:{"Content-Type":"application/json"},method:"DELETE",data:t,url:GetRESTEndpoint("T202")}).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao deletar"):(o.toast.ok("Tela deletada com sucesso!"),e.modeloTela={},e.modeloGuia={},e.modeloComponente={},e.modeloDetalhe={},void i())},function(e){o.toast.erro(e.data,"Erro ao deletar")})},editar:function(t,r){t.c1_202&&(o.toast.ok("Buscando tela..."),a.get(GetRESTEndpoint("T202/"+t.c1_202)).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):(e.modeloTela=a.data.Retorno,e.modeloGuia={},e.modeloComponente={},e.modeloDetalhe={},e.detalheSelecionado=1,void o.toast.ok("Tela carregada!"))},function(e){o.toast.erro(e.data,"Erro ao buscar")}))}},e.gradeGuias={deletar:function(t,r,n,i){a({headers:{"Content-Type":"application/json"},method:"DELETE",data:t,url:GetRESTEndpoint("T203")}).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao deletar"):(o.toast.ok("Guia deletada com sucesso!"),e.modeloGuia={},e.modeloComponente={},e.modeloDetalhe={},void i())},function(e){o.toast.erro(e.data,"Erro ao deletar")})},editar:function(t,r){t.c1_203&&(o.toast.ok("Buscando guia..."),a.get(GetRESTEndpoint("T203/"+t.c1_203)).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):(e.modeloGuia=a.data.Retorno,e.detalheSelecionado=2,e.modeloComponente={},e.modeloDetalhe={},void o.toast.ok("Guia carregada!"))},function(e){o.toast.erro(e.data,"Erro ao buscar")}))}},e.gradeComponentes={deletar:function(t,r,n,i){a({headers:{"Content-Type":"application/json"},method:"DELETE",data:t,url:GetRESTEndpoint("T204")}).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao deletar"):(o.toast.ok("Componente deletado com sucesso!"),e.modeloComponente={},e.modeloDetalhe={},void i())},function(e){o.toast.erro(e.data,"Erro ao deletar")})},editar:function(t,r){t.c1_204&&(o.toast.ok("Buscando componente..."),a.get(GetRESTEndpoint("T204/"+t.c1_204)).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):(e.modeloComponente=a.data.Retorno,e.modeloDetalhe={},e.modeloComponente.tipo={},e.detalheSelecionado=3,void o.toast.ok("Componente carregado!"))},function(e){o.toast.erro(e.data,"Erro ao buscar")}))}},e.gradeDetalhes={deletar:function(t,r,n,i){a({headers:{"Content-Type":"application/json"},method:"DELETE",data:t,url:GetRESTEndpoint("T206")}).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao deletar"):(o.toast.ok("Detalhe deletado com sucesso!"),e.modeloDetalhe={},void i())},function(e){o.toast.erro(e.data,"Erro ao deletar")})},editar:function(t,r){t.c1_206&&(o.toast.ok("Buscando detalhe do componente..."),a.get(GetRESTEndpoint("T206/"+t.c1_206)).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):(e.modeloDetalhe=a.data.Retorno,e.detalheSelecionado=4,void o.toast.ok("Detalhe carregado!"))},function(e){o.toast.erro(e.data,"Erro ao buscar")}))}},function(){function o(o){o&&e.modeloComponente.t206C5&&e.modeloComponente.t206C5.forEach(function(o){e.modeloComponente.tipo["t"+o.c6_206_5002.c1_5002]=o})}e.$watch(function(){return e.modeloComponente},o),e.$watch(function(){if(e.modeloComponente)return e.modeloComponente.c6_204_5002},o)}(),function(){var t={};t.FORM=function(t){e.botoes.gravarFormCarregando=!0,a.post(GetRESTEndpoint("T201"),e.modelo).then(function(t){return e.botoes.gravarFormCarregando=!1,"ERRO"===t.data.Resultado?o.toast.erro(t.data.Erro,"Erro ao inserir o formulário"):(e.modelo=t.data.Retorno,o.toast.ok("Formulário inserido com sucesso!"),void a.get(GetRESTEndpoint("T201")).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):(e.modelos=a.data.Retorno,void o.toast.ok("Grade recarregado!"))},function(e){o.toast.erro(e.data,"Erro ao buscar")}))},function(a){e.botoes.gravarFormCarregando=!1,o.toast.erro(a.data,"Erro ao inserir o formulário")})},t.TELA=function(t){e.modeloTela.c2_202_201=e.modelo,e.botoes.gravarTelaCarregando=!0,a.post(GetRESTEndpoint("T202"),e.modeloTela).then(function(t){return e.botoes.gravarTelaCarregando=!1,"ERRO"===t.data.Resultado?o.toast.erro(t.data.Erro,"Erro ao inserir a tela"):(e.modeloTela=t.data.Retorno,o.toast.ok("Tela inserida com sucesso!"),void a.get(GetRESTEndpoint("T201/"+e.modelo.c1_201)).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):(e.modelo=a.data.Retorno,void o.toast.ok("Formulário recarregado!"))},function(e){o.toast.erro(e.data,"Erro ao buscar")}))},function(a){e.botoes.gravarTelaCarregando=!1,o.toast.erro(a.data,"Erro ao inserir a tela")})},t.GUIA=function(t){e.modeloGuia.c2_203_201=e.modelo,e.modeloGuia.c3_203_202=e.modeloTela,e.botoes.gravarGuiaCarregando=!0,a.post(GetRESTEndpoint("T203"),e.modeloGuia).then(function(t){return e.botoes.gravarGuiaCarregando=!1,"ERRO"===t.data.Resultado?o.toast.erro(t.data.Erro,"Erro ao inserir a guia"):(e.modeloGuia=t.data.Retorno,o.toast.ok("Guia inserida com sucesso!"),void a.get(GetRESTEndpoint("T202/"+e.modeloTela.c1_202)).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):(e.modeloTela=a.data.Retorno,void o.toast.ok("Tela recarregada!"))},function(e){o.toast.erro(e.data,"Erro ao buscar")}))},function(a){e.botoes.gravarGuiaCarregando=!1,o.toast.erro(a.data,"Erro ao inserir a guia")})},t.COMPONENTE=function(t){var r=angular.copy(e.modeloComponente);for(var n in r.tipo){var i=r.tipo[n];i.c1_206||(i.c2_206_201=e.modelo,i.c3_206_202=e.modeloTela,i.c4_206_203=e.modeloGuia,i.c6_206_5002={c1_5002:parseInt(n.substr(1))},r.t206C5||(r.t206C5=[]),r.t206C5.push(i))}r.c2_204_201=e.modelo,r.c3_204_202=e.modeloTela,r.c4_204_203=e.modeloGuia,e.botoes.gravarComponenteCarregando=!0,a.post(GetRESTEndpoint("T204"),r).then(function(t){return e.botoes.gravarComponenteCarregando=!1,"ERRO"===t.data.Resultado?o.toast.erro(t.data.Erro,"Erro ao inserir o componente"):(e.modeloComponente=t.data.Retorno,e.modeloComponente.tipo={},o.toast.ok("Componente inserido com sucesso!"),void a.get(GetRESTEndpoint("T203/"+e.modeloGuia.c1_203)).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):(e.modeloGuia=a.data.Retorno,void o.toast.ok("Guia recarregada!"))},function(e){o.toast.erro(e.data,"Erro ao buscar")}))},function(a){e.botoes.gravarComponenteCarregando=!1,o.toast.erro(a.data,"Erro ao inserir o componente")})},t.DETALHE=function(t){e.modeloDetalhe.c2_206_201=e.modelo,e.modeloDetalhe.c3_206_202=e.modeloTela,e.modeloDetalhe.c4_206_203=e.modeloGuia,e.modeloDetalhe.c5_206_204=e.modeloComponente,e.botoes.gravarDetalheCarregando=!0,a.post(GetRESTEndpoint("T206"),e.modeloDetalhe).then(function(t){return e.botoes.gravarDetalheCarregando=!1,"ERRO"===t.data.Resultado?o.toast.erro(t.data.Erro,"Erro ao inserir o detalhe"):(e.modeloDetalhe=t.data.Retorno,o.toast.ok("Detalhe inserido com sucesso!"),void a.get(GetRESTEndpoint("T204/"+e.modeloComponente.c1_204)).then(function(a){return"ERRO"===a.data.Resultado?o.toast.erro(a.data.Erro,"Erro ao buscar"):(e.modeloComponente=a.data.Retorno,void o.toast.ok("Componente recarregada!"))},function(e){o.toast.erro(e.data,"Erro ao buscar")}))},function(a){e.botoes.gravarDetalheCarregando=!1,o.toast.erro(a.data,"Erro ao inserir o detalhe")})},e.validar=function(e,o){return e.$invalid?void angular.forEach(e.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})}):void t[o](e)},e.acaoCrud=function(o,a){switch(o){case"NOVO":e.modelo={},e.modeloTela={},e.modeloGuia={},e.modeloComponente={},e.modeloDetalhe={};break;case"NOVO_TELA":e.modeloTela={},e.modeloGuia={},e.modeloComponente={},e.modeloDetalhe={};break;case"NOVO_GUIA":e.modeloGuia={},e.modeloComponente={},e.modeloDetalhe={};break;case"NOVO_COMPONENTE":e.modeloComponente={},e.modeloDetalhe={};break;case"NOVO_DETALHE":e.modeloDetalhe={}}}}()}]),angular.module("financeiro").controller("configuracoes",["$scope","$ecv",function(e,o){e.config={},e.config=o.config,e.flags=[{id:1601,bandeira:"flag-icon-br",titulo:"Português brasileiro"},{id:1603,bandeira:"flag-icon-us",titulo:"Inglês"},{id:1602,bandeira:"flag-icon-es",titulo:"Espanhol"}],o.menu.html.carregado=!0,e.toggleMenu=o.menu.fn.toggle}]),angular.module("financeiro").controller("formulario",["$scope","$state",function(e,o){e.idForm=o.params.id_form,e.tipoIdioma=o.params.tipo_idioma,e.banco=o.params.banco}]),angular.module("financeiro").controller("principal",["$scope","$ecv",function(e,o){o.menu.html.carregado=!0,e.toggleMenu=o.menu.fn.toggle}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiLCJjb21wb25lbnRlcy9lY3YtYXV0b2NvbXBsZXRlLmpzIiwiY29tcG9uZW50ZXMvZWN2LWNvbWJvYm94LmpzIiwiY29tcG9uZW50ZXMvZWN2LWdyYWRlLWRldGFsaGUuanMiLCJjb21wb25lbnRlcy9lY3YtZ3JhZGUuanMiLCJjb21wb25lbnRlcy9lY3YtaHRtbC1hdXRvY29tcGxldGUuanMiLCJjb21wb25lbnRlcy9lY3YtaHRtbC1ncmFkZS5qcyIsImNvbXBvbmVudGVzL2Vjdi1pbWFnZW0uanMiLCJjb21wb25lbnRlcy9lY3YtaW5wdXRzLmpzIiwiZm9ybXVsYXJpb3MvZWN2LWZvcm0tbWFzdGVyLWRldGFpbC5qcyIsImZvcm11bGFyaW9zL2Vjdi1mb3JtLW1hc3Rlci1zaW5nbGUtZGV0YWlsLmpzIiwiZm9ybXVsYXJpb3MvZWN2LWZvcm0tc2luZ2xlLWRldGFpbC5qcyIsImZvcm11bGFyaW9zL2Vjdi1mb3JtLmpzIiwibWVudS9lY3YtbWVudS1pdGVtLmpzIiwibWVudS9lY3YtbWVudS1sYXRlcmFsLmpzIiwibW9kYWxzL2Vjdi1tb2RhbC1hdXRvY29tcGxldGUuanMiLCJtb2RhbHMvZWN2LW1vZGFsLWZvcm0tZGV0YWlsLmpzIiwibW9kYWxzL2Vjdi1tb2RhbC1odG1sLWF1dG9jb21wbGV0ZS5qcyIsIm1vZGFscy9lY3YtbW9kYWwtaW1hZ2VtLXVwbG9hZC5qcyIsInV0aWxzLyRlY3YuanMiLCJ1dGlscy9iYy11cGxvYWQtZmlsZS5qcyIsInV0aWxzL3RvcGljby5qcyIsImNhZGFzdHJvLWZvcm11bGFyaW8uanMiLCJjb25maWd1cmFjb2VzLmpzIiwiZm9ybXVsYXJpby5qcyIsInByaW5jaXBhbC5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwicnVuIiwiRFREZWZhdWx0T3B0aW9ucyIsInNldExhbmd1YWdlU291cmNlIiwiR2V0RE9NSU5JT0VuZHBvaW50IiwiY29uZmlnIiwiJG1kVGhlbWluZ1Byb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIkpTT05Gb3JtYXR0ZXJDb25maWdQcm92aWRlciIsIm90aGVyd2lzZSIsInN0YXRlIiwidXJsIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwiaHRtbDVNb2RlIiwicmVxdWlyZUJhc2UiLCJlbmFibGVkIiwiZGVmaW5lUGFsZXR0ZSIsIjUwIiwiMTAwIiwiMjAwIiwiMzAwIiwiNDAwIiwiNTAwIiwiNjAwIiwiNzAwIiwiODAwIiwiOTAwIiwiQTEwMCIsIkEyMDAiLCJBNDAwIiwiQTcwMCIsImNvbnRyYXN0RGVmYXVsdENvbG9yIiwiY29udHJhc3REYXJrQ29sb3JzIiwidGhlbWUiLCJwcmltYXJ5UGFsZXR0ZSIsImFjY2VudFBhbGV0dGUiLCJlbmFibGVCcm93c2VyQ29sb3IiLCJwYWxldHRlIiwiaHVlIiwiaG92ZXJQcmV2aWV3RW5hYmxlZCIsImhvdmVyUHJldmlld0FycmF5Q291bnQiLCJob3ZlclByZXZpZXdGaWVsZENvdW50IiwiJHNjb3BlIiwiJG1kU2lkZW5hdiIsIiRlY3YiLCIkbWRNZWRpYSIsIm1lbnUiLCJodG1sIiwiZml4YWRvIiwiZm4iLCJ0b2dnbGUiLCJib29sIiwiY2xvc2UiLCIkd2F0Y2giLCJjYXJyZWdhZG8iLCJkaXJlY3RpdmUiLCIkbWREaWFsb2ciLCJyZXN0cmljdCIsInNjb3BlIiwiY29tcG9uZW50ZSIsImxpbmsiLCJlbGVtIiwibW9kYWxNZEF1dG9jb21wbGV0ZSIsImV2Iiwic2hvdyIsIm11bHRpcGxlIiwicGFyZW50IiwiZWxlbWVudCIsImRvY3VtZW50IiwiYm9keSIsInRhcmdldEV2ZW50IiwiY2xpY2tPdXRzaWRlVG9DbG9zZSIsImxvY2FscyIsImNhbmNlbCIsIiRodHRwIiwiZGVzYWJpbGl0YWRvIiwib2JyaWdhdG9yaW8iLCJyZWZlcmVuY2lhIiwiYWxpYXMiLCJtb2RlbG8iLCJhamF4Iiwib3Bjb2VzIiwiZGVzY3JpY2FvIiwidHJhbnNjbHVkZSIsIm4iLCJmb3JFYWNoIiwib3BjYW8iLCJnZXQiLCJHZXRSRVNURW5kcG9pbnQiLCJ0aGVuIiwicmVzcCIsImRhdGEiLCJSZXRvcm5vIiwiRFRPcHRpb25zQnVpbGRlciIsIkRUQ29sdW1uQnVpbGRlciIsIiRjb21waWxlIiwiJHRpbWVvdXQiLCJtb2RhbERldGFsaGUiLCIkZGF0YSIsImRldGFsaGVPayIsImRldGFsaGVFcnJvciIsImZ1bGxzY3JlZW4iLCJkZXRhbGhhbWVudG8iLCJjYXJyZWdhckZvcm0iLCJuZXdPcHRpb25zIiwid2l0aFBhZ2luYXRpb25UeXBlIiwiaW5zdGFuY2lhIiwibm92byIsImlkRm9ybSIsIm5EYXRhIiwidWx0aW1hUmVmZXJlbmNpYSIsInB1c2giLCJ0b2FzdCIsIm9rIiwiY0RhdGEiLCJhdHVhbGl6YXIiLCJhRGF0YSIsImNvcHkiLCJyZXJlbmRlciIsImtleSIsImRlbGV0YXIiLCJpbmRleCIsInNwbGljZSIsImJ1c2NhVmFsb3IiLCJjaGF2ZSIsImxpbmhhIiwiZXZhbCIsImNhYmVjYWxob0dyYWRlIiwicmVzIiwiUmVzdWx0YWRvIiwiZXJybyIsIkVycm8iLCJsZW5ndGgiLCJjb2x1bmFzIiwiY29sdW5hc1JhdyIsInNvcnQiLCJhIiwiYiIsImlkIiwib2JqIiwibmV3Q29sdW1uIiwid2l0aFRpdGxlIiwiYXV0b3JpemFkbyIsImVyciIsInJvd0NhbGxiYWNrIiwiblJvdyIsImlEaXNwbGF5SW5kZXgiLCJpRGlzcGxheUluZGV4RnVsbCIsIiQiLCJ1bmJpbmQiLCJiaW5kIiwiSUQiLCJ1bmljb1JlZ2lzdHJvIiwidGVsYUZvcm11bGFyaW8iLCJtb2RlbCIsInRlbGFzIiwidGVsYSIsInRlbGFJbmRleCIsInRpcG8iLCJjb250YWluZXJzIiwiY29udGFpbmVyIiwiZ3VpYSIsImNvbXBvbmVudGVzIiwidXRpbHMiLCJyZWN1ciIsInNlbGVjaW9uYWRhIiwiZnJvbVNvdXJjZSIsIndpdGhPcHRpb24iLCJ3aXRoRGF0YVByb3AiLCJyZWNhcnJlZ2FyIiwicmVsb2FkRGF0YSIsImlucHV0QWxpYXMiLCJjYXJhY3RlcmVzTWluaW1vcyIsImVkaXRhciIsImxpbmhhQ2xpcXVlIiwiZGlhbG9nb0RlbGV0YXIiLCJkaWFsb2dvIiwiY29uZmlybSIsInRpdGxlIiwidGV4dENvbnRlbnQiLCJhcmlhTGFiZWwiLCJkZWxldGFyRGlhbG9nIiwiY3NzIiwiaGFiaWxpdGFkbyIsImkiLCJjb21wb25lbnRlTGVnZW5kYSIsInVwbG9hZEltYWdlbSIsInBhZHJhb0ZsZXgiLCJkZWJ1ZyIsInJlcGxhY2UiLCJhdHRycyIsImVoVGlwbyIsImFuZ3VsYXJUaXBvIiwidG9Mb3dlckNhc2UiLCJ1bmRlZmluZWQiLCJ0YW1hbmhvRmxleCIsImljb25lIiwiY2FycmVnYVNlbGVjdEFzeW5jIiwib3Bjb2VzQ2FycmVnYWRhcyIsImVzdGFDYXJyZWdhbmRvIiwiY29tcCIsImNhcnJlZ2FuZG8iLCJ0b2dnbGVNZW51Iiwibm92YUd1aWEiLCJwYXJhQ2FkYUNvbXBvbmVudGUiLCJwb3MiLCJpbmRleE9mIiwibWFwZWFtZW50byIsImVuZCIsInN1YnN0ciIsIm5vdm9JbmRpY2UiLCJndWlhTW9kZWxvIiwiY29udGFpbmVySW50ZXJubyIsImRlbGV0YXJHdWlhIiwiaW5kZXhHdWlhIiwiZ3VpYUludGVybmEiLCJkZWxldGVHdWlhIiwiaW5kZXhDb21wIiwidmFsIiwibGltcGFyUGFpRG9Nb2RlbG8iLCJhdHVhbGl6YXJHdWlhc0RldGFsaGVzIiwibWF0Y2giLCJhY2FvQ3J1ZCIsImxpbXBhciIsInZhbG9yIiwiaGVhZGVycyIsIkNvbnRlbnQtVHlwZSIsIm1ldGhvZCIsImNvcGlhckVMaW1wYXIiLCJ2YWxpZGFyIiwiZm9ybSIsIiRpbnZhbGlkIiwiJGVycm9yIiwiZmllbGQiLCJlcnJvckZpZWxkIiwiJHNldFRvdWNoZWQiLCJjcnVkIiwiaXRlbUNydWQiLCJwb3N0IiwiaW5zZXJpckNvbGFwc2UiLCJjb2xhcHNlcyIsImNvbGFwc2UiLCJub21lIiwidm9sdGFyIiwiaGlkZSIsInRpcG9JZGlvbWEiLCJiYW5jbyIsInN1Y2Nlc3MiLCJjYXJyZWdhckVycm9yIiwiZXJyb3IiLCJlNTAwIiwiZGV0YWxoZSIsImZvcm1EYXRhIiwiZ3VpYXMiLCJtb2RlbG9Bbmd1bGFyIiwibXNnNDAwIiwicXVlcnlQYXJhbSIsImU0MDAiLCIkc3RhdGUiLCJpdGVtIiwicGFpIiwiY29yZXMiLCJmdW5kbyIsImNvciIsImZ1bmRvQSIsImNvckEiLCJ0aXBvX2lkaW9tYSIsImJhbmRlaXJhQ29kIiwiYmFuZGVpcmEiLCJtZW51Q2FycmVnYWRvIiwiZXJyb0FvQ2FycmVnYXIiLCJpdGVtcyIsInF1ZXJ5U2VhcmNoIiwicXVlcnkiLCJibG9iVG9CYXNlNjQiLCJibG9iIiwiY2IiLCJyZWFkZXIiLCJGaWxlUmVhZGVyIiwib25sb2FkIiwiZGF0YVVybCIsInJlc3VsdCIsImJhc2U2NCIsInNwbGl0IiwicmVhZEFzRGF0YVVSTCIsImNyb3AiLCJpbWFnZW1TZWxlY2lvbmFkYSIsImZpbGVzIiwiaW1nUHJvZmlsZSIsImNyb3BwZXIiLCJmaWxlNjQiLCJhdHRyIiwiZSIsImltYWdlbUNvcnRlIiwieCIsInkiLCJ3Iiwid2lkdGgiLCJoIiwiaGVpZ2h0Iiwib3ciLCJ0YXJnZXQiLCJvaCIsImJ1aWx0IiwidGhpcyIsImFzcGVjdFJhdGlvIiwibGFyZ3VyYSIsImFsdHVyYSIsInBhcnNlSW50Iiwidmlld01vZGUiLCJiYWNrZ3JvdW5kIiwibW9kYWwiLCJtb3ZhYmxlIiwicm90YXRhYmxlIiwic2NhbGFibGUiLCJ6b29tYWJsZSIsInpvb21PblRvdWNoIiwiem9vbU9uV2hlZWwiLCIkYXBwbHkiLCJpbWFnZW1BYmVydGEiLCJyZWNvcnRhciIsImltYWdlbVJlY29ydGFkYSIsInRvQmxvYiIsImZhY3RvcnkiLCIkbWRUb2FzdCIsIm1zZyIsInRvYXN0RXJyb3IiLCJyZXNwb25zZSIsImRpYWxvZyIsImh0bWxDb250ZW50IiwidG9hc3RPayIsImxpbXBhVmF6aW9zIiwib2JqUGFpIiwidmFycmVyIiwidHlwZSIsIk9iamVjdCIsImtleXMiLCJjb3BpYSIsImNhbGxiYWNrIiwidmlzaXZlbCIsIkpTT04iLCJwYXJzZSIsInJlZiIsInN0cmluZ2lmeSIsInJlZmwiLCJyeCIsImV4ZWMiLCJpc1J4Mk51bWJlciIsInJjaSIsInJlZmVyZW5jaWFDb21wb3N0YSIsInJ4Mkpzb24iLCJhY09iaiIsIm9sIiwicngxT2JqIiwib2NPYmoiLCJ1bHRpbW9BcnJheURhUmVmZXJlbmNpYSIsImxhc3QiLCJsYXN0SW5kZXhPZiIsInBvc2ljYW8iLCJzaW1wbGUiLCJhY3Rpb24iLCJoaWdobGlnaHRBY3Rpb24iLCJoaWdobGlnaHRDbGFzcyIsImhpZGVEZWxheSIsInBvc2l0aW9uIiwiYWxlcnQiLCJpbWFnZSIsImFjY2VwdCIsImNvbXBpbGUiLCJmaW5kIiwiaW5wdXQiLCJvbiIsImNsaWNrIiwic3RvcFByb3BhZ2F0aW9uIiwiZmlsZSIsInZhbHVlIiwidGl0dWxvIiwiYm90b2VzIiwiY29udGV1ZG8iLCJtb2RlbG9UZWxhIiwibW9kZWxvR3VpYSIsIm1vZGVsb0NvbXBvbmVudGUiLCJtb2RlbG9EZXRhbGhlIiwibW9kZWxvcyIsImdyYWRlRm9ybXVsYXJpb3MiLCJjMV8yMDEiLCJ0ZWxhU2VsZWNpb25hZGEiLCJkZXRhbGhlU2VsZWNpb25hZG8iLCJncmFkZVRlbGFzIiwiYzFfMjAyIiwiZ3JhZGVHdWlhcyIsImMxXzIwMyIsImdyYWRlQ29tcG9uZW50ZXMiLCJjMV8yMDQiLCJncmFkZURldGFsaGVzIiwiYzFfMjA2IiwibXVkb3UiLCJ0MjA2QzUiLCJjNl8yMDZfNTAwMiIsImMxXzUwMDIiLCJjNl8yMDRfNTAwMiIsImFjYW9TYWx2YXIiLCJGT1JNIiwiZ3JhdmFyRm9ybUNhcnJlZ2FuZG8iLCJURUxBIiwiYzJfMjAyXzIwMSIsImdyYXZhclRlbGFDYXJyZWdhbmRvIiwiR1VJQSIsImMyXzIwM18yMDEiLCJjM18yMDNfMjAyIiwiZ3JhdmFyR3VpYUNhcnJlZ2FuZG8iLCJDT01QT05FTlRFIiwiY3AiLCJjMl8yMDZfMjAxIiwiYzNfMjA2XzIwMiIsImM0XzIwNl8yMDMiLCJjMl8yMDRfMjAxIiwiYzNfMjA0XzIwMiIsImM0XzIwNF8yMDMiLCJncmF2YXJDb21wb25lbnRlQ2FycmVnYW5kbyIsIkRFVEFMSEUiLCJjNV8yMDZfMjA0IiwiZ3JhdmFyRGV0YWxoZUNhcnJlZ2FuZG8iLCJmbGFncyIsInBhcmFtcyJdLCJtYXBwaW5ncyI6IkFBQ0FBLFFBQUFDLE9BQUEsY0FBQSxhQUFBLGFBQUEsYUFBQSxhQUFBLFlBQUEsWUFBQSxrQkFDQUMsS0FBQSxtQkFBQSxTQUFBQyxHQUNBQSxFQUFBQyxrQkFBQUMsbUJBQUEsOENBRUFDLFFBQUEscUJBQUEsb0JBQUEsaUJBQUEscUJBQUEsOEJBQ0EsU0FBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsR0FFQUQsRUFBQUUsVUFBQSxLQUVBSCxFQUNBSSxNQUFBLGNBQ0FDLElBQUEsSUFDQUMsWUFBQVYsbUJBQUEsd0JBQ0FXLFdBQUEsY0FFQUgsTUFBQSxjQUNBQyxJQUFBLHdDQUNBQyxZQUFBVixtQkFBQSx5QkFDQVcsV0FBQSxlQUVBSCxNQUFBLHVCQUNBQyxJQUFBLHVCQUNBQyxZQUFBVixtQkFBQSxrQ0FDQVcsV0FBQSx1QkFFQUgsTUFBQSxpQkFDQUMsSUFBQSxpQkFDQUMsWUFBQVYsbUJBQUEsNEJBQ0FXLFdBQUEsa0JBSUFSLEVBQUFTLFdBQUFDLGFBQUEsRUFBQUMsU0FBQSxJQUdBWixFQUFBYSxjQUFBLGdCQUNBQyxHQUFBLFVBQUFDLElBQUEsVUFBQUMsSUFBQSxVQUFBQyxJQUFBLFVBQ0FDLElBQUEsVUFBQUMsSUFBQSxVQUFBQyxJQUFBLFVBQUFDLElBQUEsVUFDQUMsSUFBQSxVQUFBQyxJQUFBLFVBQUFDLEtBQUEsVUFBQUMsS0FBQSxVQUNBQyxLQUFBLFVBQUFDLEtBQUEsVUFBQUMscUJBQUEsUUFDQUMsbUJBQUEseUJBR0E3QixFQUFBOEIsTUFBQSxXQUNBQyxlQUFBLGdCQUNBQyxjQUFBLFVBRUFoQyxFQUFBaUMsb0JBQ0FILE1BQUEsVUFDQUksUUFBQSxVQUNBQyxJQUFBLFFBR0EvQixFQUFBZ0Ms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a0JBQ0FwVixFQUFBbVYsb0JBQ0FuVixFQUFBb1YsZ0JBQ0EsTUFDQSxLQUFBLGVBQ0FwVixFQUFBb1YseUJDMWJBbFksUUFBQUMsT0FBQSxjQUFBZSxXQUFBLGlCQUFBLFNBQUEsT0FDQSxTQUFBOEIsRUFBQUUsR0FDQUYsRUFBQXhDLFVBQ0F3QyxFQUFBeEMsT0FBQTBDLEVBQUExQyxPQUNBd0MsRUFBQTZYLFFBRUE3UixHQUFBLEtBQ0FrSSxTQUFBLGVBQ0E0RyxPQUFBLHlCQUdBOU8sR0FBQSxLQUNBa0ksU0FBQSxlQUNBNEcsT0FBQSxXQUdBOU8sR0FBQSxLQUNBa0ksU0FBQSxlQUNBNEcsT0FBQSxhQUdBNVUsRUFBQUUsS0FBQUMsS0FBQU8sV0FBQSxFQUNBWixFQUFBZ0ssV0FBQTlKLEVBQUFFLEtBQUFHLEdBQUFDLFVDdEJBdEQsUUFBQUMsT0FBQSxjQUFBZSxXQUFBLGNBQUEsU0FBQSxTQUNBLFNBQUE4QixFQUFBd04sR0FFQXhOLEVBQUFrRSxPQUFBc0osRUFBQXNLLE9BQUEsUUFDQTlYLEVBQUEyTSxXQUFBYSxFQUFBc0ssT0FBQSxZQUNBOVgsRUFBQTRNLE1BQUFZLEVBQUFzSyxPQUFBLFNDTEE1YSxRQUFBQyxPQUFBLGNBQUFlLFdBQUEsYUFBQSxTQUFBLE9BQ0EsU0FBQThCLEVBQUFFLEdBQ0FBLEVBQUFFLEtBQUFDLEtBQUFPLFdBQUEsRUFDQVosRUFBQWdLLFdBQUE5SixFQUFBRSxLQUFBRyxHQUFBQyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAqKioqKioqKioqKioqKioqKioqKiBBbmd1bGFyICoqKioqKioqKioqKioqKioqKiogKi9cclxuYW5ndWxhci5tb2R1bGUoJ2ZpbmFuY2Vpcm8nLCBbJ25nTWF0ZXJpYWwnLCAnbmdNZXNzYWdlcycsICdkYXRhdGFibGVzJywgJ25nU2FuaXRpemUnLCAndWkucm91dGVyJywgJ25nQW5pbWF0ZScsICdqc29uRm9ybWF0dGVyJ10pXHJcbi5ydW4oWydEVERlZmF1bHRPcHRpb25zJywgZnVuY3Rpb24oRFREZWZhdWx0T3B0aW9ucyl7XHJcblx0RFREZWZhdWx0T3B0aW9ucy5zZXRMYW5ndWFnZVNvdXJjZShHZXRET01JTklPRW5kcG9pbnQoJ3JlY3Vyc29zL2FuZ3VsYXItZGF0YXRhYmxlcy1wdC1ici5qc29uJykpO1xyXG59XSlcclxuLmNvbmZpZyhbJyRtZFRoZW1pbmdQcm92aWRlcicsICckbG9jYXRpb25Qcm92aWRlcicsICckc3RhdGVQcm92aWRlcicsICckdXJsUm91dGVyUHJvdmlkZXInLCAnSlNPTkZvcm1hdHRlckNvbmZpZ1Byb3ZpZGVyJyxcclxuXHRmdW5jdGlvbigkbWRUaGVtaW5nUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyLCAkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyLCBKU09ORm9ybWF0dGVyQ29uZmlnUHJvdmlkZXIpIHtcclxuXHRcclxuXHQkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvJyk7XHJcblx0ICAgIFxyXG4gICAgJHN0YXRlUHJvdmlkZXJcclxuICAgIC5zdGF0ZSgnZmluYW5jZWlybycsIHtcclxuICAgIFx0dXJsOiAnLycsXHJcbiAgICBcdHRlbXBsYXRlVXJsOiBHZXRET01JTklPRW5kcG9pbnQoJ3ZpZXdzL3ByaW5jaXBhbC5odG1sJyksXHJcbiAgICBcdGNvbnRyb2xsZXI6ICdwcmluY2lwYWwnXHJcbiAgICB9KVxyXG4gICAgLnN0YXRlKCdmb3JtdWxhcmlvJywge1xyXG4gICAgXHR1cmw6ICcvZm9ybXVsYXJpbz9pZF9mb3JtJnRpcG9faWRpb21hJmJhbmNvJyxcclxuICAgICAgICB0ZW1wbGF0ZVVybDogR2V0RE9NSU5JT0VuZHBvaW50KCd2aWV3cy9mb3JtdWxhcmlvLmh0bWwnKSxcclxuICAgICAgICBjb250cm9sbGVyOiAnZm9ybXVsYXJpbydcclxuICAgIH0pXHJcbiAgICAuc3RhdGUoJ2NhZGFzdHJvLWZvcm11bGFyaW8nLCB7XHJcbiAgICBcdHVybDogJy9jYWRhc3Ryby1mb3JtdWxhcmlvJyxcclxuICAgICAgICB0ZW1wbGF0ZVVybDogR2V0RE9NSU5JT0VuZHBvaW50KCd2aWV3cy9jYWRhc3Ryby1mb3JtdWxhcmlvLmh0bWwnKSxcclxuICAgICAgICBjb250cm9sbGVyOiAnY2FkYXN0cm9Gb3JtdWxhcmlvJ1xyXG4gICAgfSlcclxuICAgIC5zdGF0ZSgnY29uZmlndXJhY29lcycsIHtcclxuICAgIFx0dXJsOiAnL2NvbmZpZ3VyYWNvZXMnLFxyXG4gICAgICAgIHRlbXBsYXRlVXJsOiBHZXRET01JTklPRW5kcG9pbnQoJ3ZpZXdzL2NvbmZpZ3VyYWNvZXMuaHRtbCcpLFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdjb25maWd1cmFjb2VzJ1xyXG4gICAgfSk7XHJcblx0XHJcbiAgICAvLyBBICMgcHJlY2lzYSBlc3RhciBoYWJpbGl0YWRhXHJcblx0JGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHtyZXF1aXJlQmFzZTogZmFsc2UsIGVuYWJsZWQ6IHRydWV9KTtcclxuXHRcclxuXHQvLyBUZW1hIGdlcmFkbyBlbTogaHR0cDovL21jZy5tYml0c29uLmNvbS8jL1xyXG5cdCRtZFRoZW1pbmdQcm92aWRlci5kZWZpbmVQYWxldHRlKCdjdXN0b21wdXJwbGUnLCB7XHJcblx0XHQgICc1MCc6ICcjZjBlZWY2JywnMTAwJzogJyNjNWJjZGMnLCcyMDAnOiAnI2E1OTdjOScsJzMwMCc6ICcjN2Q2OGIwJyxcclxuXHRcdCAgJzQwMCc6ICcjNmM1NWE0JywnNTAwJzogJyM1ZjRiOTAnLCc2MDAnOiAnIzUyNDE3YycsJzcwMCc6ICcjNDQzNjY4JyxcclxuXHRcdCAgJzgwMCc6ICcjMzcyYzU0JywnOTAwJzogJyMyYTIxNDAnLCdBMTAwJzogJyNmMGVlZjYnLCdBMjAwJzogJyNjNWJjZGMnLFxyXG5cdFx0ICAnQTQwMCc6ICcjNmM1NWE0JywnQTcwMCc6ICcjNDQzNjY4JywnY29udHJhc3REZWZhdWx0Q29sb3InOiAnbGlnaHQnLFxyXG5cdFx0ICAnY29udHJhc3REYXJrQ29sb3JzJzogJzUwIDEwMCAyMDAgQTEwMCBBMjAwJ1xyXG5cdFx0fSk7XHJcblxyXG5cdCRtZFRoZW1pbmdQcm92aWRlci50aGVtZSgnZGVmYXVsdCcpXHJcblx0XHQucHJpbWFyeVBhbGV0dGUoJ2N1c3RvbXB1cnBsZScpXHJcblx0XHQuYWNjZW50UGFsZXR0ZSgnb3JhbmdlJyk7XHJcblx0XHJcblx0JG1kVGhlbWluZ1Byb3ZpZGVyLmVuYWJsZUJyb3dzZXJDb2xvcih7XHJcblx0XHR0aGVtZTogJ2RlZmF1bHQnLFxyXG5cdFx0cGFsZXR0ZTogJ3ByaW1hcnknLFxyXG5cdFx0aHVlOiAnODAwJyBcclxuXHR9KTtcclxuXHRcclxuXHRKU09ORm9ybWF0dGVyQ29uZmlnUHJvdmlkZXIuaG92ZXJQcmV2aWV3RW5hYmxlZCA9IHRydWU7XHJcblx0SlNPTkZvcm1hdHRlckNvbmZpZ1Byb3ZpZGVyLmhvdmVyUHJldmlld0FycmF5Q291bnQ9MTAwO1xyXG5cdEpTT05Gb3JtYXR0ZXJDb25maWdQcm92aWRlci5ob3ZlclByZXZpZXdGaWVsZENvdW50PTU7XHJcbn1dKTtcclxuXHJcbi8qKlxyXG4gKiBbdHVkb11cclxuICogQ29udHJvbGVyIGdlcmFsIGRvIGZvcm11bMOhcmlvLlxyXG4gKiBSYXBoYWVsIEJyYW5kw6NvIC0gMjgvMTAvMjAxNlxyXG4gKi9cclxuYW5ndWxhci5tb2R1bGUoJ2ZpbmFuY2Vpcm8nKS5jb250cm9sbGVyKCd0dWRvJywgWyckc2NvcGUnLCAnJG1kU2lkZW5hdicsICckZWN2JywgJyRtZE1lZGlhJyxcclxuXHRmdW5jdGlvbigkc2NvcGUsICRtZFNpZGVuYXYsICRlY3YsICRtZE1lZGlhKXtcdFxyXG5cdFxyXG5cdCRzY29wZS5tZW51ID0gJGVjdi5tZW51O1xyXG5cdCRlY3YubWVudS5odG1sLmZpeGFkbyA9IHRydWU7XHJcblx0XHJcblx0JGVjdi5tZW51LmZuLnRvZ2dsZSA9IGZ1bmN0aW9uKGJvb2wpIHtcclxuXHRcdGlmKGJvb2wgfHwgJG1kTWVkaWEoJ2d0LW1kJykpe1xyXG5cdFx0XHQkZWN2Lm1lbnUuaHRtbC5maXhhZG8gPSAhJGVjdi5tZW51Lmh0bWwuZml4YWRvO1xyXG4gICAgXHRcdHJldHVybjtcclxuXHRcdH1cclxuXHRcdCRtZFNpZGVuYXYoJ2xlZnQnKS50b2dnbGUoKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgICRlY3YubWVudS5mbi5jbG9zZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgXHRpZigkZWN2Lm1lbnUuaHRtbC5maXhhZG8pe1xyXG4gICAgXHRcdCRlY3YubWVudS5odG1sLmZpeGFkbyA9IGZhbHNlO1xyXG4gICAgXHRcdHJldHVybjtcclxuICAgIFx0fVxyXG5cdFx0JG1kU2lkZW5hdignbGVmdCcpLmNsb3NlKCk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICAkc2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCkgeyByZXR1cm4gJG1kTWVkaWEoJ2d0LW1kJyk7IH0sIGZ1bmN0aW9uKGJvb2wpIHtcclxuXHQgICAgaWYoJGVjdi5tZW51Lmh0bWwuZml4YWRvICYmICFib29sICYmICRlY3YubWVudS5odG1sLmNhcnJlZ2FkbykgXHJcblx0ICAgIFx0JGVjdi5tZW51LmZuLnRvZ2dsZSh0cnVlKTtcclxuXHR9KTtcclxuICAgIFxyXG4gICAgJHNjb3BlLiR3YXRjaChmdW5jdGlvbigpIHsgcmV0dXJuICRlY3YubWVudS5odG1sLmNhcnJlZ2FkbzsgfSwgZnVuY3Rpb24oYm9vbCkge1xyXG5cdCAgICBpZigkZWN2Lm1lbnUuaHRtbC5maXhhZG8gJiYgISRtZE1lZGlhKCdndC1tZCcpICYmIGJvb2wpIFxyXG5cdCAgICBcdCRlY3YubWVudS5mbi50b2dnbGUodHJ1ZSk7XHJcblx0fSk7XHJcblx0XHJcbn1dKTsiLCIvKipcclxuICogW2VjdkF1dG9jb21wbGV0ZV1cclxuICogRGlyZXRpdmEgcGFyYSBjb250cm9sZSBkbyBhdXRvY29tcGxldGUuXHJcbiAqIEd1c3Rhdm8gRG9taW5ndWV0aSAtIDE2LzEyLzIwMTZcclxuICovXHJcbmFuZ3VsYXIubW9kdWxlKCdmaW5hbmNlaXJvJykuZGlyZWN0aXZlKCdlY3ZBdXRvY29tcGxldGUnLCBbJyRtZERpYWxvZycsIGZ1bmN0aW9uKCRtZERpYWxvZyl7XHJcblx0cmV0dXJuIHtcclxuXHRcdHJlc3RyaWN0OiAnRScsXHRcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdGNvbXBvbmVudGU6ICc9J1xyXG5cdFx0fSxcclxuXHRcdHRlbXBsYXRlVXJsOiBHZXRET01JTklPRW5kcG9pbnQoJ2FuZ3VsYXItdGVtcGxhdGVzL2NvbXBvbmVudGVzL2Vjdi1hdXRvY29tcGxldGUuaHRtbCcpLFxyXG5cdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pe1xyXG5cdFx0XHRcclxuXHRcdFx0IHNjb3BlLm1vZGFsTWRBdXRvY29tcGxldGUgPSBmdW5jdGlvbihjb21wb25lbnRlLCBldil7XHJcblx0XHRcdFx0XHQkbWREaWFsb2cuc2hvdyh7XHJcblx0XHRcdFx0XHRcdG11bHRpcGxlOiB0cnVlLFxyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogR2V0RE9NSU5JT0VuZHBvaW50KCdhbmd1bGFyLXRlbXBsYXRlcy9tb2RhbHMvZWN2LW1vZGFsLWF1dG9jb21wbGV0ZS5odG1sJyksXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdlY3ZNb2RhbEF1dG9jb21wbGV0ZScsXHJcblx0XHRcdFx0XHRcdHBhcmVudDogYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LmJvZHkpLFxyXG5cdFx0XHRcdFx0XHR0YXJnZXRFdmVudDogZXYsXHJcblx0XHRcdFx0XHRcdGNsaWNrT3V0c2lkZVRvQ2xvc2U6dHJ1ZSxcclxuXHRcdFx0XHRcdFx0bG9jYWxzOiB7XHJcblx0XHRcdFx0XHRcdFx0Y29tcG9uZW50ZTogc2NvcGUuY29tcG9uZW50ZSxcclxuXHRcdFx0XHRcdFx0XHRmbjoge1xyXG5cdFx0XHRcdFx0XHRcdFx0Y2xvc2U6ICBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0JG1kRGlhbG9nLmNhbmNlbCgpO1xyXG5cdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdFx0XHJcblx0XHR9XHJcblx0fTtcclxufV0pOyIsIi8qKlxyXG4gKiBbZWN2Q29tYm9ib3hdXHJcbiAqIENyaWEgbyBjb21ib2JveC5cclxuICogUmFwaGFlbCBCcmFuZMOjbyAtIDI0LzAxLzIwMTdcclxuICovXHJcbmFuZ3VsYXIubW9kdWxlKCdmaW5hbmNlaXJvJykuZGlyZWN0aXZlKCdlY3ZDb21ib2JveCcsIFsnJGh0dHAnLCBmdW5jdGlvbigkaHR0cCl7XHJcblx0cmV0dXJuIHtcclxuXHRcdHJlc3RyaWN0OiAnRScsXHJcblx0XHRzY29wZToge1xyXG5cdFx0XHRkZXNhYmlsaXRhZG86ICdAPycsXHJcblx0XHRcdG9icmlnYXRvcmlvOiAnQD8nLFxyXG5cdFx0XHRyZWZlcmVuY2lhOiAnQCcsXHJcblx0XHRcdGFsaWFzOiAnQCcsXHJcblx0XHRcdG1vZGVsbzogJz0nLFxyXG5cdFx0XHRhamF4OiAnQD8nLFxyXG5cdFx0XHRvcGNvZXM6ICc9PycsXHJcblx0XHRcdGRlc2NyaWNhbzogJ0A/J1xyXG5cdFx0fSxcclxuXHRcdHRyYW5zY2x1ZGU6IHRydWUsXHJcblx0XHR0ZW1wbGF0ZVVybDogR2V0RE9NSU5JT0VuZHBvaW50KCdhbmd1bGFyLXRlbXBsYXRlcy9jb21wb25lbnRlcy9lY3YtY29tYm9ib3guaHRtbCcpLFxyXG5cdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pe1xyXG5cdFx0XHR2YXIgY2FycmVnYWRvID0gZmFsc2U7XHJcblx0XHRcdFxyXG5cdFx0XHRzY29wZS4kd2F0Y2goZnVuY3Rpb24oKXsgcmV0dXJuIHNjb3BlLm1vZGVsbzsgfSwgZnVuY3Rpb24obil7XHJcblx0XHRcdFx0aWYobil7XHJcblx0XHRcdFx0XHRzY29wZS5vcGNvZXMuZm9yRWFjaChmdW5jdGlvbihvcGNhbyl7XHJcblx0XHRcdFx0XHRcdGlmKG5bc2NvcGUuZGVzY3JpY2FvXSA9PT0gb3BjYW9bc2NvcGUuZGVzY3JpY2FvXSAmJiBuICE9PSBvcGNhbykgc2NvcGUubW9kZWxvID0gb3BjYW87XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0aWYoIXNjb3BlLmFqYXggfHwgY2FycmVnYWRvKSByZXR1cm47XHJcblx0XHRcdCRodHRwLmdldChHZXRSRVNURW5kcG9pbnQoc2NvcGUuYWpheCkpLnRoZW4oZnVuY3Rpb24ocmVzcCl7XHJcblx0XHRcdFx0aWYocmVzcC5kYXRhLlJldG9ybm8pe1xyXG5cdFx0XHRcdFx0Y2FycmVnYWRvID0gdHJ1ZTtcclxuXHRcdFx0XHRcdHNjb3BlLm9wY29lcyA9IHJlc3AuZGF0YS5SZXRvcm5vO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fVxyXG59XSk7IiwiLyoqXHJcbiAqIFtlY3ZHcmFkZURldGFsaGVdXHJcbiAqIERpcmV0aXZhIHJlc3BvbnPDoXZlbCBwb3IgaW1wbGVtZW50YXIgYSBncmFkZSBkZSBleGliacOnw6NvIGRvcyBkZXRhbGhlc1xyXG4gKiBwYXJhIG1vc3RyYXIgbyBjb250ZcO6ZG8gcmVmZXJlbnRlIGFvIGZvcm11bMOhcmlvIGNhcnJlZ2Fkby5cclxuICovXHJcbmFuZ3VsYXIubW9kdWxlKCdmaW5hbmNlaXJvJykuZGlyZWN0aXZlKCdlY3ZHcmFkZURldGFsaGUnLCBbZnVuY3Rpb24oKXtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdGNvbXBvbmVudGU6ICc9JyxcclxuXHRcdFx0ZGF0YTogJz0nXHJcblx0XHR9LFxyXG5cdFx0dGVtcGxhdGVVcmw6IEdldERPTUlOSU9FbmRwb2ludCgnYW5ndWxhci10ZW1wbGF0ZXMvY29tcG9uZW50ZXMvZWN2LWdyYWRlLWRldGFsaGUuaHRtbCcpLFxyXG5cdFx0Y29udHJvbGxlcjogWyckc2NvcGUnLCAnRFRPcHRpb25zQnVpbGRlcicsICdEVENvbHVtbkJ1aWxkZXInLCAnJGh0dHAnLCAnJGVjdicsICckbWREaWFsb2cnLCAnJGNvbXBpbGUnLCAnJHRpbWVvdXQnLFxyXG5cdFx0ICAgIGZ1bmN0aW9uKCRzY29wZSwgRFRPcHRpb25zQnVpbGRlciwgRFRDb2x1bW5CdWlsZGVyLCAkaHR0cCwgJGVjdiwgJG1kRGlhbG9nLCAkY29tcGlsZSwgJHRpbWVvdXQpe1x0XHJcblx0XHRcdFxyXG5cdFx0XHQvLyBTZSBvIHZhbG9yIGRvIGNvbXBvbmVudGUgdmluY3VsYWRvIG11ZGFyLCBvIGEgZ3JhZGUgc2Vyw6EgcmVjYXJyZWdhZGFcclxuXHRcdFx0dmFyIGRldGFsaGFtZW50byA9ICRzY29wZS5jb21wb25lbnRlLmRldGFsaGFtZW50bztcclxuXHRcdFx0XHJcblx0XHRcdGlmKCFkZXRhbGhhbWVudG8uY2FycmVnYXJGb3JtKSByZXR1cm4gJGVjdi50b2FzdC5lcnJvKCdBIGdyYWRlIGRlIGV4aWJpw6fDo28gKGlkOiAnICsgJHNjb3BlLmNvbXBvbmVudGUuaWQgXHJcblx0XHRcdFx0XHQrICcpIG7Do28gY29udGVtIG8gZGV0YWxoZSBkbyB0aXBvIGNhcnJlZ2FyRm9ybSAoNzUxNCkuIEVzdGUgZGV0YWxoZSDDqSBvYnJpZ2F0w7NyaW8gZSBkZXZlIGNvbnRlciBvIGZvcnVtw6FyaW8gYSBzZXIgY2FycmVnYWRvLicsICdFcnJvIGFvIGNyaWFyIGEgR3JhZGVEZXRhbGhlJyk7XHJcblx0XHRcdFxyXG5cdFx0XHQvLyBDcmlhIG8gY29udGFpbmVyIGRvcyBkYWRvc1xyXG5cdFx0XHRkZXRhbGhhbWVudG8uZGF0YSA9IERUT3B0aW9uc0J1aWxkZXJcclxuXHRcdFx0XHQubmV3T3B0aW9ucygpXHJcblx0XHRcdFx0LndpdGhQYWdpbmF0aW9uVHlwZSgnZnVsbF9udW1iZXJzJyk7XHJcblx0XHRcdFxyXG5cdFx0XHRkZXRhbGhhbWVudG8uaW5zdGFuY2lhID0ge307XHJcblx0XHRcdFxyXG5cdFx0XHQvLyBBw6fDo28gZG8gYm90w6NvIGRlIG5vdm9cclxuXHRcdFx0JHNjb3BlLm5vdm8gPSBmdW5jdGlvbihldil7XHJcblx0XHRcdFx0bW9kYWxEZXRhbGhlKHtcclxuXHRcdFx0XHRcdGlkRm9ybSA6IGRldGFsaGFtZW50by5jYXJyZWdhckZvcm1cclxuXHRcdFx0XHR9LCBmdW5jdGlvbihuRGF0YSkge1xyXG5cdFx0XHRcdFx0JHNjb3BlLmNvbXBvbmVudGUubW9kZWxvWyRzY29wZS5jb21wb25lbnRlLnVsdGltYVJlZmVyZW5jaWFdLnB1c2gobkRhdGEpO1xyXG5cdFx0XHQgICAgXHQkZWN2LnRvYXN0Lm9rKCdOb3ZvIGRldGFsaGUgaW5zZXJpZG8nKTtcclxuXHRcdFx0ICAgIH0sIGZ1bmN0aW9uKGNEYXRhKXtcclxuXHRcdFx0ICAgIFx0Ly8gVE9ETzogcmVhYnJpciBtb2RhbCBwYXJhIHJlY3VwZXJhciBvcyBkYWRvc1xyXG5cdFx0XHQgICAgfSwgZXYpO1xyXG5cdFx0XHR9XHJcblx0XHRcdFxyXG5cdFx0XHQvLyBBw6fDo28gZGEgbGluaGEgcGFyYSBhdHVhbGl6YXJcclxuXHRcdFx0JHNjb3BlLmF0dWFsaXphciA9IGZ1bmN0aW9uKGFEYXRhLCBldil7XHJcblx0XHRcdFx0dmFyIGNvcHkgPSBhbmd1bGFyLmNvcHkoYURhdGEpO1xyXG5cdFx0XHRcdG1vZGFsRGV0YWxoZSh7XHJcblx0XHRcdFx0XHRtb2RlbG86IGFEYXRhLFxyXG5cdFx0XHRcdCAgICBpZEZvcm0gOiBkZXRhbGhhbWVudG8uY2FycmVnYXJGb3JtXHJcblx0XHRcdFx0fSwgZnVuY3Rpb24obkRhdGEpIHtcclxuXHRcdFx0XHRcdGRldGFsaGFtZW50by5pbnN0YW5jaWEucmVyZW5kZXIoKTtcclxuXHRcdFx0ICAgIFx0JGVjdi50b2FzdC5vaygnRGV0YWxoZSBhdHVhbGl6YWRvJyk7XHJcblx0XHRcdCAgICB9LCBmdW5jdGlvbihjRGF0YSkge1xyXG5cdFx0XHQgICAgXHRmb3IodmFyIGtleSBpbiBhRGF0YSlcclxuXHRcdFx0ICAgIFx0XHRhRGF0YVtrZXldID0gY29weVtrZXldO1xyXG5cdFx0XHQgICAgfSwgZXYpO1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRcclxuXHRcdFx0Ly8gQcOnw6NvIGRhIGxpbmhhIHBhcmEgZGVsZXRhclxyXG5cdFx0XHQkc2NvcGUuZGVsZXRhciA9IGZ1bmN0aW9uKGluZGV4KXtcclxuXHRcdFx0XHQkdGltZW91dChmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0JHNjb3BlLmNvbXBvbmVudGUubW9kZWxvWyRzY29wZS5jb21wb25lbnRlLnVsdGltYVJlZmVyZW5jaWFdLnNwbGljZShpbmRleCwgMSk7XHJcblx0XHRcdFx0XHQvL2RldGFsaGFtZW50by5pbnN0YW5jaWEucmVyZW5kZXIoKTtcclxuXHRcdFx0XHR9LCAwKTtcdFx0XHJcblx0XHRcdH07XHJcblx0XHRcdFxyXG5cdFx0XHQvLyBCdXNjYSB2YWxvciBkYSBjaGF2ZSBjb21wb3N0YVxyXG5cdFx0XHQkc2NvcGUuYnVzY2FWYWxvciA9IGZ1bmN0aW9uKGNoYXZlLCBsaW5oYSl7XHJcblx0XHRcdFx0dmFyIGV2ID0gJ2xpbmhhLicgKyBjaGF2ZTtcclxuXHRcdFx0XHRyZXR1cm4gZXZhbChldik7XHJcblx0XHRcdH1cclxuXHRcdFx0XHJcblx0XHRcdCRodHRwLmdldChHZXRSRVNURW5kcG9pbnQoZGV0YWxoYW1lbnRvLmNhYmVjYWxob0dyYWRlKSkudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdGlmKHJlcy5kYXRhLlJlc3VsdGFkbyA9PT0gJ0VSUk8nKSByZXR1cm4gJGVjdi50b2FzdC5lcnJvKHJlcy5kYXRhLkVycm8sICdFcnJvIGFvIGJ1c2NhciBjYWJlw6dhbGhvIEdyYWRlRGV0YWxoZScpO1xyXG5cdFx0XHRcdGlmKCFyZXMuZGF0YSB8fCAhcmVzLmRhdGEuUmV0b3JubyB8fCByZXMuZGF0YS5SZXRvcm5vLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xyXG5cdFx0XHRcdGRldGFsaGFtZW50by5jb2x1bmFzID0gW107XHJcblx0XHRcdFx0ZGV0YWxoYW1lbnRvLmNvbHVuYXNSYXcgPSBbXTtcclxuXHRcdFx0XHRyZXMuZGF0YS5SZXRvcm5vLnNvcnQoZnVuY3Rpb24oYSxiKXtcclxuXHRcdFx0XHRcdHJldHVybiBhLmlkIC0gYi5pZDtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRyZXMuZGF0YS5SZXRvcm5vLmZvckVhY2goZnVuY3Rpb24ob2JqKXtcclxuXHRcdFx0XHRcdGRldGFsaGFtZW50by5jb2x1bmFzLnB1c2goRFRDb2x1bW5CdWlsZGVyLm5ld0NvbHVtbihvYmouY2hhdmUpLndpdGhUaXRsZShvYmouYWxpYXMpKTtcclxuXHRcdFx0XHRcdGRldGFsaGFtZW50by5jb2x1bmFzUmF3LnB1c2goeyBrZXk6IG9iai5jaGF2ZSB9KTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRkZXRhbGhhbWVudG8uY29sdW5hcy5wdXNoKERUQ29sdW1uQnVpbGRlci5uZXdDb2x1bW4oJ0HDp8O1ZXMnKS53aXRoVGl0bGUoJ0HDp8O1ZXMnKSk7XHJcblx0XHRcdFx0JHNjb3BlLmNvbXBvbmVudGUuYXV0b3JpemFkbyA9IHRydWU7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0JGVjdi50b2FzdC5vaygnVGFiZWxhIGNhcnJlZ2FkYSBjb20gc3VjZXNzbyEnKTtcclxuXHRcdFx0fSwgZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdFcnJvIGFvIGJ1c2NhciBjYWJlw6dhbGhvIEdyYWRlRGV0YWxoZScpO1xyXG5cdFx0XHR9KTtcclxuXHRcdFx0XHJcblx0XHRcdFxyXG5cdFx0XHRmdW5jdGlvbiBtb2RhbERldGFsaGUoJGRhdGEsIGRldGFsaGVPaywgZGV0YWxoZUVycm9yLCBldil7XHJcblx0XHRcdFx0JG1kRGlhbG9nLnNob3coe1xyXG5cdFx0XHRcdFx0bXVsdGlwbGU6IHRydWUsXHJcblx0XHRcdFx0ICAgIGNvbnRyb2xsZXI6ICdlY3ZNb2RhbEZvcm1EZXRhaWwnLFxyXG5cdFx0XHRcdCAgICB0ZW1wbGF0ZVVybDogJ2FuZ3VsYXItdGVtcGxhdGVzL21vZGFscy9lY3YtbW9kYWwtZm9ybS1kZXRhaWwuaHRtbCcsXHJcblx0XHRcdFx0ICAgIHBhcmVudDogYW5ndWxhci5lbGVtZW50KCdmb3JtID4gbWQtY29udGVudCcpLFxyXG5cdFx0XHRcdCAgICBjbGlja091dHNpZGVUb0Nsb3NlOiBmYWxzZSxcclxuXHRcdFx0XHQgICAgdGFyZ2V0RXZlbnQ6IGV2LFxyXG5cdFx0XHRcdCAgICBmdWxsc2NyZWVuOiBmYWxzZSxcclxuXHRcdFx0XHQgICAgbG9jYWxzOiB7XHJcblx0XHRcdFx0ICAgIFx0JGRhdGE6ICRkYXRhXHJcblx0XHRcdFx0ICAgIH1cclxuXHRcdFx0XHR9KS50aGVuKGRldGFsaGVPaywgZGV0YWxoZUVycm9yKTtcclxuXHRcdFx0fVxyXG5cdFx0fV1cclxuXHR9O1xyXG59XSk7IiwiLyoqXHJcbiAqIFtlY3ZHcmFkZV1cclxuICogRGlyZXRpdmEgcmVzcG9uc8OhdmVsIHBvciBpbXBsZW1lbnRhciBhIGdyYWRlIGRlIGV4aWJpw6fDo28gZG9zXHJcbiAqIHBhcmEgbW9zdHJhciBvIGNvbnRlw7pkbyByZWZlcmVudGUgYW8gZm9ybXVsw6FyaW8gY2FycmVnYWRvLlxyXG4gKi9cclxuYW5ndWxhci5tb2R1bGUoJ2ZpbmFuY2Vpcm8nKS5kaXJlY3RpdmUoJ2VjdkdyYWRlJywgWydEVE9wdGlvbnNCdWlsZGVyJywgJ0RUQ29sdW1uQnVpbGRlcicsICckaHR0cCcsICckZWN2JyxcclxuXHRmdW5jdGlvbihEVE9wdGlvbnNCdWlsZGVyLCBEVENvbHVtbkJ1aWxkZXIsICRodHRwLCAkZWN2KXtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdGNvbXBvbmVudGU6ICc9JyxcclxuXHRcdFx0ZGF0YTogJz0nXHJcblx0XHR9LFxyXG5cdFx0dGVtcGxhdGVVcmw6IEdldERPTUlOSU9FbmRwb2ludCgnYW5ndWxhci10ZW1wbGF0ZXMvY29tcG9uZW50ZXMvZWN2LWdyYWRlLmh0bWwnKSxcclxuXHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKXtcdFx0XHRcclxuXHRcdFx0XHJcblx0XHRcdHZhciBkZXRhbGhhbWVudG8gPSBzY29wZS5jb21wb25lbnRlLmRldGFsaGFtZW50bztcclxuXHRcdFx0ZGV0YWxoYW1lbnRvLmRhdGEgPSBEVE9wdGlvbnNCdWlsZGVyXHJcblx0XHRcdFx0LmZyb21Tb3VyY2UoR2V0UkVTVEVuZHBvaW50KGRldGFsaGFtZW50by5vcGNvZXMpKVxyXG5cdFx0ICAgICAgICAud2l0aE9wdGlvbigncm93Q2FsbGJhY2snLCByb3dDYWxsYmFjaylcclxuXHRcdFx0XHQud2l0aERhdGFQcm9wKCdSZXRvcm5vJylcclxuXHRcdFx0XHQud2l0aFBhZ2luYXRpb25UeXBlKCdmdWxsX251bWJlcnMnKTtcclxuXHRcdFx0XHJcblx0XHRcdGRldGFsaGFtZW50by5pbnN0YW5jaWEgPSB7fTtcclxuXHRcdFx0c2NvcGUucmVjYXJyZWdhciA9IGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0ZGV0YWxoYW1lbnRvLmluc3RhbmNpYS5yZWxvYWREYXRhKCk7XHJcblx0XHRcdH07XHJcblx0XHRcdFxyXG5cdFx0XHQkaHR0cC5nZXQoR2V0UkVTVEVuZHBvaW50KGRldGFsaGFtZW50by5jYWJlY2FsaG9HcmFkZSkpLnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJykgcmV0dXJuICRlY3YudG9hc3QuZXJybyhyZXMuZGF0YS5FcnJvLCAnSG91dmUgdW0gZXJybyBhbyBpbnNlcmlyJyk7XHJcblx0XHRcdFx0aWYoIXJlcy5kYXRhIHx8ICFyZXMuZGF0YS5SZXRvcm5vIHx8IHJlcy5kYXRhLlJldG9ybm8ubGVuZ3RoID09PSAwKSByZXR1cm47XHJcblx0XHRcdFx0ZGV0YWxoYW1lbnRvLmNvbHVuYXMgPSBbXTtcclxuXHRcdFx0XHRyZXMuZGF0YS5SZXRvcm5vLnNvcnQoZnVuY3Rpb24oYSxiKXtcclxuXHRcdFx0XHRcdHJldHVybiBhLmlkIC0gYi5pZDtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRyZXMuZGF0YS5SZXRvcm5vLmZvckVhY2goZnVuY3Rpb24ob2JqKXtcclxuXHRcdFx0XHRcdGRldGFsaGFtZW50by5jb2x1bmFzLnB1c2goRFRDb2x1bW5CdWlsZGVyLm5ld0NvbHVtbihvYmouYWxpYXMpLndpdGhUaXRsZShvYmouYWxpYXMpKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRzY29wZS5jb21wb25lbnRlLmF1dG9yaXphZG8gPSB0cnVlO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdCRlY3YudG9hc3Qub2soJ1RhYmVsYSBjYXJyZWdhZGEgY29tIHN1Y2Vzc28hJyk7XHJcblx0XHRcdH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0JGVjdi50b2FzdC5lcnJvKGVyci5kYXRhLCAnSG91dmUgdW0gZXJybyBhbyBpbnNlcmlyJyk7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRcclxuXHRcdFx0ZnVuY3Rpb24gcm93Q2FsbGJhY2soblJvdywgYURhdGEsIGlEaXNwbGF5SW5kZXgsIGlEaXNwbGF5SW5kZXhGdWxsKSB7XHJcblx0XHRcdCAgICAkKCd0ZCcsIG5Sb3cpLnVuYmluZCgnY2xpY2snKTtcclxuXHRcdFx0ICAgICQoJ3RkJywgblJvdykuYmluZCgnY2xpY2snLCBmdW5jdGlvbigpIHtcclxuXHRcdFx0ICAgIFx0aWYoIWFEYXRhLklEKSByZXR1cm47XHJcblx0XHRcdCAgICBcdCRlY3YudG9hc3Qub2soJ0J1c2NhbmRvIHJlZ2lzdHJvLi4uJyk7XHJcblx0XHRcdCAgICAgICAgJGh0dHAuZ2V0KEdldFJFU1RFbmRwb2ludChkZXRhbGhhbWVudG8udW5pY29SZWdpc3RybyArICcvJyArIGFEYXRhLklEKSlcclxuXHRcdFx0ICAgICAgICAudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHQgICAgICAgIFx0aWYocmVzLmRhdGEuUmVzdWx0YWRvID09PSAnRVJSTycpIHJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0hvdXZlIHVtIGVycm8gYW8gYnVzY2FyJyk7XHJcblx0XHRcdCAgICAgICAgXHRcclxuXHRcdFx0ICAgICAgICBcdHZhciB0ZWxhRm9ybXVsYXJpbztcclxuXHRcdFx0ICAgICAgICBcdHNjb3BlLmRhdGEubW9kZWwgPSByZXMuZGF0YS5SZXRvcm5vO1xyXG5cdFx0XHQgICAgICAgIFx0c2NvcGUuZGF0YS50ZWxhcy5mb3JFYWNoKGZ1bmN0aW9uKHRlbGEsIHRlbGFJbmRleCl7XHJcblx0XHRcdCAgICAgICAgXHRcdGlmKHRlbGEudGlwbyA9PT0gJ1RFTEEgREUgUEVTUVVJU0EnKSByZXR1cm47XHJcblx0XHRcdCAgICAgICAgXHRcdHRlbGFGb3JtdWxhcmlvID0gdGVsYUluZGV4O1xyXG5cdFx0XHQgICAgICAgIFx0XHR0ZWxhLmNvbnRhaW5lcnMuZm9yRWFjaChmdW5jdGlvbihjb250YWluZXIpe1xyXG5cdFx0XHRcdFx0XHRcdFx0Y29udGFpbmVyLmZvckVhY2goZnVuY3Rpb24oZ3VpYSl7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmKCFndWlhLmNvbXBvbmVudGVzKSByZXR1cm47XHJcblx0XHRcdFx0XHRcdFx0XHRcdGd1aWEuY29tcG9uZW50ZXMuZm9yRWFjaChmdW5jdGlvbihjb21wb25lbnRlKXtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQkZWN2LnV0aWxzLnJlY3VyKHNjb3BlLmRhdGEubW9kZWwsIGNvbXBvbmVudGUucmVmZXJlbmNpYSwgY29tcG9uZW50ZSk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdH0pO1x0XHJcblx0XHRcdCAgICAgICAgXHRcclxuXHRcdFx0ICAgICAgICBcdHNjb3BlLmRhdGEudGVsYXMuc2VsZWNpb25hZGEgPSB0ZWxhRm9ybXVsYXJpbztcclxuXHRcdFx0ICAgICAgICBcdCRlY3YudG9hc3Qub2soJ1JlZ2lzdHJvIGNhcnJlZ2FkbyEnKTtcclxuXHRcdFx0XHRcdFx0XHJcblx0XHRcdCAgICAgICAgfSwgZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHRcdFx0JGVjdi50b2FzdC5lcnJvKGVyci5kYXRhLCAnSG91dmUgdW0gZXJybyBhbyBidXNjYXInKTtcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdCAgICB9KTtcclxuXHRcdFx0ICAgIHJldHVybiBuUm93O1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fTtcclxufV0pOyIsIi8qKlxyXG4gKiBbZWN2QXV0b2NvbXBsZXRlODAxXVxyXG4gKiBEaXJldGl2YSBwYXJhIGNvbnRyb2xlIGRvIGF1dG9jb21wbGV0ZSBkZSBidXNjYSBlIGNhZGFzdHJvIGRhIHQ4MDEuXHJcbiAqIFJhcGhhZWwgQnJhbmTDo28gLSAyNi8wMS8yMDE3XHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmRpcmVjdGl2ZSgnZWN2SHRtbEF1dG9jb21wbGV0ZScsIFsnJG1kRGlhbG9nJywgZnVuY3Rpb24oJG1kRGlhbG9nKXtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcdFxyXG5cdFx0c2NvcGU6IHtcclxuXHRcdFx0ZGVzYWJpbGl0YWRvOiAnQD8nLFxyXG5cdFx0XHRvYnJpZ2F0b3JpbzogJ0A/JyxcclxuXHRcdFx0cmVmZXJlbmNpYTogJ0AnLFxyXG5cdFx0XHRhbGlhczogJ0AnLFxyXG5cdFx0XHRpbnB1dEFsaWFzOiAnQCcsXHJcblx0XHRcdG1vZGVsbzogJz0nLFxyXG5cdFx0XHRvcGNvZXM6ICdAPycsXHJcblx0XHRcdGNhcmFjdGVyZXNNaW5pbW9zOiAnQD8nXHJcblx0XHR9LFxyXG5cdFx0dGVtcGxhdGVVcmw6IEdldERPTUlOSU9FbmRwb2ludCgnYW5ndWxhci10ZW1wbGF0ZXMvY29tcG9uZW50ZXMvZWN2LWh0bWwtYXV0b2NvbXBsZXRlLmh0bWwnKSxcclxuXHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKXtcdFx0XHRcclxuXHRcdFx0c2NvcGUubW9kYWxNZEF1dG9jb21wbGV0ZSA9IGZ1bmN0aW9uKGV2KXtcclxuXHRcdFx0XHQkbWREaWFsb2cuc2hvdyh7XHJcblx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogR2V0RE9NSU5JT0VuZHBvaW50KCdhbmd1bGFyLXRlbXBsYXRlcy9tb2RhbHMvZWN2LW1vZGFsLWh0bWwtYXV0b2NvbXBsZXRlLmh0bWwnKSxcclxuXHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdlY3ZNb2RhbEh0bWxBdXRvY29tcGxldGUnLFxyXG5cdFx0XHRcdFx0cGFyZW50OiBhbmd1bGFyLmVsZW1lbnQoZG9jdW1lbnQuYm9keSksXHJcblx0XHRcdFx0XHR0YXJnZXRFdmVudDogZXYsXHJcblx0XHRcdFx0XHRjbGlja091dHNpZGVUb0Nsb3NlOnRydWUsXHJcblx0XHRcdFx0XHRsb2NhbHM6IHtcclxuXHRcdFx0XHRcdFx0Y29tcG9uZW50ZTogc2NvcGUsXHJcblx0XHRcdFx0XHRcdGZuOiB7XHJcblx0XHRcdFx0XHRcdFx0Y2xvc2U6ICBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRcdCRtZERpYWxvZy5jYW5jZWwoKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fTtcclxuXHRcdFx0XHRcdFx0XHJcblx0XHR9XHJcblx0fTtcclxufV0pOyIsIi8qKlxyXG4gKiBbZWN2SHRtbEdyYWRlXVxyXG4gKiBEaXJldGl2YSByZXNwb25zw6F2ZWwgcG9yIGltcGxlbWVudGFyIGEgZ3JhZGUgZGUgZXhpYmnDp8OjbyBkb3NcclxuICogcGFyYSBtb3N0cmFyIG8gY29udGXDumRvIHJlZmVyZW50ZSBhbyBmb3JtdWzDoXJpbyBjYXJyZWdhZG8uXHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmRpcmVjdGl2ZSgnZWN2SHRtbEdyYWRlJywgWydEVE9wdGlvbnNCdWlsZGVyJywgJ0RUQ29sdW1uQnVpbGRlcicsICckaHR0cCcsICckZWN2JywgJyRtZERpYWxvZycsXHJcblx0ZnVuY3Rpb24oRFRPcHRpb25zQnVpbGRlciwgRFRDb2x1bW5CdWlsZGVyLCAkaHR0cCwgJGVjdiwgJG1kRGlhbG9nKXtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdGNvbHVuYXM6ICc9PycsXHJcblx0XHRcdG1vZGVsbzogJz0/JyxcclxuXHRcdFx0ZWRpdGFyOiAnPT8nLFxyXG5cdFx0XHRkZWxldGFyOiAnPT8nLFxyXG5cdFx0XHRvcGNvZXM6ICdAPycsXHJcblx0XHRcdGNhYmVjYWxob0dyYWRlOiAnQD8nLFxyXG5cdFx0XHRsaW5oYUNsaXF1ZTogJz0/JyxcclxuXHRcdFx0ZGlhbG9nb0RlbGV0YXIgOiAnPT8nXHJcblx0XHR9LFxyXG5cdFx0dGVtcGxhdGVVcmw6IEdldERPTUlOSU9FbmRwb2ludCgnYW5ndWxhci10ZW1wbGF0ZXMvY29tcG9uZW50ZXMvZWN2LWh0bWwtZ3JhZGUuaHRtbCcpLFxyXG5cdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pe1xyXG5cdFx0XHRcclxuXHRcdFx0ZnVuY3Rpb24gbGluaGFDbGlxdWUoblJvdywgYURhdGEsIGlEaXNwbGF5SW5kZXgsIGlEaXNwbGF5SW5kZXhGdWxsKSB7XHJcblx0XHRcdCAgICAkKCd0ZCcsIG5Sb3cpLnVuYmluZCgnY2xpY2snKTtcclxuXHRcdFx0ICAgICQoJ3RkJywgblJvdykuYmluZCgnY2xpY2snLCBmdW5jdGlvbigpIHtcclxuXHRcdFx0ICAgIFx0c2NvcGUubGluaGFDbGlxdWUgJiYgc2NvcGUubGluaGFDbGlxdWUoblJvdywgYURhdGEsIGlEaXNwbGF5SW5kZXgsIGlEaXNwbGF5SW5kZXhGdWxsKTtcclxuXHRcdFx0ICAgIH0pO1xyXG5cdFx0XHQgICAgcmV0dXJuIG5Sb3c7XHJcblx0XHRcdH1cclxuXHRcdFx0XHJcblx0XHRcdGlmKCFzY29wZS5vcGNvZXMpe1xyXG5cdFx0XHRcdHNjb3BlLmRhdGEgPSBEVE9wdGlvbnNCdWlsZGVyXHJcblx0XHRcdFx0XHQubmV3T3B0aW9ucygpXHJcblx0XHRcdFx0XHQud2l0aFBhZ2luYXRpb25UeXBlKCdmdWxsX251bWJlcnMnKTtcclxuXHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0c2NvcGUuZGF0YSA9IERUT3B0aW9uc0J1aWxkZXJcclxuXHRcdFx0XHRcdC5mcm9tU291cmNlKEdldFJFU1RFbmRwb2ludChzY29wZS5vcGNvZXMpKVxyXG5cdFx0XHQgICAgICAgIC53aXRoT3B0aW9uKCdyb3dDYWxsYmFjaycsIGxpbmhhQ2xpcXVlKVxyXG5cdFx0XHRcdFx0LndpdGhEYXRhUHJvcCgnUmV0b3JubycpXHJcblx0XHRcdFx0XHQud2l0aFBhZ2luYXRpb25UeXBlKCdmdWxsX251bWJlcnMnKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRcclxuXHRcdFx0c2NvcGUuaW5zdGFuY2lhID0ge307XHJcblx0XHRcdHNjb3BlLnJlY2FycmVnYXIgPSBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdHNjb3BlLmluc3RhbmNpYS5yZWxvYWREYXRhKCk7XHJcblx0XHRcdH07XHJcblx0XHRcdFxyXG5cdFx0XHR2YXIgZGlhbG9nbyA9IHNjb3BlLmRpYWxvZ29EZWxldGFyIHx8ICRtZERpYWxvZy5jb25maXJtKClcclxuXHRcdCAgICAgICAgICAudGl0bGUoJ0Rlc2VqYSBkZWxldGFyIGVzdGUgcmVnaXN0cm8/JylcclxuXHRcdCAgICAgICAgICAudGV4dENvbnRlbnQoJ0VzdGEgYcOnw6NvIG7Do28gcG9kZXLDoSBzZXIgZGVzZmVpdGEuJylcclxuXHRcdCAgICAgICAgICAuYXJpYUxhYmVsKCdEZWxldGFyIHJlZ2lzdHJvJylcclxuXHRcdCAgICAgICAgICAub2soJ0RlbGV0YXInKVxyXG5cdFx0ICAgICAgICAgIC5jYW5jZWwoJ0NhbmNlbGFyJyk7XHJcblx0XHRcdFxyXG5cdFx0XHRzY29wZS5kZWxldGFyRGlhbG9nID0gZnVuY3Rpb24ob2JqLCBpbmRleCwgZXYpe1xyXG5cdFx0XHRcdGRpYWxvZ28udGFyZ2V0RXZlbnQoZXYpO1xyXG5cdFx0XHQgICAgJG1kRGlhbG9nLnNob3coZGlhbG9nbykudGhlbihmdW5jdGlvbigpIHtcclxuXHRcdFx0ICAgIFx0c2NvcGUuZGVsZXRhcihvYmosIGluZGV4LCBldiwgZnVuY3Rpb24oKXtcclxuXHRcdFx0ICAgIFx0XHRzY29wZS5tb2RlbG8uc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdFx0ICAgIFx0fSk7XHJcblx0XHRcdCAgICB9KTtcclxuXHRcdFx0fTtcclxuXHRcdFx0XHJcblx0XHRcdGlmKCFzY29wZS5jb2x1bmFzKVxyXG5cdFx0XHRcdCRodHRwLmdldChHZXRSRVNURW5kcG9pbnQoc2NvcGUuY2FiZWNhbGhvR3JhZGUpKS50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHRcdFx0XHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJykgcmV0dXJuICRlY3YudG9hc3QuZXJybyhyZXMuZGF0YS5FcnJvLCAnSG91dmUgdW0gZXJybyBhbyBwZXNxdWlzYXIgbyBjYWJlw6dhbGhvIGRhIHRhYmVsYS4nKTtcclxuXHRcdFx0XHRcdGlmKCFyZXMuZGF0YSB8fCAhcmVzLmRhdGEuUmV0b3JubyB8fCByZXMuZGF0YS5SZXRvcm5vLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xyXG5cdFx0XHRcdFx0c2NvcGUuY29sdW5hcyA9IFtdO1xyXG5cdFx0XHRcdFx0c2NvcGUuY29sdW5hc1JhdyA9IFtdO1xyXG5cdFx0XHRcdFx0cmVzLmRhdGEuUmV0b3Juby5zb3J0KGZ1bmN0aW9uKGEsYil7XHJcblx0XHRcdFx0XHRcdHJldHVybiBhLmlkIC0gYi5pZDtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0cmVzLmRhdGEuUmV0b3Juby5mb3JFYWNoKGZ1bmN0aW9uKG9iail7XHJcblx0XHRcdFx0XHRcdGlmKHNjb3BlLm9wY29lcyl7XHJcblx0XHRcdFx0XHRcdFx0c2NvcGUuY29sdW5hcy5wdXNoKERUQ29sdW1uQnVpbGRlci5uZXdDb2x1bW4ob2JqLmFsaWFzKS53aXRoVGl0bGUob2JqLmFsaWFzKSk7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdHNjb3BlLmNvbHVuYXMucHVzaChEVENvbHVtbkJ1aWxkZXIubmV3Q29sdW1uKG9iai5jaGF2ZSkud2l0aFRpdGxlKG9iai5hbGlhcykpO1xyXG5cdFx0XHRcdFx0XHRzY29wZS5jb2x1bmFzUmF3LnB1c2goeyBrZXk6IG9iai5jaGF2ZSB9KTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0aWYoIXNjb3BlLm9wY29lcylcclxuXHRcdFx0XHRcdFx0c2NvcGUuY29sdW5hcy5wdXNoKERUQ29sdW1uQnVpbGRlci5uZXdDb2x1bW4oJ0HDh8OVRVMnKS53aXRoVGl0bGUoJ0HDh8OVRVMnKSk7XHJcblx0XHRcdFx0XHRzY29wZS5hdXRvcml6YWRvID0gdHJ1ZTtcclxuXHRcdFx0XHR9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdFx0JGVjdi50b2FzdC5lcnJvKGVyci5kYXRhLCAnSG91dmUgdW0gZXJybyBhbyBpbnNlcmlyJyk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fTtcclxufV0pOyIsIi8qKlxyXG4gKiBbZWN2SW1hZ2VtXVxyXG4gKiBEaXJldGl2YSByZXNwb25zw6F2ZWwgcG9yIGNyaWFyIG8gY29tcG9uZW50ZSBpbWFnZW0uXHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmRpcmVjdGl2ZSgnZWN2SW1hZ2VtJywgWyckbWREaWFsb2cnLCBmdW5jdGlvbigkbWREaWFsb2cpe1xyXG5cdHJldHVybiB7XHJcblx0XHRyZXN0cmljdDogJ0UnLFxyXG5cdFx0c2NvcGU6IHtcclxuXHRcdFx0Y29tcG9uZW50ZTogJz0nLFxyXG5cdFx0XHRjb21wb25lbnRlczogJz0nXHJcblx0XHR9LFxyXG5cdFx0dGVtcGxhdGVVcmw6IEdldERPTUlOSU9FbmRwb2ludCgnYW5ndWxhci10ZW1wbGF0ZXMvY29tcG9uZW50ZXMvZWN2LWltYWdlbS5odG1sJyksXHJcblx0XHRsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbSl7XHJcblx0XHRcdGVsZW0uY3NzKCdjdXJzb3InLCBzY29wZS5jb21wb25lbnRlLmhhYmlsaXRhZG89PT1mYWxzZSA/ICdub3QtYWxsb3dlZCcgOiAncG9pbnRlcicpO1xyXG5cdFx0XHRcclxuXHRcdFx0Zm9yKHZhciBpID0gMDsgaTxzY29wZS5jb21wb25lbnRlcy5sZW5ndGg7IGkrKyl7XHJcblx0XHRcdFx0dmFyIGNvbXBvbmVudGUgPSBzY29wZS5jb21wb25lbnRlc1tpXTtcclxuXHRcdFx0XHRpZihjb21wb25lbnRlLnVsdGltYVJlZmVyZW5jaWEgPT09ICdjMl81NTAxJyl7XHJcblx0XHRcdFx0XHRzY29wZS5jb21wb25lbnRlTGVnZW5kYSA9IGNvbXBvbmVudGU7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0XHJcblx0XHRcdHNjb3BlLnVwbG9hZEltYWdlbSA9IGZ1bmN0aW9uKGV2KXtcclxuXHRcdFx0XHRpZighc2NvcGUuY29tcG9uZW50ZS5oYWJpbGl0YWRvKSByZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHQkbWREaWFsb2cuc2hvdyh7XHJcblx0XHRcdFx0XHRjb250cm9sbGVyOiAnZWN2TW9kYWxJbWFnZW1VcGxvYWQnLFxyXG5cdFx0XHRcdFx0dGVtcGxhdGVVcmw6IEdldERPTUlOSU9FbmRwb2ludCgnYW5ndWxhci10ZW1wbGF0ZXMvbW9kYWxzL2Vjdi1tb2RhbC1pbWFnZW0tdXBsb2FkLmh0bWwnKSxcclxuXHRcdFx0XHRcdHBhcmVudDogYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LmJvZHkpLFxyXG5cdFx0XHRcdFx0dGFyZ2V0RXZlbnQ6IGV2LFxyXG5cdFx0XHRcdFx0Y2xpY2tPdXRzaWRlVG9DbG9zZTp0cnVlLFxyXG5cdFx0XHRcdFx0bG9jYWxzOiB7XHJcblx0XHRcdFx0XHRcdGNvbXBvbmVudGU6IHNjb3BlLmNvbXBvbmVudGUsXHJcblx0XHRcdFx0XHRcdGNvbXBvbmVudGVMZWdlbmRhOiBzY29wZS5jb21wb25lbnRlTGVnZW5kYSxcclxuXHRcdFx0XHRcdFx0Zm46IHtcclxuXHRcdFx0XHRcdFx0XHRjbG9zZTogIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0JG1kRGlhbG9nLmNhbmNlbCgpO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9O1xyXG5cdFx0fVxyXG5cdH07XHJcbn1dKTsiLCJcdC8qKlxyXG4gKiBbZWN2SW5wdXRzXVxyXG4gKiBEaXJldGl2YSBwYXJhIGNvbnRyb2xhciBvIHRpcG8gZG9zIGNvbXBvbmVudGVzIGUgYWxndW1hcyBkZSBzdWFzIHByb3ByaWVkYWRlcy5cclxuICogUmFwaGFlbCBCcmFuZMOjbyAtIDI5LzEwLzIwMTZcclxuICovXHJcbmFuZ3VsYXIubW9kdWxlKCdmaW5hbmNlaXJvJykuZGlyZWN0aXZlKCdlY3ZJbnB1dHMnLCBbJyRodHRwJywgZnVuY3Rpb24oJGh0dHApe1xyXG5cdHZhciBwYWRyYW9GbGV4ID0gOTU7XHJcblx0XHJcblx0ZnVuY3Rpb24gcHJpbnQobXNnLCBlcnIpe1xyXG5cdFx0aWYoZXJyKSByZXR1cm4gY29uc29sZS5lcnJvcignW2Vjdi1pbnB1dHNdICcgKyBtc2cpO1xyXG5cdFx0IHJldHVybiBjb25zb2xlLmxvZygnW2Vjdi1pbnB1dHNdICcgKyBtc2cpO1xyXG5cdH1cclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdGNvbXBvbmVudGVzOiAnPScsXHJcblx0XHRcdGRlYnVnOiAnPScsXHJcblx0XHRcdGRhdGE6ICc9J1xyXG5cdFx0fSxcclxuXHRcdHRlbXBsYXRlVXJsOiBHZXRET01JTklPRW5kcG9pbnQoJ2FuZ3VsYXItdGVtcGxhdGVzL2NvbXBvbmVudGVzL2Vjdi1pbnB1dHMuaHRtbCcpLFxyXG5cdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcclxuXHRcdFx0c2NvcGUuZWhUaXBvID0gZnVuY3Rpb24oYW5ndWxhclRpcG8sIGNvbXBvbmVudGUpe1xyXG5cdFx0XHRcdC8vU3dpdGNoIGRlIGV4Y2x1c8OjbyBwb3IgY29tcG9uZW50ZS51bHRpbWFSZWZlcmVuY2lhXHJcblx0XHRcdFx0c3dpdGNoKGNvbXBvbmVudGUudWx0aW1hUmVmZXJlbmNpYSl7XHJcblx0XHRcdFx0Y2FzZSAnYzJfNTUwMSc6XHJcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0fVx0XHRcdFx0XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0Ly9Td2l0Y2ggZGUgY29tcGFyYcOnw6NvIGNvbSB0aXBvXHJcblx0XHRcdFx0c3dpdGNoKGNvbXBvbmVudGUudGlwby50b0xvd2VyQ2FzZSgpKXsgLy8gVHJhbnNmb3JtYSBlbSBtaW51c2N1bG9cclxuXHRcdFx0XHRjYXNlIHVuZGVmaW5lZDpcclxuXHRcdFx0XHRjYXNlICdpbnB1dCB0ZXh0JzpcclxuXHRcdFx0XHRjYXNlICdudW1iZXInOlxyXG5cdFx0XHRcdGNhc2UgJ3Bhc3N3b3JkJzpcclxuXHRcdFx0XHRcdGlmKGFuZ3VsYXJUaXBvID09PSAnaW5wdXQnKSByZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdGNhc2UgJ2NvbWJvIGJveCAtIGluY3JlbWVudGFsJzpcclxuXHRcdFx0XHRjYXNlICdjb21ibyBib3gnOlxyXG5cdFx0XHRcdFx0aWYoIWNvbXBvbmVudGUuZGV0YWxoYW1lbnRvICYmIGFuZ3VsYXJUaXBvID09PSAnc2VsZWN0LWFqYXgnKSByZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdGlmKGFuZ3VsYXJUaXBvID09PSAnc2VsZWN0LWFycmF5JyAmJiB0eXBlb2YgY29tcG9uZW50ZS5kZXRhbGhhbWVudG8ub3Bjb2VzID09PSAnb2JqZWN0JykgcmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRpZihhbmd1bGFyVGlwbyA9PT0gJ3NlbGVjdC1hamF4JyAmJiB0eXBlb2YgY29tcG9uZW50ZS5kZXRhbGhhbWVudG8ub3Bjb2VzID09PSAnc3RyaW5nJykgcmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlICdhdXRvY29tcGxldGUnOlxyXG5cdFx0XHRcdFx0aWYoIWNvbXBvbmVudGUuZGV0YWxoYW1lbnRvICYmIGFuZ3VsYXJUaXBvID09PSAnYXV0b2NvbXBsZXRlLWFqYXgnKSByZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdGlmKGFuZ3VsYXJUaXBvID09PSAnYXV0b2NvbXBsZXRlLWFycmF5JyAmJiB0eXBlb2YgY29tcG9uZW50ZS5kZXRhbGhhbWVudG8ub3Bjb2VzID09PSAnb2JqZWN0JykgcmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRpZihhbmd1bGFyVGlwbyA9PT0gJ2F1dG9jb21wbGV0ZS1hamF4JyAmJiB0eXBlb2YgY29tcG9uZW50ZS5kZXRhbGhhbWVudG8ub3Bjb2VzID09PSAnc3RyaW5nJykgcmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlICdjaGVjayBib3gnOlxyXG5cdFx0XHRcdFx0aWYoYW5ndWxhclRpcG8gPT09ICdjaGVja2JveCcpIHJldHVybiB0cnVlO1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0Y2FzZSAnaW1hZ2VtIC0gdXBsb2FkJzpcclxuXHRcdFx0XHRcdGlmKGFuZ3VsYXJUaXBvID09PSAnaW1hZ2VtJykgcmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlICd0ZXh0YXJlYSc6XHJcblx0XHRcdFx0XHRpZihhbmd1bGFyVGlwbyA9PT0gJ3RleHRhcmVhJykgcmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlICdncmFkZSBkZSBleGliaWNhbyc6XHJcblx0XHRcdFx0XHRpZihhbmd1bGFyVGlwbyA9PT0gJ2dyYWRlRXhpYmljYW8nKSByZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdGNhc2UgJ2dyYWRlIGRlIGV4aWJpY2FvIC0gZGV0YWlsJzpcclxuXHRcdFx0XHRcdGlmKGFuZ3VsYXJUaXBvID09PSAnZ3JhZGVFeGliaWNhb0RldGFsaGUnKSByZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHJcblx0XHRcdHNjb3BlLnRhbWFuaG9GbGV4ID0gZnVuY3Rpb24oY29tcG9uZW50ZSl7XHJcblx0XHRcdFx0aWYoIWNvbXBvbmVudGUpIHJldHVybiAxMDAgLSBwYWRyYW9GbGV4O1xyXG5cdFx0XHRcdHJldHVybiAoY29tcG9uZW50ZS5pY29uZSB8fCBjb21wb25lbnRlLmRlc2NyaWNhbykgPyBwYWRyYW9GbGV4IDogMTAwO1xyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0c2NvcGUuY2FycmVnYVNlbGVjdEFzeW5jID0gZnVuY3Rpb24oY29tcG9uZW50ZSl7XHJcblx0XHRcdFx0aWYoY29tcG9uZW50ZS5vcGNvZXNDYXJyZWdhZGFzKSByZXR1cm47XHJcblx0XHRcdFx0JGh0dHAuZ2V0KEdldFJFU1RFbmRwb2ludChjb21wb25lbnRlLmRldGFsaGFtZW50by5vcGNvZXMpKS50aGVuKGZ1bmN0aW9uKHJlc3Ape1xyXG5cdFx0XHRcdFx0aWYocmVzcC5kYXRhLlJldG9ybm8pXHJcblx0XHRcdFx0XHRcdGNvbXBvbmVudGUuZGV0YWxoYW1lbnRvLm9wY29lc0NhcnJlZ2FkYXMgPSByZXNwLmRhdGEuUmV0b3JubztcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fTtcclxuXHQgICAgfVxyXG5cdH07XHJcbn1dKTtcclxuIiwiLyoqXHJcbiAqIFtlY3ZGb3JtTWFzdGVyRGV0YWlsXVxyXG4gKiBEaXJldGl2YSByZXByZXNlbnRhdGl2YSBkbyBmb3JtdcOhcmlvIG1lc3RyZS9kZXRhbGhlLlxyXG4gKiBSYXBoYWVsIEJyYW5kw6NvIC0gMDQvMDEvMjAxNlxyXG4gKi9cclxuYW5ndWxhci5tb2R1bGUoJ2ZpbmFuY2Vpcm8nKS5kaXJlY3RpdmUoJ2VjdkZvcm1NYXN0ZXJEZXRhaWwnLCBbJyRodHRwJywgJyRlY3YnLCAnJG1kRGlhbG9nJyxcclxuXHRmdW5jdGlvbigkaHR0cCwgJGVjdiwgJG1kRGlhbG9nKXtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdHRlbXBsYXRlVXJsOiBHZXRET01JTklPRW5kcG9pbnQoJ2FuZ3VsYXItdGVtcGxhdGVzL2Zvcm11bGFyaW9zL2Vjdi1mb3JtLW1hc3Rlci1kZXRhaWwuaHRtbCcpLFxyXG5cdFx0c2NvcGU6IHtcclxuXHRcdFx0ZGF0YTogJz0nXHJcblx0XHR9LFxyXG5cdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pe1xyXG5cdFx0XHQkZWN2Lm1lbnUuaHRtbC5jYXJyZWdhZG8gPSB0cnVlO1xyXG5cdFx0XHRzY29wZS50b2dnbGVNZW51ID0gJGVjdi5tZW51LmZuLnRvZ2dsZTtcclxuXHRcdFx0XHJcblx0XHQgICAgc2NvcGUubm92YUd1aWEgPSBmdW5jdGlvbihjb250YWluZXIsIHRlbGEpe1xyXG5cdFx0ICAgIFx0dmFyIGd1aWFNb2RlbG8gPSBjb250YWluZXJbMF07XHJcblx0XHQgICAgXHR2YXIgbWFwZWFtZW50byA9IGd1aWFNb2RlbG8ubWFwZWFtZW50bztcclxuXHRcdCAgICBcdGlmKCFtYXBlYW1lbnRvKSBcclxuXHRcdCAgICBcdFx0cmV0dXJuICRlY3YudG9hc3QuZXJybygnRmFsdGFuZG8gdmFsb3IgTUFQRUFNRU5UTyAoYzEwXzIwMykgcGFyYSBlc3RhIGd1aWEgKGlkIDogJyArIGd1aWFNb2RlbG8uaWQgKyAnKS4nLCBcclxuXHRcdCAgICBcdFx0XHRcdCdFcnJvIGFvIGNyaWFyIG5vdmEgYWJhLi4nKTtcclxuXHRcdCAgICBcdHZhciBub3ZhR3VpYSA9IGFuZ3VsYXIuY29weShndWlhTW9kZWxvKTtcclxuXHRcdCAgICBcdHZhciBub3ZvSW5kaWNlID0gY29udGFpbmVyLmxlbmd0aDtcclxuXHRcdCAgICBcdFxyXG5cdFx0ICAgIFx0aWYobm92YUd1aWEuY29tcG9uZW50ZXMpIG5vdmFHdWlhLmNvbXBvbmVudGVzLmZvckVhY2gocGFyYUNhZGFDb21wb25lbnRlKTtcclxuXHRcdCAgICBcdHRlbGEuY29udGFpbmVycy5mb3JFYWNoKGZ1bmN0aW9uKGNvbnRhaW5lckludGVybm8pe1xyXG5cdFx0ICAgIFx0XHRpZihjb250YWluZXIgPT09IGNvbnRhaW5lckludGVybm8pIHJldHVybjtcclxuXHRcdCAgICBcdFx0Y29udGFpbmVySW50ZXJuby5mb3JFYWNoKGZ1bmN0aW9uKGd1aWEpe1xyXG5cdFx0XHRcdFx0XHRpZihndWlhTW9kZWxvID09PSBndWlhKSByZXR1cm47XHJcblx0XHRcdFx0XHRcdGlmKCFndWlhLmNvbXBvbmVudGVzKSByZXR1cm47XHJcblx0XHRcdFx0XHRcdGd1aWEuY29tcG9uZW50ZXMuZm9yRWFjaChwYXJhQ2FkYUNvbXBvbmVudGUpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHQgICAgXHRcclxuXHRcdCAgICBcdGZ1bmN0aW9uIHBhcmFDYWRhQ29tcG9uZW50ZShjb21wb25lbnRlKXtcclxuXHRcdFx0XHRcdHZhciBwb3MgPSBjb21wb25lbnRlLnJlZmVyZW5jaWEuaW5kZXhPZihtYXBlYW1lbnRvKTtcclxuXHRcdFx0XHRcdGlmKHBvczwwKSByZXR1cm47XHJcblx0XHQgICAgXHRcdHBvcyArPSBtYXBlYW1lbnRvLmxlbmd0aCArIDE7XHJcblx0XHQgICAgXHRcdHZhciBlbmQgPSBjb21wb25lbnRlLnJlZmVyZW5jaWEuc3Vic3RyKHBvcykuaW5kZXhPZignXScpICsgcG9zO1xyXG5cdFx0ICAgIFx0XHRjb21wb25lbnRlLnJlZmVyZW5jaWEgPSBjb21wb25lbnRlLnJlZmVyZW5jaWEuc3Vic3RyKDAsIHBvcykgKyBub3ZvSW5kaWNlICsgY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cihlbmQpO1xyXG5cdFx0XHRcdFx0JGVjdi51dGlscy5yZWN1cihzY29wZS5kYXRhLm1vZGVsLCBjb21wb25lbnRlLnJlZmVyZW5jaWEsIGNvbXBvbmVudGUpO1xyXG5cdFx0XHRcdH1cclxuXHRcdCAgICBcdFxyXG5cdFx0ICAgIFx0Y29udGFpbmVyLnB1c2gobm92YUd1aWEpO1xyXG5cdFx0ICAgIH07XHRcclxuXHRcdCAgICBcclxuXHRcdCAgICBzY29wZS5kZWxldGFyR3VpYSA9IGZ1bmN0aW9uKGluZGV4LCBjb250YWluZXIsIHRlbGEpe1xyXG5cdFx0ICAgIFx0dmFyIGd1aWEgPSBjb250YWluZXJbaW5kZXhdO1xyXG5cdFx0ICAgIFx0aWYoIWd1aWEubWFwZWFtZW50bykgXHJcblx0XHQgICAgXHRcdHJldHVybiAkZWN2LnRvYXN0LmVycm8oJ0ZhbHRhbmRvIHZhbG9yIE1BUEVBTUVOVE8gKGMxMF8yMDMpIHBhcmEgZXN0YSBndWlhIChpZCA6ICcgKyBndWlhLmlkICsgJykuJywgXHJcblx0XHQgICAgXHRcdFx0XHQnRXJybyBhbyBjcmlhciBub3ZhIGFiYS4uJyk7XHJcblx0XHQgICAgXHRpZihpbmRleCA9PT0gY29udGFpbmVyWydzZWxlY2lvbmFkbyddIHx8IGNvbnRhaW5lclsnc2VsZWNpb25hZG8nXSA9PT0gY29udGFpbmVyLmxlbmd0aC0xKSBjb250YWluZXJbJ3NlbGVjaW9uYWRvJ10tLTtcclxuXHRcdCAgICBcdFxyXG5cdFx0ICAgIFx0dGVsYS5jb250YWluZXJzLmZvckVhY2goZnVuY3Rpb24oY29udGFpbmVySW50ZXJubyl7XHJcblx0XHQgICAgXHRcdGlmKGNvbnRhaW5lcj09PWNvbnRhaW5lckludGVybm8pIHJldHVybjtcclxuXHRcdCAgICBcdFx0Zm9yKHZhciBpbmRleEd1aWEgPSBjb250YWluZXJJbnRlcm5vLmxlbmd0aCAtIDE7IGluZGV4R3VpYSA+IDA7IGluZGV4R3VpYS0tKXtcclxuXHRcdCAgICBcdFx0XHR2YXIgZ3VpYUludGVybmEgPSBjb250YWluZXJJbnRlcm5vW2luZGV4R3VpYV07XHJcblx0XHQgICAgXHRcdFx0aWYoIWd1aWFJbnRlcm5hLmNvbXBvbmVudGVzKSByZXR1cm47XHJcblx0XHQgICAgXHRcdFx0dmFyIGRlbGV0ZUd1aWEgPSBmYWxzZTtcclxuXHRcdCAgICBcdFx0XHRmb3IodmFyIGluZGV4Q29tcCA9IDE7IGluZGV4Q29tcCA8IGd1aWFJbnRlcm5hLmNvbXBvbmVudGVzLmxlbmd0aDsgaW5kZXhDb21wKyspe1xyXG5cdFx0ICAgIFx0XHRcdFx0dmFyIGNvbXBvbmVudGUgPSBndWlhSW50ZXJuYS5jb21wb25lbnRlc1tpbmRleENvbXBdO1xyXG5cdFx0XHRcdFx0XHRcdHZhciBwb3MgPSBjb21wb25lbnRlLnJlZmVyZW5jaWEuaW5kZXhPZihndWlhLm1hcGVhbWVudG8pO1xyXG5cdFx0XHRcdFx0XHRcdGlmKHBvczwwKSBjb250aW51ZTtcclxuXHRcdFx0XHQgICAgXHRcdHBvcyArPSBndWlhLm1hcGVhbWVudG8ubGVuZ3RoICsgMTtcclxuXHRcdFx0XHQgICAgXHRcdHZhciBlbmQgPSBjb21wb25lbnRlLnJlZmVyZW5jaWEuc3Vic3RyKHBvcykuaW5kZXhPZignXScpICsgcG9zO1xyXG5cdFx0XHRcdCAgICBcdFx0dmFyIHZhbCA9IGNvbXBvbmVudGUucmVmZXJlbmNpYS5zdWJzdHIocG9zLCBlbmQtcG9zKTtcclxuXHRcdFx0XHQgICAgXHRcdGlmKHZhbCAhPT0gaW5kZXgpIGNvbnRpbnVlO1xyXG5cdFx0XHRcdCAgICBcdFx0JGVjdi51dGlscy5saW1wYXJQYWlEb01vZGVsbyhzY29wZS5kYXRhLm1vZGVsLCBjb21wb25lbnRlLnJlZmVyZW5jaWEsIGd1aWEubWFwZWFtZW50byk7XHJcblx0XHRcdFx0ICAgIFx0XHRkZWxldGVHdWlhID0gdHJ1ZTtcclxuXHRcdCAgICBcdFx0XHR9XHJcblx0XHQgICAgXHRcdFx0aWYoZGVsZXRlR3VpYSkgY29udGFpbmVySW50ZXJuby5zcGxpY2UoaW5kZXhHdWlhLCAxKTtcclxuXHRcdCAgICBcdFx0fVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0ICAgIFx0aWYoZ3VpYS5jb21wb25lbnRlcykgXHJcblx0XHQgICAgXHRcdGd1aWEuY29tcG9uZW50ZXMuZm9yRWFjaChmdW5jdGlvbihjb21wb25lbnRlKXtcclxuXHRcdCAgICBcdFx0XHQkZWN2LnV0aWxzLmxpbXBhclBhaURvTW9kZWxvKHNjb3BlLmRhdGEubW9kZWwsIGNvbXBvbmVudGUucmVmZXJlbmNpYSwgZ3VpYS5tYXBlYW1lbnRvKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0ICAgIFx0XHJcblx0XHQgICAgXHRjb250YWluZXIuc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIFxyXG5cdFx0ICAgIHNjb3BlLmF0dWFsaXphckd1aWFzRGV0YWxoZXMgPSBmdW5jdGlvbihpbmRleCwgY29udGFpbmVyLCB0ZWxhKXtcclxuXHRcdCAgICBcdHZhciBndWlhID0gY29udGFpbmVyW2luZGV4XTtcclxuXHRcdFx0XHRpZih0ZWxhLnRpcG8gPT09ICdURUxBIERFIFBFU1FVSVNBJyB8fCAhZ3VpYSB8fCAhZ3VpYS50aXBvLm1hdGNoKCdJTkNSRU1FTlRBTCcpKSByZXR1cm47XHJcblx0XHQgICAgXHRpZighZ3VpYS5tYXBlYW1lbnRvKSBcclxuXHRcdCAgICBcdFx0cmV0dXJuICRlY3YudG9hc3QuZXJybygnRmFsdGFuZG8gdmFsb3IgTUFQRUFNRU5UTyAoYzEwXzIwMykgcGFyYSBlc3RhIGd1aWEgKGlkIDogJyArIGd1aWEuaWQgKyAnKS4nLCBcclxuXHRcdCAgICBcdFx0XHRcdCdFcnJvIGFvIGNyaWFyIG5vdmEgYWJhLi4nKTtcclxuXHRcdCAgICBcdHZhciBtYXBlYW1lbnRvID0gZ3VpYS5tYXBlYW1lbnRvO1xyXG5cdFx0ICAgIFx0dGVsYS5jb250YWluZXJzLmZvckVhY2goZnVuY3Rpb24oY29udGFpbmVySW50ZXJubyl7XHJcblx0XHQgICAgXHRcdGlmKGNvbnRhaW5lcj09PWNvbnRhaW5lckludGVybm8pIHJldHVybjtcclxuXHRcdCAgICBcdFx0Y29udGFpbmVySW50ZXJuby5mb3JFYWNoKGZ1bmN0aW9uKGd1aWFJbnRlcm5hKXtcclxuXHRcdFx0XHRcdFx0aWYoIWd1aWFJbnRlcm5hLmNvbXBvbmVudGVzKSByZXR1cm47XHJcblx0XHRcdFx0XHRcdGd1aWFJbnRlcm5hLmNvbXBvbmVudGVzLmZvckVhY2gocGFyYUNhZGFDb21wb25lbnRlKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0ICAgIFx0ZnVuY3Rpb24gcGFyYUNhZGFDb21wb25lbnRlKGNvbXBvbmVudGUpe1xyXG5cdFx0ICAgIFx0XHR2YXIgcG9zID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLmluZGV4T2YobWFwZWFtZW50byk7XHJcblx0XHRcdFx0XHRpZihwb3M8MCkgcmV0dXJuO1xyXG5cdFx0ICAgIFx0XHRwb3MgKz0gbWFwZWFtZW50by5sZW5ndGggKyAxO1xyXG5cdFx0ICAgIFx0XHR2YXIgZW5kID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cihwb3MpLmluZGV4T2YoJ10nKSArIHBvcztcclxuXHRcdCAgICBcdFx0Y29tcG9uZW50ZS5yZWZlcmVuY2lhID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cigwLCBwb3MpICsgaW5kZXggKyBjb21wb25lbnRlLnJlZmVyZW5jaWEuc3Vic3RyKGVuZCk7XHJcblx0XHRcdFx0XHQkZWN2LnV0aWxzLnJlY3VyKHNjb3BlLmRhdGEubW9kZWwsIGNvbXBvbmVudGUucmVmZXJlbmNpYSwgY29tcG9uZW50ZSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0ICAgIH07XHJcblx0XHQgICAgXHJcblx0XHQgICAgZnVuY3Rpb24gZXN0YUNhcnJlZ2FuZG8oY29tcCwgYm9vbCl7XHJcblx0XHQgICAgXHRpZihib29sKXtcclxuXHRcdCAgICBcdFx0Y29tcC5jYXJyZWdhbmRvID0gdHJ1ZTtcclxuXHRcdCAgICBcdFx0cmV0dXJuO1xyXG5cdFx0ICAgIFx0fVxyXG5cdFx0ICAgIFx0Y29tcC5jYXJyZWdhbmRvID0gZmFsc2U7XHJcblx0XHQgICAgfVxyXG5cdFx0XHRcclxuXHRcdFx0c2NvcGUuYWNhb0NydWQgPSBmdW5jdGlvbihjb21wKXtcclxuXHRcdFx0XHRpZighY29tcC5hbGlhcykgcmV0dXJuICRlY3YudG9hc3QuZXJybyhcclxuXHRcdFx0XHRcdFx0J0JvdMOjbyBkZSBhw6fDo28gc2VtIFthbGlhc10uPGJyPkNhZGFzdHJlIGFsZ3VtIHRlcm1vIG5vIGNhbXBvIGM3XzIwNF84MDEgcGFyYSBlc3RlIGNvbXBvbmVudGUgKGlkOiAnICsgY29tcC5pZCArICcpLicsIFxyXG5cdFx0XHRcdFx0XHQnRXJybyBubyBib3TDo28gZGUgYcOnw6NvJyk7XHJcblx0XHRcdFx0dmFyIHRpcG8gPSBjb21wLmFsaWFzLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRcdFx0aWYodGlwbyA9PT0gJ25vdm8nKXtcclxuXHRcdFx0XHRcdCRlY3YubW9kZWxvLmxpbXBhcihzY29wZS5kYXRhKTtcclxuXHRcdFx0XHRcdHJldHVybjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYodGlwbyA9PT0gJ2RlbGV0YXInKXtcclxuXHRcdFx0XHRcdGlmKCFjb21wLnZhbG9yKSByZXR1cm4gJGVjdi50b2FzdC5lcnJvKFxyXG5cdFx0XHRcdFx0XHRcdCdCb3TDo28gZGUgYcOnw6NvIERFTEVUQVIgc2VtIFt2YWxvcl0uPGJyPkNhZGFzdHJlIGEgcm90YSBkbyBERUxFVEUgbm8gY2FtcG8gYzEzXzIwNCBwYXJhIGVzdGUgY29tcG9uZW50ZSAoaWQ6ICcgKyBjb21wLmlkICsgJykuJywgXHJcblx0XHRcdFx0XHRcdFx0J0Vycm8gbm8gYm90w6NvIGRlIEdSQVZBUicpO1xyXG5cdFx0XHRcdFx0ZXN0YUNhcnJlZ2FuZG8oY29tcCwgdHJ1ZSk7XHJcblx0XHRcdFx0XHQkaHR0cCh7XHJcblx0XHRcdFx0XHRcdGhlYWRlcnM6IHtcclxuXHRcdFx0XHRcdCAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcclxuXHRcdFx0XHRcdCAgICB9LFxyXG5cdFx0XHRcdFx0XHRtZXRob2Q6ICdERUxFVEUnLFxyXG5cdFx0XHRcdFx0XHRkYXRhOiAkZWN2Lm1vZGVsby5jb3BpYXJFTGltcGFyKHNjb3BlLmRhdGEubW9kZWwpLFxyXG5cdFx0XHRcdFx0XHR1cmw6IEdldFJFU1RFbmRwb2ludChjb21wLnZhbG9yKSwgXHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0LnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHRcdFx0ZXN0YUNhcnJlZ2FuZG8oY29tcCk7XHJcblx0XHRcdFx0XHRcdGlmKHJlcy5kYXRhLlJlc3VsdGFkbyA9PT0gJ0VSUk8nKXJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0hvdXZlIHVtIGVycm8gYW8gZGVsZXRhcicpO1xyXG5cdFx0XHRcdFx0XHQkZWN2LnRvYXN0Lm9rKCdEZWxldGFkbyBjb20gc3VjZXNzbyEnKTtcclxuXHRcdFx0XHRcdFx0JGVjdi5tb2RlbG8ubGltcGFyKHNjb3BlLmRhdGEpO1xyXG5cdFx0XHRcdFx0fSwgZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHRcdFx0ZXN0YUNhcnJlZ2FuZG8oY29tcCk7XHJcblx0XHRcdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0hvdXZlIHVtIGVycm8gYW8gZGVsZXRhcicpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0fVx0XHJcblx0XHRcdH07XHJcblx0XHRcdC8qKlxyXG5cdFx0XHQgKiBWYWxpZGEgZSBzYWx2YSBvIGZvcm11bGFyaW8uXHJcblx0XHRcdCAqL1xyXG5cdFx0XHRzY29wZS52YWxpZGFyID0gZnVuY3Rpb24oZm9ybSl7XHJcblx0XHRcdFx0aWYgKGZvcm0uJGludmFsaWQpIHtcclxuXHRcdFx0XHQgICAgYW5ndWxhci5mb3JFYWNoKGZvcm0uJGVycm9yLCBmdW5jdGlvbiAoZmllbGQpIHtcclxuXHRcdFx0XHQgICAgICAgIGFuZ3VsYXIuZm9yRWFjaChmaWVsZCwgZnVuY3Rpb24oZXJyb3JGaWVsZCl7XHJcblx0XHRcdFx0ICAgICAgICAgICAgZXJyb3JGaWVsZC4kc2V0VG91Y2hlZCgpO1xyXG5cdFx0XHRcdCAgICAgICAgfSk7XHJcblx0XHRcdFx0ICAgIH0pO1xyXG5cdFx0XHRcdCAgICByZXR1cm47XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHZhciBjb21wO1xyXG5cdFx0XHRcdGZvcih2YXIgaT0wOyBpPHNjb3BlLmRhdGEuY3J1ZC5sZW5ndGg7IGkrKyl7XHJcblx0XHRcdFx0XHR2YXIgaXRlbUNydWQgPSBzY29wZS5kYXRhLmNydWRbaV07XHJcblx0XHRcdFx0XHRpZihpdGVtQ3J1ZC5hbGlhcz09PSdHUkFWQVInKSB7XHJcblx0XHRcdFx0XHRcdGNvbXAgPSBpdGVtQ3J1ZDtcclxuXHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmKCFjb21wLnZhbG9yKSByZXR1cm4gJGVjdi50b2FzdC5lcnJvKFxyXG5cdFx0XHRcdFx0XHQnQm90w6NvIGRlIGHDp8OjbyBHUkFWQVIgc2VtIFt2YWxvcl0uPGJyPkNhZGFzdHJlIGEgcm90YSBkbyBQT1NUIG5vIGNhbXBvIGMxM18yMDQgcGFyYSBlc3RlIGNvbXBvbmVudGUgKGlkOiAnICsgY29tcC5pZCArICcpLicsIFxyXG5cdFx0XHRcdFx0XHQnRXJybyBubyBib3TDo28gZGUgR1JBVkFSJyk7XHJcblx0XHRcdFx0ZXN0YUNhcnJlZ2FuZG8oY29tcCwgdHJ1ZSk7XHJcblxyXG5cdFx0XHRcdC8vIFBlcnNpc3RlIG5vIGJhbmNvXHJcblx0XHRcdFx0JGh0dHAucG9zdChHZXRSRVNURW5kcG9pbnQoY29tcC52YWxvciksICRlY3YubW9kZWxvLmNvcGlhckVMaW1wYXIoc2NvcGUuZGF0YS5tb2RlbCkpXHJcblx0XHRcdFx0LnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHRcdGVzdGFDYXJyZWdhbmRvKGNvbXApO1xyXG5cdFx0XHRcdFx0aWYocmVzLmRhdGEuUmVzdWx0YWRvID09PSAnRVJSTycpIHJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0hvdXZlIHVtIGVycm8gYW8gaW5zZXJpcicpO1xyXG5cdFx0XHRcdFx0XHJcblx0XHQgICAgICAgIFx0c2NvcGUuZGF0YS5tb2RlbCA9IHJlcy5kYXRhLlJldG9ybm87XHJcblx0XHRcdFx0XHRzY29wZS5kYXRhLnRlbGFzLmZvckVhY2goZnVuY3Rpb24odGVsYSl7XHJcblx0XHRcdFx0XHRcdGlmKHRlbGEudGlwbyA9PT0gJ1RFTEEgREUgUEVTUVVJU0EnKSByZXR1cm47XHJcblx0XHRcdFx0XHRcdHRlbGEuY29udGFpbmVycy5mb3JFYWNoKGZ1bmN0aW9uKGNvbnRhaW5lcil7XHJcblx0XHRcdFx0XHRcdFx0Y29udGFpbmVyLmZvckVhY2goZnVuY3Rpb24oZ3VpYSl7XHJcblx0XHRcdFx0XHRcdFx0XHRpZighZ3VpYS5jb21wb25lbnRlcykgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRcdFx0Z3VpYS5jb21wb25lbnRlcy5mb3JFYWNoKGZ1bmN0aW9uKGNvbXBvbmVudGUpe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHQkZWN2LnV0aWxzLnJlY3VyKHNjb3BlLmRhdGEubW9kZWwsIGNvbXBvbmVudGUucmVmZXJlbmNpYSwgY29tcG9uZW50ZSk7XHJcblx0XHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHR9KTtcdFxyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0XHQkZWN2LnRvYXN0Lm9rKCdJbnNlcmlkbyBjb20gc3VjZXNzbyEnKTtcclxuXHRcdFx0XHR9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdFx0ZXN0YUNhcnJlZ2FuZG8oY29tcCk7XHJcblx0XHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdIb3V2ZSB1bSBlcnJvIGFvIGluc2VyaXInKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fTtcclxuXHRcdFx0XHJcblx0XHRcdC8vID09PT09PT09PT09PT09PT09IENPTEFQU0UgPT09PT09PT09PT09PT09PT09PT09PT1cclxuXHRcdFx0Ly8gR3VpYSBDT0xBUFNFOlxyXG5cdFx0XHRzY29wZS5pbnNlcmlyQ29sYXBzZSA9IGZ1bmN0aW9uKGNvbGFwc2VzLCBjb2xhcHNlLCBndWlhTW9kZWxvLCB0ZWxhLCBjb250YWluZXIpe1xyXG5cdFx0XHRcdHZhciBtYXBlYW1lbnRvID0gZ3VpYU1vZGVsby5tYXBlYW1lbnRvO1xyXG5cdFx0ICAgIFx0aWYoIW1hcGVhbWVudG8pIFxyXG5cdFx0ICAgIFx0XHRyZXR1cm4gJGVjdi50b2FzdC5lcnJvKCdGYWx0YW5kbyB2YWxvciBNQVBFQU1FTlRPIChjMTBfMjAzKSBwYXJhIGVzdGEgZ3VpYSAoaWQgOiAnICsgZ3VpYU1vZGVsby5pZCArICcpLicsIFxyXG5cdFx0ICAgIFx0XHRcdFx0J0Vycm8gYW8gY3JpYXIgbm92YSBhYmEuLicpO1xyXG5cdFx0ICAgIFx0Y29sYXBzZSA9IGFuZ3VsYXIuY29weShjb2xhcHNlKTtcclxuXHRcdFx0XHRjb2xhcHNlLm5vbWUgPSBjb2xhcHNlLm5vbWUgKyAnICcgKyBjb2xhcHNlcy5sZW5ndGg7XHJcblx0XHRcdFx0dmFyIG5vdm9JbmRpY2UgPSBjb2xhcHNlcy5sZW5ndGg7XHJcblx0XHQgICAgXHRcclxuXHRcdCAgICBcdGlmKGNvbGFwc2UuY29tcG9uZW50ZXMpIGNvbGFwc2UuY29tcG9uZW50ZXMuZm9yRWFjaChwYXJhQ2FkYUNvbXBvbmVudGUpO1xyXG5cdFx0ICAgIFx0dGVsYS5jb250YWluZXJzLmZvckVhY2goZnVuY3Rpb24oY29udGFpbmVySW50ZXJubyl7XHJcblx0XHQgICAgXHRcdGlmKGNvbnRhaW5lciA9PT0gY29udGFpbmVySW50ZXJubykgcmV0dXJuO1xyXG5cdFx0ICAgIFx0XHRjb250YWluZXJJbnRlcm5vLmZvckVhY2goZnVuY3Rpb24oZ3VpYSl7XHJcblx0XHRcdFx0XHRcdGlmKGd1aWFNb2RlbG8gPT09IGd1aWEpIHJldHVybjtcclxuXHRcdFx0XHRcdFx0aWYoIWd1aWEuY29tcG9uZW50ZXMpIHJldHVybjtcclxuXHRcdFx0XHRcdFx0Z3VpYS5jb21wb25lbnRlcy5mb3JFYWNoKHBhcmFDYWRhQ29tcG9uZW50ZSk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdCAgICBcdFxyXG5cdFx0ICAgIFx0ZnVuY3Rpb24gcGFyYUNhZGFDb21wb25lbnRlKGNvbXBvbmVudGUpe1xyXG5cdFx0XHRcdFx0dmFyIHBvcyA9IGNvbXBvbmVudGUucmVmZXJlbmNpYS5pbmRleE9mKG1hcGVhbWVudG8pO1xyXG5cdFx0XHRcdFx0aWYocG9zPDApIHJldHVybjtcclxuXHRcdCAgICBcdFx0cG9zICs9IG1hcGVhbWVudG8ubGVuZ3RoICsgMTtcclxuXHRcdCAgICBcdFx0dmFyIGVuZCA9IGNvbXBvbmVudGUucmVmZXJlbmNpYS5zdWJzdHIocG9zKS5pbmRleE9mKCddJykgKyBwb3M7XHJcblx0XHQgICAgXHRcdGNvbXBvbmVudGUucmVmZXJlbmNpYSA9IGNvbXBvbmVudGUucmVmZXJlbmNpYS5zdWJzdHIoMCwgcG9zKSArIG5vdm9JbmRpY2UgKyBjb21wb25lbnRlLnJlZmVyZW5jaWEuc3Vic3RyKGVuZCk7XHJcblx0XHRcdFx0XHQkZWN2LnV0aWxzLnJlY3VyKHNjb3BlLmRhdGEubW9kZWwsIGNvbXBvbmVudGUucmVmZXJlbmNpYSwgY29tcG9uZW50ZSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGNvbGFwc2VzLnB1c2goY29sYXBzZSk7XHJcblx0XHRcdH07XHRcdFx0XHJcblx0XHR9XHJcblx0fTtcclxufV0pO1xyXG4iLCIvKipcclxuICogW2VjdkZvcm1NYXN0ZXJTaW5nbGVEZXRhaWxdXHJcbiAqIERpcmV0aXZhIHJlcHJlc2VudGF0aXZhIGRvIGZvcm11w6FyaW8gbWVzdHJlL3NpbmdsZSBkZXRhbGhlLlxyXG4gKiBSYXBoYWVsIEJyYW5kw6NvIC0gMDkvMDEvMjAxNlxyXG4gKi9cclxuYW5ndWxhci5tb2R1bGUoJ2ZpbmFuY2Vpcm8nKS5kaXJlY3RpdmUoJ2VjdkZvcm1NYXN0ZXJTaW5nbGVEZXRhaWwnLCBbJyRodHRwJywgJyRlY3YnLFxyXG5cdGZ1bmN0aW9uKCRodHRwLCAkZWN2KXtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdHRlbXBsYXRlVXJsOiBHZXRET01JTklPRW5kcG9pbnQoJ2FuZ3VsYXItdGVtcGxhdGVzL2Zvcm11bGFyaW9zL2Vjdi1mb3JtLW1hc3Rlci1zaW5nbGUtZGV0YWlsLmh0bWwnKSxcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdGRhdGE6ICc9J1xyXG5cdFx0fSxcclxuXHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKXtcclxuXHRcdFx0JGVjdi5tZW51Lmh0bWwuY2FycmVnYWRvID0gdHJ1ZTtcclxuXHRcdFx0c2NvcGUudG9nZ2xlTWVudSA9ICRlY3YubWVudS5mbi50b2dnbGU7XHJcblx0XHRcdFxyXG5cdFx0ICAgIHNjb3BlLm5vdmFHdWlhID0gZnVuY3Rpb24oY29udGFpbmVyLCB0ZWxhKXtcclxuXHRcdCAgICBcdHZhciBndWlhTW9kZWxvID0gY29udGFpbmVyWzBdO1xyXG5cdFx0ICAgIFx0dmFyIG1hcGVhbWVudG8gPSBndWlhTW9kZWxvLm1hcGVhbWVudG87XHJcblx0XHQgICAgXHRpZighbWFwZWFtZW50bykgXHJcblx0XHQgICAgXHRcdHJldHVybiAkZWN2LnRvYXN0LmVycm8oJ0ZhbHRhbmRvIHZhbG9yIE1BUEVBTUVOVE8gKGMxMF8yMDMpIHBhcmEgZXN0YSBndWlhIChpZCA6ICcgKyBndWlhTW9kZWxvLmlkICsgJykuJywgXHJcblx0XHQgICAgXHRcdFx0XHQnRXJybyBhbyBjcmlhciBub3ZhIGFiYS4uJyk7XHJcblx0XHQgICAgXHR2YXIgbm92YUd1aWEgPSBhbmd1bGFyLmNvcHkoZ3VpYU1vZGVsbyk7XHJcblx0XHQgICAgXHR2YXIgbm92b0luZGljZSA9IGNvbnRhaW5lci5sZW5ndGg7XHJcblx0XHQgICAgXHRcclxuXHRcdCAgICBcdGlmKG5vdmFHdWlhLmNvbXBvbmVudGVzKSBub3ZhR3VpYS5jb21wb25lbnRlcy5mb3JFYWNoKHBhcmFDYWRhQ29tcG9uZW50ZSk7XHJcblx0XHQgICAgXHR0ZWxhLmNvbnRhaW5lcnMuZm9yRWFjaChmdW5jdGlvbihjb250YWluZXJJbnRlcm5vKXtcclxuXHRcdCAgICBcdFx0aWYoY29udGFpbmVyID09PSBjb250YWluZXJJbnRlcm5vKSByZXR1cm47XHJcblx0XHQgICAgXHRcdGNvbnRhaW5lckludGVybm8uZm9yRWFjaChmdW5jdGlvbihndWlhKXtcclxuXHRcdFx0XHRcdFx0aWYoZ3VpYU1vZGVsbyA9PT0gZ3VpYSkgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRpZighZ3VpYS5jb21wb25lbnRlcykgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRndWlhLmNvbXBvbmVudGVzLmZvckVhY2gocGFyYUNhZGFDb21wb25lbnRlKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0ICAgIFx0XHJcblx0XHQgICAgXHRmdW5jdGlvbiBwYXJhQ2FkYUNvbXBvbmVudGUoY29tcG9uZW50ZSl7XHJcblx0XHRcdFx0XHR2YXIgcG9zID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLmluZGV4T2YobWFwZWFtZW50byk7XHJcblx0XHRcdFx0XHRpZihwb3M8MCkgcmV0dXJuO1xyXG5cdFx0ICAgIFx0XHRwb3MgKz0gbWFwZWFtZW50by5sZW5ndGggKyAxO1xyXG5cdFx0ICAgIFx0XHR2YXIgZW5kID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cihwb3MpLmluZGV4T2YoJ10nKSArIHBvcztcclxuXHRcdCAgICBcdFx0Y29tcG9uZW50ZS5yZWZlcmVuY2lhID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cigwLCBwb3MpICsgbm92b0luZGljZSArIGNvbXBvbmVudGUucmVmZXJlbmNpYS5zdWJzdHIoZW5kKTtcclxuXHRcdFx0XHRcdCRlY3YudXRpbHMucmVjdXIoc2NvcGUuZGF0YS5tb2RlbCwgY29tcG9uZW50ZS5yZWZlcmVuY2lhLCBjb21wb25lbnRlKTtcclxuXHRcdFx0XHR9XHJcblx0XHQgICAgXHRcclxuXHRcdCAgICBcdGNvbnRhaW5lci5wdXNoKG5vdmFHdWlhKTtcclxuXHRcdCAgICB9O1x0XHJcblx0XHQgICAgXHJcblx0XHQgICAgc2NvcGUuZGVsZXRhckd1aWEgPSBmdW5jdGlvbihpbmRleCwgY29udGFpbmVyLCB0ZWxhKXtcclxuXHRcdCAgICBcdHZhciBndWlhID0gY29udGFpbmVyW2luZGV4XTtcclxuXHRcdCAgICBcdGlmKCFndWlhLm1hcGVhbWVudG8pIFxyXG5cdFx0ICAgIFx0XHRyZXR1cm4gJGVjdi50b2FzdC5lcnJvKCdGYWx0YW5kbyB2YWxvciBNQVBFQU1FTlRPIChjMTBfMjAzKSBwYXJhIGVzdGEgZ3VpYSAoaWQgOiAnICsgZ3VpYS5pZCArICcpLicsIFxyXG5cdFx0ICAgIFx0XHRcdFx0J0Vycm8gYW8gY3JpYXIgbm92YSBhYmEuLicpO1xyXG5cdFx0ICAgIFx0aWYoaW5kZXggPT09IGNvbnRhaW5lclsnc2VsZWNpb25hZG8nXSB8fCBjb250YWluZXJbJ3NlbGVjaW9uYWRvJ10gPT09IGNvbnRhaW5lci5sZW5ndGgtMSkgY29udGFpbmVyWydzZWxlY2lvbmFkbyddLS07XHJcblx0XHQgICAgXHRcclxuXHRcdCAgICBcdHRlbGEuY29udGFpbmVycy5mb3JFYWNoKGZ1bmN0aW9uKGNvbnRhaW5lckludGVybm8pe1xyXG5cdFx0ICAgIFx0XHRpZihjb250YWluZXI9PT1jb250YWluZXJJbnRlcm5vKSByZXR1cm47XHJcblx0XHQgICAgXHRcdGZvcih2YXIgaW5kZXhHdWlhID0gY29udGFpbmVySW50ZXJuby5sZW5ndGggLSAxOyBpbmRleEd1aWEgPiAwOyBpbmRleEd1aWEtLSl7XHJcblx0XHQgICAgXHRcdFx0dmFyIGd1aWFJbnRlcm5hID0gY29udGFpbmVySW50ZXJub1tpbmRleEd1aWFdO1xyXG5cdFx0ICAgIFx0XHRcdGlmKCFndWlhSW50ZXJuYS5jb21wb25lbnRlcykgcmV0dXJuO1xyXG5cdFx0ICAgIFx0XHRcdHZhciBkZWxldGVHdWlhID0gZmFsc2U7XHJcblx0XHQgICAgXHRcdFx0Zm9yKHZhciBpbmRleENvbXAgPSAxOyBpbmRleENvbXAgPCBndWlhSW50ZXJuYS5jb21wb25lbnRlcy5sZW5ndGg7IGluZGV4Q29tcCsrKXtcclxuXHRcdCAgICBcdFx0XHRcdHZhciBjb21wb25lbnRlID0gZ3VpYUludGVybmEuY29tcG9uZW50ZXNbaW5kZXhDb21wXTtcclxuXHRcdFx0XHRcdFx0XHR2YXIgcG9zID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLmluZGV4T2YoZ3VpYS5tYXBlYW1lbnRvKTtcclxuXHRcdFx0XHRcdFx0XHRpZihwb3M8MCkgY29udGludWU7XHJcblx0XHRcdFx0ICAgIFx0XHRwb3MgKz0gZ3VpYS5tYXBlYW1lbnRvLmxlbmd0aCArIDE7XHJcblx0XHRcdFx0ICAgIFx0XHR2YXIgZW5kID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cihwb3MpLmluZGV4T2YoJ10nKSArIHBvcztcclxuXHRcdFx0XHQgICAgXHRcdHZhciB2YWwgPSBjb21wb25lbnRlLnJlZmVyZW5jaWEuc3Vic3RyKHBvcywgZW5kLXBvcyk7XHJcblx0XHRcdFx0ICAgIFx0XHRpZih2YWwgIT09IGluZGV4KSBjb250aW51ZTtcclxuXHRcdFx0XHQgICAgXHRcdCRlY3YudXRpbHMubGltcGFyUGFpRG9Nb2RlbG8oc2NvcGUuZGF0YS5tb2RlbCwgY29tcG9uZW50ZS5yZWZlcmVuY2lhLCBndWlhLm1hcGVhbWVudG8pO1xyXG5cdFx0XHRcdCAgICBcdFx0ZGVsZXRlR3VpYSA9IHRydWU7XHJcblx0XHQgICAgXHRcdFx0fVxyXG5cdFx0ICAgIFx0XHRcdGlmKGRlbGV0ZUd1aWEpIGNvbnRhaW5lckludGVybm8uc3BsaWNlKGluZGV4R3VpYSwgMSk7XHJcblx0XHQgICAgXHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdCAgICBcdGlmKGd1aWEuY29tcG9uZW50ZXMpIFxyXG5cdFx0ICAgIFx0XHRndWlhLmNvbXBvbmVudGVzLmZvckVhY2goZnVuY3Rpb24oY29tcG9uZW50ZSl7XHJcblx0XHQgICAgXHRcdFx0JGVjdi51dGlscy5saW1wYXJQYWlEb01vZGVsbyhzY29wZS5kYXRhLm1vZGVsLCBjb21wb25lbnRlLnJlZmVyZW5jaWEsIGd1aWEubWFwZWFtZW50byk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdCAgICBcdFxyXG5cdFx0ICAgIFx0Y29udGFpbmVyLnNwbGljZShpbmRleCwgMSk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICBcclxuXHRcdCAgICBzY29wZS5hdHVhbGl6YXJHdWlhc0RldGFsaGVzID0gZnVuY3Rpb24oaW5kZXgsIGNvbnRhaW5lciwgdGVsYSl7XHJcblx0XHQgICAgXHR2YXIgZ3VpYSA9IGNvbnRhaW5lcltpbmRleF07XHJcblx0XHRcdFx0aWYodGVsYS50aXBvID09PSAnVEVMQSBERSBQRVNRVUlTQScgfHwgIWd1aWEgfHwgIWd1aWEudGlwby5tYXRjaCgnSU5DUkVNRU5UQUwnKSkgcmV0dXJuO1xyXG5cdFx0ICAgIFx0aWYoIWd1aWEubWFwZWFtZW50bykgXHJcblx0XHQgICAgXHRcdHJldHVybiAkZWN2LnRvYXN0LmVycm8oJ0ZhbHRhbmRvIHZhbG9yIE1BUEVBTUVOVE8gKGMxMF8yMDMpIHBhcmEgZXN0YSBndWlhIChpZCA6ICcgKyBndWlhLmlkICsgJykuJywgXHJcblx0XHQgICAgXHRcdFx0XHQnRXJybyBhbyBjcmlhciBub3ZhIGFiYS4uJyk7XHJcblx0XHQgICAgXHR2YXIgbWFwZWFtZW50byA9IGd1aWEubWFwZWFtZW50bztcclxuXHRcdCAgICBcdHRlbGEuY29udGFpbmVycy5mb3JFYWNoKGZ1bmN0aW9uKGNvbnRhaW5lckludGVybm8pe1xyXG5cdFx0ICAgIFx0XHRpZihjb250YWluZXI9PT1jb250YWluZXJJbnRlcm5vKSByZXR1cm47XHJcblx0XHQgICAgXHRcdGNvbnRhaW5lckludGVybm8uZm9yRWFjaChmdW5jdGlvbihndWlhSW50ZXJuYSl7XHJcblx0XHRcdFx0XHRcdGlmKCFndWlhSW50ZXJuYS5jb21wb25lbnRlcykgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRndWlhSW50ZXJuYS5jb21wb25lbnRlcy5mb3JFYWNoKHBhcmFDYWRhQ29tcG9uZW50ZSk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdCAgICBcdGZ1bmN0aW9uIHBhcmFDYWRhQ29tcG9uZW50ZShjb21wb25lbnRlKXtcclxuXHRcdCAgICBcdFx0dmFyIHBvcyA9IGNvbXBvbmVudGUucmVmZXJlbmNpYS5pbmRleE9mKG1hcGVhbWVudG8pO1xyXG5cdFx0XHRcdFx0aWYocG9zPDApIHJldHVybjtcclxuXHRcdCAgICBcdFx0cG9zICs9IG1hcGVhbWVudG8ubGVuZ3RoICsgMTtcclxuXHRcdCAgICBcdFx0dmFyIGVuZCA9IGNvbXBvbmVudGUucmVmZXJlbmNpYS5zdWJzdHIocG9zKS5pbmRleE9mKCddJykgKyBwb3M7XHJcblx0XHQgICAgXHRcdGNvbXBvbmVudGUucmVmZXJlbmNpYSA9IGNvbXBvbmVudGUucmVmZXJlbmNpYS5zdWJzdHIoMCwgcG9zKSArIGluZGV4ICsgY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cihlbmQpO1xyXG5cdFx0XHRcdFx0JGVjdi51dGlscy5yZWN1cihzY29wZS5kYXRhLm1vZGVsLCBjb21wb25lbnRlLnJlZmVyZW5jaWEsIGNvbXBvbmVudGUpO1xyXG5cdFx0XHRcdH1cclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIFxyXG5cdFx0ICAgIGZ1bmN0aW9uIGVzdGFDYXJyZWdhbmRvKGNvbXAsIGJvb2wpe1xyXG5cdFx0ICAgIFx0aWYoYm9vbCl7XHJcblx0XHQgICAgXHRcdGNvbXAuY2FycmVnYW5kbyA9IHRydWU7XHJcblx0XHQgICAgXHRcdHJldHVybjtcclxuXHRcdCAgICBcdH1cclxuXHRcdCAgICBcdGNvbXAuY2FycmVnYW5kbyA9IGZhbHNlO1xyXG5cdFx0ICAgIH1cclxuXHRcdFx0XHJcblx0XHRcdHNjb3BlLmFjYW9DcnVkID0gZnVuY3Rpb24oY29tcCl7XHJcblx0XHRcdFx0aWYoIWNvbXAuYWxpYXMpIHJldHVybiAkZWN2LnRvYXN0LmVycm8oXHJcblx0XHRcdFx0XHRcdCdCb3TDo28gZGUgYcOnw6NvIHNlbSBbYWxpYXNdLjxicj5DYWRhc3RyZSBhbGd1bSB0ZXJtbyBubyBjYW1wbyBjN18yMDRfODAxIHBhcmEgZXN0ZSBjb21wb25lbnRlIChpZDogJyArIGNvbXAuaWQgKyAnKS4nLCBcclxuXHRcdFx0XHRcdFx0J0Vycm8gbm8gYm90w6NvIGRlIGHDp8OjbycpO1xyXG5cdFx0XHRcdHZhciB0aXBvID0gY29tcC5hbGlhcy50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHRcdGlmKHRpcG8gPT09ICdub3ZvJyl7XHJcblx0XHRcdFx0XHQkZWN2Lm1vZGVsby5saW1wYXIoc2NvcGUuZGF0YSk7XHJcblx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmKHRpcG8gPT09ICdkZWxldGFyJyl7XHJcblx0XHRcdFx0XHRpZighY29tcC52YWxvcikgcmV0dXJuICRlY3YudG9hc3QuZXJybyhcclxuXHRcdFx0XHRcdFx0XHQnQm90w6NvIGRlIGHDp8OjbyBERUxFVEFSIHNlbSBbdmFsb3JdLjxicj5DYWRhc3RyZSBhIHJvdGEgZG8gREVMRVRFIG5vIGNhbXBvIGMxM18yMDQgcGFyYSBlc3RlIGNvbXBvbmVudGUgKGlkOiAnICsgY29tcC5pZCArICcpLicsIFxyXG5cdFx0XHRcdFx0XHRcdCdFcnJvIG5vIGJvdMOjbyBkZSBHUkFWQVInKTtcclxuXHRcdFx0XHRcdGVzdGFDYXJyZWdhbmRvKGNvbXAsIHRydWUpO1xyXG5cdFx0XHRcdFx0JGh0dHAoe1xyXG5cdFx0XHRcdFx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdFx0XHQgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcblx0XHRcdFx0XHQgICAgfSxcclxuXHRcdFx0XHRcdFx0bWV0aG9kOiAnREVMRVRFJyxcclxuXHRcdFx0XHRcdFx0ZGF0YTogJGVjdi5tb2RlbG8uY29waWFyRUxpbXBhcihzY29wZS5kYXRhLm1vZGVsKSxcclxuXHRcdFx0XHRcdFx0dXJsOiBHZXRSRVNURW5kcG9pbnQoY29tcC52YWxvciksIFxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHRcdFx0XHRcdGVzdGFDYXJyZWdhbmRvKGNvbXApO1xyXG5cdFx0XHRcdFx0XHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJylyZXR1cm4gJGVjdi50b2FzdC5lcnJvKHJlcy5kYXRhLkVycm8sICdIb3V2ZSB1bSBlcnJvIGFvIGRlbGV0YXInKTtcclxuXHRcdFx0XHRcdFx0JGVjdi50b2FzdC5vaygnRGVsZXRhZG8gY29tIHN1Y2Vzc28hJyk7XHJcblx0XHRcdFx0XHRcdCRlY3YubW9kZWxvLmxpbXBhcihzY29wZS5kYXRhKTtcclxuXHRcdFx0XHRcdH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0XHRcdGVzdGFDYXJyZWdhbmRvKGNvbXApO1xyXG5cdFx0XHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdIb3V2ZSB1bSBlcnJvIGFvIGRlbGV0YXInKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdH1cdFxyXG5cdFx0XHR9O1xyXG5cdFx0XHQvKipcclxuXHRcdFx0ICogVmFsaWRhIGUgc2FsdmEgbyBmb3JtdWxhcmlvLlxyXG5cdFx0XHQgKi9cclxuXHRcdFx0c2NvcGUudmFsaWRhciA9IGZ1bmN0aW9uKGZvcm0pe1xyXG5cdFx0XHRcdGlmIChmb3JtLiRpbnZhbGlkKSB7XHJcblx0XHRcdFx0ICAgIGFuZ3VsYXIuZm9yRWFjaChmb3JtLiRlcnJvciwgZnVuY3Rpb24gKGZpZWxkKSB7XHJcblx0XHRcdFx0ICAgICAgICBhbmd1bGFyLmZvckVhY2goZmllbGQsIGZ1bmN0aW9uKGVycm9yRmllbGQpe1xyXG5cdFx0XHRcdCAgICAgICAgICAgIGVycm9yRmllbGQuJHNldFRvdWNoZWQoKTtcclxuXHRcdFx0XHQgICAgICAgIH0pO1xyXG5cdFx0XHRcdCAgICB9KTtcclxuXHRcdFx0XHQgICAgcmV0dXJuO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR2YXIgY29tcDtcclxuXHRcdFx0XHRmb3IodmFyIGk9MDsgaTxzY29wZS5kYXRhLmNydWQubGVuZ3RoOyBpKyspe1xyXG5cdFx0XHRcdFx0dmFyIGl0ZW1DcnVkID0gc2NvcGUuZGF0YS5jcnVkW2ldO1xyXG5cdFx0XHRcdFx0aWYoaXRlbUNydWQuYWxpYXM9PT0nR1JBVkFSJykge1xyXG5cdFx0XHRcdFx0XHRjb21wID0gaXRlbUNydWQ7XHJcblx0XHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRpZighY29tcC52YWxvcikgcmV0dXJuICRlY3YudG9hc3QuZXJybyhcclxuXHRcdFx0XHRcdFx0J0JvdMOjbyBkZSBhw6fDo28gR1JBVkFSIHNlbSBbdmFsb3JdLjxicj5DYWRhc3RyZSBhIHJvdGEgZG8gUE9TVCBubyBjYW1wbyBjMTNfMjA0IHBhcmEgZXN0ZSBjb21wb25lbnRlIChpZDogJyArIGNvbXAuaWQgKyAnKS4nLCBcclxuXHRcdFx0XHRcdFx0J0Vycm8gbm8gYm90w6NvIGRlIEdSQVZBUicpO1xyXG5cdFx0XHRcdGVzdGFDYXJyZWdhbmRvKGNvbXAsIHRydWUpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0Ly8gUGVyc2lzdGUgbm8gYmFuY29cclxuXHRcdFx0XHQkaHR0cC5wb3N0KEdldFJFU1RFbmRwb2ludChjb21wLnZhbG9yKSwgJGVjdi5tb2RlbG8uY29waWFyRUxpbXBhcihzY29wZS5kYXRhLm1vZGVsKSlcclxuXHRcdFx0XHQudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdFx0ZXN0YUNhcnJlZ2FuZG8oY29tcCk7XHJcblx0XHRcdFx0XHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJykgcmV0dXJuICRlY3YudG9hc3QuZXJybyhyZXMuZGF0YS5FcnJvLCAnSG91dmUgdW0gZXJybyBhbyBpbnNlcmlyJyk7XHJcblx0XHRcdFx0XHRcclxuXHRcdCAgICAgICAgXHRzY29wZS5kYXRhLm1vZGVsID0gcmVzLmRhdGEuUmV0b3JubztcclxuXHRcdFx0XHRcdHNjb3BlLmRhdGEudGVsYXMuZm9yRWFjaChmdW5jdGlvbih0ZWxhKXtcclxuXHRcdFx0XHRcdFx0aWYodGVsYS50aXBvID09PSAnVEVMQSBERSBQRVNRVUlTQScpIHJldHVybjtcclxuXHRcdFx0XHRcdFx0dGVsYS5jb250YWluZXJzLmZvckVhY2goZnVuY3Rpb24oY29udGFpbmVyKXtcclxuXHRcdFx0XHRcdFx0XHRjb250YWluZXIuZm9yRWFjaChmdW5jdGlvbihndWlhKXtcclxuXHRcdFx0XHRcdFx0XHRcdGlmKCFndWlhLmNvbXBvbmVudGVzKSByZXR1cm47XHJcblx0XHRcdFx0XHRcdFx0XHRndWlhLmNvbXBvbmVudGVzLmZvckVhY2goZnVuY3Rpb24oY29tcG9uZW50ZSl7XHJcblx0XHRcdFx0XHRcdFx0XHRcdCRlY3YudXRpbHMucmVjdXIoc2NvcGUuZGF0YS5tb2RlbCwgY29tcG9uZW50ZS5yZWZlcmVuY2lhLCBjb21wb25lbnRlKTtcclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH0pO1x0XHJcblx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdCRlY3YudG9hc3Qub2soJ0luc2VyaWRvIGNvbSBzdWNlc3NvIScpO1xyXG5cdFx0XHRcdH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0XHRlc3RhQ2FycmVnYW5kbyhjb21wKTtcclxuXHRcdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0hvdXZlIHVtIGVycm8gYW8gaW5zZXJpcicpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRcclxuXHRcdFx0Ly8gPT09PT09PT09PT09PT09PT0gQ09MQVBTRSA9PT09PT09PT09PT09PT09PT09PT09PVxyXG5cdFx0XHQvLyBHdWlhIENPTEFQU0U6XHJcblx0XHRcdHNjb3BlLmluc2VyaXJDb2xhcHNlID0gZnVuY3Rpb24oY29sYXBzZXMsIGNvbGFwc2UsIGd1aWFNb2RlbG8sIHRlbGEsIGNvbnRhaW5lcil7XHJcblx0XHRcdFx0dmFyIG1hcGVhbWVudG8gPSBndWlhTW9kZWxvLm1hcGVhbWVudG87XHJcblx0XHQgICAgXHRpZighbWFwZWFtZW50bykgXHJcblx0XHQgICAgXHRcdHJldHVybiAkZWN2LnRvYXN0LmVycm8oJ0ZhbHRhbmRvIHZhbG9yIE1BUEVBTUVOVE8gKGMxMF8yMDMpIHBhcmEgZXN0YSBndWlhIChpZCA6ICcgKyBndWlhTW9kZWxvLmlkICsgJykuJywgXHJcblx0XHQgICAgXHRcdFx0XHQnRXJybyBhbyBjcmlhciBub3ZhIGFiYS4uJyk7XHJcblx0XHQgICAgXHRjb2xhcHNlID0gYW5ndWxhci5jb3B5KGNvbGFwc2UpO1xyXG5cdFx0XHRcdGNvbGFwc2Uubm9tZSA9IGNvbGFwc2Uubm9tZSArICcgJyArIGNvbGFwc2VzLmxlbmd0aDtcclxuXHRcdFx0XHR2YXIgbm92b0luZGljZSA9IGNvbGFwc2VzLmxlbmd0aDtcclxuXHRcdCAgICBcdFxyXG5cdFx0ICAgIFx0aWYoY29sYXBzZS5jb21wb25lbnRlcykgY29sYXBzZS5jb21wb25lbnRlcy5mb3JFYWNoKHBhcmFDYWRhQ29tcG9uZW50ZSk7XHJcblx0XHQgICAgXHR0ZWxhLmNvbnRhaW5lcnMuZm9yRWFjaChmdW5jdGlvbihjb250YWluZXJJbnRlcm5vKXtcclxuXHRcdCAgICBcdFx0aWYoY29udGFpbmVyID09PSBjb250YWluZXJJbnRlcm5vKSByZXR1cm47XHJcblx0XHQgICAgXHRcdGNvbnRhaW5lckludGVybm8uZm9yRWFjaChmdW5jdGlvbihndWlhKXtcclxuXHRcdFx0XHRcdFx0aWYoZ3VpYU1vZGVsbyA9PT0gZ3VpYSkgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRpZighZ3VpYS5jb21wb25lbnRlcykgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRndWlhLmNvbXBvbmVudGVzLmZvckVhY2gocGFyYUNhZGFDb21wb25lbnRlKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0ICAgIFx0XHJcblx0XHQgICAgXHRmdW5jdGlvbiBwYXJhQ2FkYUNvbXBvbmVudGUoY29tcG9uZW50ZSl7XHJcblx0XHRcdFx0XHR2YXIgcG9zID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLmluZGV4T2YobWFwZWFtZW50byk7XHJcblx0XHRcdFx0XHRpZihwb3M8MCkgcmV0dXJuO1xyXG5cdFx0ICAgIFx0XHRwb3MgKz0gbWFwZWFtZW50by5sZW5ndGggKyAxO1xyXG5cdFx0ICAgIFx0XHR2YXIgZW5kID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cihwb3MpLmluZGV4T2YoJ10nKSArIHBvcztcclxuXHRcdCAgICBcdFx0Y29tcG9uZW50ZS5yZWZlcmVuY2lhID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cigwLCBwb3MpICsgbm92b0luZGljZSArIGNvbXBvbmVudGUucmVmZXJlbmNpYS5zdWJzdHIoZW5kKTtcclxuXHRcdFx0XHRcdCRlY3YudXRpbHMucmVjdXIoc2NvcGUuZGF0YS5tb2RlbCwgY29tcG9uZW50ZS5yZWZlcmVuY2lhLCBjb21wb25lbnRlKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0Y29sYXBzZXMucHVzaChjb2xhcHNlKTtcclxuXHRcdFx0fTtcdFx0XHRcclxuXHRcdH1cclxuXHR9O1xyXG59XSk7XHJcbiIsIi8qKlxyXG4gKiBbZWN2Rm9ybVNpbmdsZURldGFpbF1cclxuICogRGlyZXRpdmEgcmVwcmVzZW50YXRpdmEgZG8gZm9ybXXDoXJpbyBzaW5nbGUgZGV0YWxoZS5cclxuICogUmFwaGFlbCBCcmFuZMOjbyAtIDE2LzAxLzIwMTZcclxuICovXHJcbmFuZ3VsYXIubW9kdWxlKCdmaW5hbmNlaXJvJykuZGlyZWN0aXZlKCdlY3ZGb3JtU2luZ2xlRGV0YWlsJywgWyckaHR0cCcsICckZWN2JywgJyRtZERpYWxvZycsXHJcblx0ZnVuY3Rpb24oJGh0dHAsICRlY3YsICRtZERpYWxvZyl7XHJcblx0cmV0dXJuIHtcclxuXHRcdHJlc3RyaWN0OiAnRScsXHJcblx0XHR0ZW1wbGF0ZVVybDogR2V0RE9NSU5JT0VuZHBvaW50KCdhbmd1bGFyLXRlbXBsYXRlcy9mb3JtdWxhcmlvcy9lY3YtZm9ybS1zaW5nbGUtZGV0YWlsLmh0bWwnKSxcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdGRhdGE6ICc9J1xyXG5cdFx0fSxcclxuXHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKXtcclxuXHRcdFx0JGVjdi5tZW51Lmh0bWwuY2FycmVnYWRvID0gdHJ1ZTtcclxuXHRcdFx0c2NvcGUudm9sdGFyID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0XHQkbWREaWFsb2cuY2FuY2VsKHNjb3BlLmRhdGEubW9kZWwpO1xyXG5cdFx0XHR9XHJcblx0XHRcdFxyXG5cdFx0ICAgIHNjb3BlLm5vdmFHdWlhID0gZnVuY3Rpb24oY29udGFpbmVyLCB0ZWxhKXtcclxuXHRcdCAgICBcdHZhciBndWlhTW9kZWxvID0gY29udGFpbmVyWzBdO1xyXG5cdFx0ICAgIFx0dmFyIG1hcGVhbWVudG8gPSBndWlhTW9kZWxvLm1hcGVhbWVudG87XHJcblx0XHQgICAgXHRpZighbWFwZWFtZW50bykgXHJcblx0XHQgICAgXHRcdHJldHVybiAkZWN2LnRvYXN0LmVycm8oJ0ZhbHRhbmRvIHZhbG9yIE1BUEVBTUVOVE8gKGMxMF8yMDMpIHBhcmEgZXN0YSBndWlhIChpZCA6ICcgKyBndWlhTW9kZWxvLmlkICsgJykuJywgXHJcblx0XHQgICAgXHRcdFx0XHQnRXJybyBhbyBjcmlhciBub3ZhIGFiYS4uJyk7XHJcblx0XHQgICAgXHR2YXIgbm92YUd1aWEgPSBhbmd1bGFyLmNvcHkoZ3VpYU1vZGVsbyk7XHJcblx0XHQgICAgXHR2YXIgbm92b0luZGljZSA9IGNvbnRhaW5lci5sZW5ndGg7XHJcblx0XHQgICAgXHRcclxuXHRcdCAgICBcdGlmKG5vdmFHdWlhLmNvbXBvbmVudGVzKSBub3ZhR3VpYS5jb21wb25lbnRlcy5mb3JFYWNoKHBhcmFDYWRhQ29tcG9uZW50ZSk7XHJcblx0XHQgICAgXHR0ZWxhLmNvbnRhaW5lcnMuZm9yRWFjaChmdW5jdGlvbihjb250YWluZXJJbnRlcm5vKXtcclxuXHRcdCAgICBcdFx0aWYoY29udGFpbmVyID09PSBjb250YWluZXJJbnRlcm5vKSByZXR1cm47XHJcblx0XHQgICAgXHRcdGNvbnRhaW5lckludGVybm8uZm9yRWFjaChmdW5jdGlvbihndWlhKXtcclxuXHRcdFx0XHRcdFx0aWYoZ3VpYU1vZGVsbyA9PT0gZ3VpYSkgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRpZighZ3VpYS5jb21wb25lbnRlcykgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRndWlhLmNvbXBvbmVudGVzLmZvckVhY2gocGFyYUNhZGFDb21wb25lbnRlKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0ICAgIFx0XHJcblx0XHQgICAgXHRmdW5jdGlvbiBwYXJhQ2FkYUNvbXBvbmVudGUoY29tcG9uZW50ZSl7XHJcblx0XHRcdFx0XHR2YXIgcG9zID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLmluZGV4T2YobWFwZWFtZW50byk7XHJcblx0XHRcdFx0XHRpZihwb3M8MCkgcmV0dXJuO1xyXG5cdFx0ICAgIFx0XHRwb3MgKz0gbWFwZWFtZW50by5sZW5ndGggKyAxO1xyXG5cdFx0ICAgIFx0XHR2YXIgZW5kID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cihwb3MpLmluZGV4T2YoJ10nKSArIHBvcztcclxuXHRcdCAgICBcdFx0Y29tcG9uZW50ZS5yZWZlcmVuY2lhID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cigwLCBwb3MpICsgbm92b0luZGljZSArIGNvbXBvbmVudGUucmVmZXJlbmNpYS5zdWJzdHIoZW5kKTtcclxuXHRcdFx0XHRcdCRlY3YudXRpbHMucmVjdXIoc2NvcGUuZGF0YS5tb2RlbCwgY29tcG9uZW50ZS5yZWZlcmVuY2lhLCBjb21wb25lbnRlKTtcclxuXHRcdFx0XHR9XHJcblx0XHQgICAgXHRcclxuXHRcdCAgICBcdGNvbnRhaW5lci5wdXNoKG5vdmFHdWlhKTtcclxuXHRcdCAgICB9O1x0XHJcblx0XHQgICAgXHJcblx0XHQgICAgc2NvcGUuZGVsZXRhckd1aWEgPSBmdW5jdGlvbihpbmRleCwgY29udGFpbmVyLCB0ZWxhKXtcclxuXHRcdCAgICBcdHZhciBndWlhID0gY29udGFpbmVyW2luZGV4XTtcclxuXHRcdCAgICBcdGlmKCFndWlhLm1hcGVhbWVudG8pIFxyXG5cdFx0ICAgIFx0XHRyZXR1cm4gJGVjdi50b2FzdC5lcnJvKCdGYWx0YW5kbyB2YWxvciBNQVBFQU1FTlRPIChjMTBfMjAzKSBwYXJhIGVzdGEgZ3VpYSAoaWQgOiAnICsgZ3VpYS5pZCArICcpLicsIFxyXG5cdFx0ICAgIFx0XHRcdFx0J0Vycm8gYW8gY3JpYXIgbm92YSBhYmEuLicpO1xyXG5cdFx0ICAgIFx0aWYoaW5kZXggPT09IGNvbnRhaW5lclsnc2VsZWNpb25hZG8nXSB8fCBjb250YWluZXJbJ3NlbGVjaW9uYWRvJ10gPT09IGNvbnRhaW5lci5sZW5ndGgtMSkgY29udGFpbmVyWydzZWxlY2lvbmFkbyddLS07XHJcblx0XHQgICAgXHRcclxuXHRcdCAgICBcdHRlbGEuY29udGFpbmVycy5mb3JFYWNoKGZ1bmN0aW9uKGNvbnRhaW5lckludGVybm8pe1xyXG5cdFx0ICAgIFx0XHRpZihjb250YWluZXI9PT1jb250YWluZXJJbnRlcm5vKSByZXR1cm47XHJcblx0XHQgICAgXHRcdGZvcih2YXIgaW5kZXhHdWlhID0gY29udGFpbmVySW50ZXJuby5sZW5ndGggLSAxOyBpbmRleEd1aWEgPiAwOyBpbmRleEd1aWEtLSl7XHJcblx0XHQgICAgXHRcdFx0dmFyIGd1aWFJbnRlcm5hID0gY29udGFpbmVySW50ZXJub1tpbmRleEd1aWFdO1xyXG5cdFx0ICAgIFx0XHRcdGlmKCFndWlhSW50ZXJuYS5jb21wb25lbnRlcykgcmV0dXJuO1xyXG5cdFx0ICAgIFx0XHRcdHZhciBkZWxldGVHdWlhID0gZmFsc2U7XHJcblx0XHQgICAgXHRcdFx0Zm9yKHZhciBpbmRleENvbXAgPSAxOyBpbmRleENvbXAgPCBndWlhSW50ZXJuYS5jb21wb25lbnRlcy5sZW5ndGg7IGluZGV4Q29tcCsrKXtcclxuXHRcdCAgICBcdFx0XHRcdHZhciBjb21wb25lbnRlID0gZ3VpYUludGVybmEuY29tcG9uZW50ZXNbaW5kZXhDb21wXTtcclxuXHRcdFx0XHRcdFx0XHR2YXIgcG9zID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLmluZGV4T2YoZ3VpYS5tYXBlYW1lbnRvKTtcclxuXHRcdFx0XHRcdFx0XHRpZihwb3M8MCkgY29udGludWU7XHJcblx0XHRcdFx0ICAgIFx0XHRwb3MgKz0gZ3VpYS5tYXBlYW1lbnRvLmxlbmd0aCArIDE7XHJcblx0XHRcdFx0ICAgIFx0XHR2YXIgZW5kID0gY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cihwb3MpLmluZGV4T2YoJ10nKSArIHBvcztcclxuXHRcdFx0XHQgICAgXHRcdHZhciB2YWwgPSBjb21wb25lbnRlLnJlZmVyZW5jaWEuc3Vic3RyKHBvcywgZW5kLXBvcyk7XHJcblx0XHRcdFx0ICAgIFx0XHRpZih2YWwgIT09IGluZGV4KSBjb250aW51ZTtcclxuXHRcdFx0XHQgICAgXHRcdCRlY3YudXRpbHMubGltcGFyUGFpRG9Nb2RlbG8oc2NvcGUuZGF0YS5tb2RlbCwgY29tcG9uZW50ZS5yZWZlcmVuY2lhLCBndWlhLm1hcGVhbWVudG8pO1xyXG5cdFx0XHRcdCAgICBcdFx0ZGVsZXRlR3VpYSA9IHRydWU7XHJcblx0XHQgICAgXHRcdFx0fVxyXG5cdFx0ICAgIFx0XHRcdGlmKGRlbGV0ZUd1aWEpIGNvbnRhaW5lckludGVybm8uc3BsaWNlKGluZGV4R3VpYSwgMSk7XHJcblx0XHQgICAgXHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdCAgICBcdGlmKGd1aWEuY29tcG9uZW50ZXMpIFxyXG5cdFx0ICAgIFx0XHRndWlhLmNvbXBvbmVudGVzLmZvckVhY2goZnVuY3Rpb24oY29tcG9uZW50ZSl7XHJcblx0XHQgICAgXHRcdFx0JGVjdi51dGlscy5saW1wYXJQYWlEb01vZGVsbyhzY29wZS5kYXRhLm1vZGVsLCBjb21wb25lbnRlLnJlZmVyZW5jaWEsIGd1aWEubWFwZWFtZW50byk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdCAgICBcdFxyXG5cdFx0ICAgIFx0Y29udGFpbmVyLnNwbGljZShpbmRleCwgMSk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICBcclxuXHRcdCAgICBzY29wZS5hdHVhbGl6YXJHdWlhc0RldGFsaGVzID0gZnVuY3Rpb24oaW5kZXgsIGNvbnRhaW5lciwgdGVsYSl7XHJcblx0XHQgICAgXHR2YXIgZ3VpYSA9IGNvbnRhaW5lcltpbmRleF07XHJcblx0XHRcdFx0aWYodGVsYS50aXBvID09PSAnVEVMQSBERSBQRVNRVUlTQScgfHwgIWd1aWEgfHwgIWd1aWEudGlwby5tYXRjaCgnSU5DUkVNRU5UQUwnKSkgcmV0dXJuO1xyXG5cdFx0ICAgIFx0aWYoIWd1aWEubWFwZWFtZW50bykgXHJcblx0XHQgICAgXHRcdHJldHVybiAkZWN2LnRvYXN0LmVycm8oJ0ZhbHRhbmRvIHZhbG9yIE1BUEVBTUVOVE8gKGMxMF8yMDMpIHBhcmEgZXN0YSBndWlhIChpZCA6ICcgKyBndWlhLmlkICsgJykuJywgXHJcblx0XHQgICAgXHRcdFx0XHQnRXJybyBhbyBjcmlhciBub3ZhIGFiYS4uJyk7XHJcblx0XHQgICAgXHR2YXIgbWFwZWFtZW50byA9IGd1aWEubWFwZWFtZW50bztcclxuXHRcdCAgICBcdHRlbGEuY29udGFpbmVycy5mb3JFYWNoKGZ1bmN0aW9uKGNvbnRhaW5lckludGVybm8pe1xyXG5cdFx0ICAgIFx0XHRpZihjb250YWluZXI9PT1jb250YWluZXJJbnRlcm5vKSByZXR1cm47XHJcblx0XHQgICAgXHRcdGNvbnRhaW5lckludGVybm8uZm9yRWFjaChmdW5jdGlvbihndWlhSW50ZXJuYSl7XHJcblx0XHRcdFx0XHRcdGlmKCFndWlhSW50ZXJuYS5jb21wb25lbnRlcykgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRndWlhSW50ZXJuYS5jb21wb25lbnRlcy5mb3JFYWNoKHBhcmFDYWRhQ29tcG9uZW50ZSk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdCAgICBcdGZ1bmN0aW9uIHBhcmFDYWRhQ29tcG9uZW50ZShjb21wb25lbnRlKXtcclxuXHRcdCAgICBcdFx0dmFyIHBvcyA9IGNvbXBvbmVudGUucmVmZXJlbmNpYS5pbmRleE9mKG1hcGVhbWVudG8pO1xyXG5cdFx0XHRcdFx0aWYocG9zPDApIHJldHVybjtcclxuXHRcdCAgICBcdFx0cG9zICs9IG1hcGVhbWVudG8ubGVuZ3RoICsgMTtcclxuXHRcdCAgICBcdFx0dmFyIGVuZCA9IGNvbXBvbmVudGUucmVmZXJlbmNpYS5zdWJzdHIocG9zKS5pbmRleE9mKCddJykgKyBwb3M7XHJcblx0XHQgICAgXHRcdGNvbXBvbmVudGUucmVmZXJlbmNpYSA9IGNvbXBvbmVudGUucmVmZXJlbmNpYS5zdWJzdHIoMCwgcG9zKSArIGluZGV4ICsgY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cihlbmQpO1xyXG5cdFx0XHRcdFx0JGVjdi51dGlscy5yZWN1cihzY29wZS5kYXRhLm1vZGVsLCBjb21wb25lbnRlLnJlZmVyZW5jaWEsIGNvbXBvbmVudGUpO1xyXG5cdFx0XHRcdH1cclxuXHRcdCAgICB9O1xyXG5cdFx0ICAgIFxyXG5cdFx0ICAgIGZ1bmN0aW9uIGVzdGFDYXJyZWdhbmRvKGNvbXAsIGJvb2wpe1xyXG5cdFx0ICAgIFx0aWYoYm9vbCl7XHJcblx0XHQgICAgXHRcdGNvbXAuY2FycmVnYW5kbyA9IHRydWU7XHJcblx0XHQgICAgXHRcdHJldHVybjtcclxuXHRcdCAgICBcdH1cclxuXHRcdCAgICBcdGNvbXAuY2FycmVnYW5kbyA9IGZhbHNlO1xyXG5cdFx0ICAgIH1cclxuXHRcdFx0XHJcblx0XHRcdHNjb3BlLmFjYW9DcnVkID0gZnVuY3Rpb24oY29tcCl7XHJcblx0XHRcdFx0aWYoIWNvbXAuYWxpYXMpIHJldHVybiAkZWN2LnRvYXN0LmVycm8oXHJcblx0XHRcdFx0XHRcdCdCb3TDo28gZGUgYcOnw6NvIHNlbSBbYWxpYXNdLjxicj5DYWRhc3RyZSBhbGd1bSB0ZXJtbyBubyBjYW1wbyBjN18yMDRfODAxIHBhcmEgZXN0ZSBjb21wb25lbnRlIChpZDogJyArIGNvbXAuaWQgKyAnKS4nLCBcclxuXHRcdFx0XHRcdFx0J0Vycm8gbm8gYm90w6NvIGRlIGHDp8OjbycpO1xyXG5cdFx0XHRcdHZhciB0aXBvID0gY29tcC5hbGlhcy50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHRcdGlmKHRpcG8gPT09ICdub3ZvJyl7XHJcblx0XHRcdFx0XHQkZWN2Lm1vZGVsby5saW1wYXIoc2NvcGUuZGF0YSk7XHJcblx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmKHRpcG8gPT09ICdkZWxldGFyJyl7XHJcblx0XHRcdFx0XHRpZighY29tcC52YWxvcikgcmV0dXJuICRlY3YudG9hc3QuZXJybyhcclxuXHRcdFx0XHRcdFx0XHQnQm90w6NvIGRlIGHDp8OjbyBERUxFVEFSIHNlbSBbdmFsb3JdLjxicj5DYWRhc3RyZSBhIHJvdGEgZG8gREVMRVRFIG5vIGNhbXBvIGMxM18yMDQgcGFyYSBlc3RlIGNvbXBvbmVudGUgKGlkOiAnICsgY29tcC5pZCArICcpLicsIFxyXG5cdFx0XHRcdFx0XHRcdCdFcnJvIG5vIGJvdMOjbyBkZSBHUkFWQVInKTtcclxuXHRcdFx0XHRcdGVzdGFDYXJyZWdhbmRvKGNvbXAsIHRydWUpO1xyXG5cdFx0XHRcdFx0JGh0dHAoe1xyXG5cdFx0XHRcdFx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdFx0XHQgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcblx0XHRcdFx0XHQgICAgfSxcclxuXHRcdFx0XHRcdFx0bWV0aG9kOiAnREVMRVRFJyxcclxuXHRcdFx0XHRcdFx0ZGF0YTogJGVjdi5tb2RlbG8uY29waWFyRUxpbXBhcihzY29wZS5kYXRhLm1vZGVsKSxcclxuXHRcdFx0XHRcdFx0dXJsOiBHZXRSRVNURW5kcG9pbnQoY29tcC52YWxvciksIFxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHRcdFx0XHRcdGVzdGFDYXJyZWdhbmRvKGNvbXApO1xyXG5cdFx0XHRcdFx0XHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJylyZXR1cm4gJGVjdi50b2FzdC5lcnJvKHJlcy5kYXRhLkVycm8sICdIb3V2ZSB1bSBlcnJvIGFvIGRlbGV0YXInKTtcclxuXHRcdFx0XHRcdFx0JGVjdi50b2FzdC5vaygnRGVsZXRhZG8gY29tIHN1Y2Vzc28hJyk7XHJcblx0XHRcdFx0XHRcdCRlY3YubW9kZWxvLmxpbXBhcihzY29wZS5kYXRhKTtcclxuXHRcdFx0XHRcdH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0XHRcdGVzdGFDYXJyZWdhbmRvKGNvbXApO1xyXG5cdFx0XHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdIb3V2ZSB1bSBlcnJvIGFvIGRlbGV0YXInKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdH1cdFxyXG5cdFx0XHR9O1xyXG5cdFx0XHQvKipcclxuXHRcdFx0ICogVmFsaWRhIGUgc2FsdmEgbyBmb3JtdWxhcmlvLlxyXG5cdFx0XHQgKi9cclxuXHRcdFx0c2NvcGUudmFsaWRhciA9IGZ1bmN0aW9uKGZvcm0pe1xyXG5cdFx0XHRcdGlmIChmb3JtLiRpbnZhbGlkKSB7XHJcblx0XHRcdFx0ICAgIGFuZ3VsYXIuZm9yRWFjaChmb3JtLiRlcnJvciwgZnVuY3Rpb24gKGZpZWxkKSB7XHJcblx0XHRcdFx0ICAgICAgICBhbmd1bGFyLmZvckVhY2goZmllbGQsIGZ1bmN0aW9uKGVycm9yRmllbGQpe1xyXG5cdFx0XHRcdCAgICAgICAgICAgIGVycm9yRmllbGQuJHNldFRvdWNoZWQoKTtcclxuXHRcdFx0XHQgICAgICAgIH0pO1xyXG5cdFx0XHRcdCAgICB9KTtcclxuXHRcdFx0XHQgICAgcmV0dXJuO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR2YXIgY29tcDtcclxuXHRcdFx0XHRmb3IodmFyIGk9MDsgaTxzY29wZS5kYXRhLmNydWQubGVuZ3RoOyBpKyspe1xyXG5cdFx0XHRcdFx0dmFyIGl0ZW1DcnVkID0gc2NvcGUuZGF0YS5jcnVkW2ldO1xyXG5cdFx0XHRcdFx0aWYoaXRlbUNydWQuYWxpYXM9PT0nR1JBVkFSJykge1xyXG5cdFx0XHRcdFx0XHRjb21wID0gaXRlbUNydWQ7XHJcblx0XHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlc3RhQ2FycmVnYW5kbyhjb21wLCB0cnVlKTtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHQvLyBQZXJzaXN0ZVxyXG5cdFx0XHRcdCRtZERpYWxvZy5oaWRlKHNjb3BlLmRhdGEubW9kZWwpO1x0XHRcdFx0XHJcblx0XHRcdH07XHJcblx0XHRcdFxyXG5cdFx0XHQvLyA9PT09PT09PT09PT09PT09PSBDT0xBUFNFID09PT09PT09PT09PT09PT09PT09PT09XHJcblx0XHRcdC8vIEd1aWEgQ09MQVBTRTpcclxuXHRcdFx0c2NvcGUuaW5zZXJpckNvbGFwc2UgPSBmdW5jdGlvbihjb2xhcHNlcywgY29sYXBzZSwgZ3VpYU1vZGVsbywgdGVsYSwgY29udGFpbmVyKXtcclxuXHRcdFx0XHR2YXIgbWFwZWFtZW50byA9IGd1aWFNb2RlbG8ubWFwZWFtZW50bztcclxuXHRcdCAgICBcdGlmKCFtYXBlYW1lbnRvKSBcclxuXHRcdCAgICBcdFx0cmV0dXJuICRlY3YudG9hc3QuZXJybygnRmFsdGFuZG8gdmFsb3IgTUFQRUFNRU5UTyAoYzEwXzIwMykgcGFyYSBlc3RhIGd1aWEgKGlkIDogJyArIGd1aWFNb2RlbG8uaWQgKyAnKS4nLCBcclxuXHRcdCAgICBcdFx0XHRcdCdFcnJvIGFvIGNyaWFyIG5vdmEgYWJhLi4nKTtcclxuXHRcdCAgICBcdGNvbGFwc2UgPSBhbmd1bGFyLmNvcHkoY29sYXBzZSk7XHJcblx0XHRcdFx0Y29sYXBzZS5ub21lID0gY29sYXBzZS5ub21lICsgJyAnICsgY29sYXBzZXMubGVuZ3RoO1xyXG5cdFx0XHRcdHZhciBub3ZvSW5kaWNlID0gY29sYXBzZXMubGVuZ3RoO1xyXG5cdFx0ICAgIFx0XHJcblx0XHQgICAgXHRpZihjb2xhcHNlLmNvbXBvbmVudGVzKSBjb2xhcHNlLmNvbXBvbmVudGVzLmZvckVhY2gocGFyYUNhZGFDb21wb25lbnRlKTtcclxuXHRcdCAgICBcdHRlbGEuY29udGFpbmVycy5mb3JFYWNoKGZ1bmN0aW9uKGNvbnRhaW5lckludGVybm8pe1xyXG5cdFx0ICAgIFx0XHRpZihjb250YWluZXIgPT09IGNvbnRhaW5lckludGVybm8pIHJldHVybjtcclxuXHRcdCAgICBcdFx0Y29udGFpbmVySW50ZXJuby5mb3JFYWNoKGZ1bmN0aW9uKGd1aWEpe1xyXG5cdFx0XHRcdFx0XHRpZihndWlhTW9kZWxvID09PSBndWlhKSByZXR1cm47XHJcblx0XHRcdFx0XHRcdGlmKCFndWlhLmNvbXBvbmVudGVzKSByZXR1cm47XHJcblx0XHRcdFx0XHRcdGd1aWEuY29tcG9uZW50ZXMuZm9yRWFjaChwYXJhQ2FkYUNvbXBvbmVudGUpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHQgICAgXHRcclxuXHRcdCAgICBcdGZ1bmN0aW9uIHBhcmFDYWRhQ29tcG9uZW50ZShjb21wb25lbnRlKXtcclxuXHRcdFx0XHRcdHZhciBwb3MgPSBjb21wb25lbnRlLnJlZmVyZW5jaWEuaW5kZXhPZihtYXBlYW1lbnRvKTtcclxuXHRcdFx0XHRcdGlmKHBvczwwKSByZXR1cm47XHJcblx0XHQgICAgXHRcdHBvcyArPSBtYXBlYW1lbnRvLmxlbmd0aCArIDE7XHJcblx0XHQgICAgXHRcdHZhciBlbmQgPSBjb21wb25lbnRlLnJlZmVyZW5jaWEuc3Vic3RyKHBvcykuaW5kZXhPZignXScpICsgcG9zO1xyXG5cdFx0ICAgIFx0XHRjb21wb25lbnRlLnJlZmVyZW5jaWEgPSBjb21wb25lbnRlLnJlZmVyZW5jaWEuc3Vic3RyKDAsIHBvcykgKyBub3ZvSW5kaWNlICsgY29tcG9uZW50ZS5yZWZlcmVuY2lhLnN1YnN0cihlbmQpO1xyXG5cdFx0XHRcdFx0JGVjdi51dGlscy5yZWN1cihzY29wZS5kYXRhLm1vZGVsLCBjb21wb25lbnRlLnJlZmVyZW5jaWEsIGNvbXBvbmVudGUpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRjb2xhcHNlcy5wdXNoKGNvbGFwc2UpO1xyXG5cdFx0XHR9O1x0XHRcdFxyXG5cdFx0fVxyXG5cdH07XHJcbn1dKTtcclxuIiwiLyoqXHJcbiAqIFtlY3ZGb3JtXVxyXG4gKiBEaXJldGl2YSBxdWUgY29udHJvbGEgYSBleGliacOnw6NvIGRvcyBmb3JtdWzDoXJpb3MuXHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmRpcmVjdGl2ZSgnZWN2Rm9ybScsIFsnJGh0dHAnLCAnJG1kU2lkZW5hdicsICckZWN2JyxcclxuXHRmdW5jdGlvbigkaHR0cCwgJG1kU2lkZW5hdiwgJGVjdil7XHJcblx0XHJcblx0cmV0dXJue1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdGlkRm9ybSA6ICc9JyxcclxuXHRcdFx0dGlwb0lkaW9tYSA6ICc9JyxcclxuXHRcdFx0YmFuY28gOiAnPScsXHJcblx0XHRcdG1vZGVsbzogJz0nXHJcblx0XHR9LFxyXG5cdFx0dGVtcGxhdGVVcmw6IEdldERPTUlOSU9FbmRwb2ludCgnYW5ndWxhci10ZW1wbGF0ZXMvZm9ybXVsYXJpb3MvZWN2LWZvcm0uaHRtbCcpLFxyXG5cdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pe1xyXG5cdFx0XHRzY29wZS5jYXJyZWdhbmRvID0gJ0J1c2NhbmRvIGZvcm11bMOhcmlvLi4uJztcclxuXHRcdFx0c2NvcGUuZXJyb3IgPSB7fTtcclxuXHRcdFx0XHJcblx0XHRcdHZhciBtc2c0MDAgPSAnSW5mb3JtZSBbaWRGb3JtXSBidXNjYXIgdW0gZm9ybXVsw6FyaW8hJztcclxuXHRcdFx0dmFyIGlkRm9ybSA9IHNjb3BlLmlkRm9ybSxcclxuXHRcdFx0XHR0aXBvSWRpb21hID0gc2NvcGUudGlwb0lkaW9tYSB8fCAkZWN2LmNvbmZpZ1sndGlwb19pZGlvbWEnXSxcclxuXHRcdFx0XHRiYW5jbyA9IHNjb3BlLmJhbmNvIHx8ICRlY3YuY29uZmlnWydiYW5jbyddLFxyXG5cdFx0XHRcdHF1ZXJ5UGFyYW0gPSAnP2lkX2Zvcm09JyArIGlkRm9ybVxyXG5cdFx0XHRcdFx0KyAnJnRpcG9faWRpb21hPScgKyB0aXBvSWRpb21hXHJcblx0XHRcdFx0XHQrICcmYmFuY289JyArIGJhbmNvO1xyXG5cdFx0XHRcclxuXHRcdFx0aWYoIWlkRm9ybSB8fCAhdGlwb0lkaW9tYSB8fCAhYmFuY28pIHtcclxuXHRcdFx0XHRkZWxldGUgc2NvcGUuY2FycmVnYW5kbztcclxuXHRcdFx0XHRzY29wZS5jYXJyZWdhckVycm9yID0gdHJ1ZTtcclxuXHRcdFx0XHRzY29wZS5lcnJvci5lNDAwID0gbXNnNDAwO1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cdFx0XHRxdWVyeVBhcmFtID0gcXVlcnlQYXJhbS50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHRcclxuXHRcdFx0ZnVuY3Rpb24gc3VjY2VzcyhyZXNwKXtcclxuXHRcdFx0XHQvLyBEZXUgZXJyYWRvXHJcblx0XHRcdFx0aWYocmVzcC5kYXRhLlJlc3VsdGFkbz09PSdFUlJPJyl7XHJcblx0XHRcdFx0XHQvLyBFbSBjYXNvIGRlIGVycm8gbmEgcmVzcG9zdGEgZG8gY29udHJvbGVyXHJcblx0XHRcdFx0XHRzY29wZS5jYXJyZWdhckVycm9yID0gdHJ1ZTtcclxuXHRcdFx0XHRcdGRlbGV0ZSBzY29wZS5jYXJyZWdhbmRvO1xyXG5cdFx0XHRcdFx0c2NvcGUuZXJyb3IuZTUwMCA9IHJlc3AuZGF0YS5FcnJvO1xyXG5cdFx0XHRcdFx0c2NvcGUuZXJyb3IuZGV0YWxoZSA9IHJlc3AuZGF0YS5SZXRvcm5vO1xyXG5cdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHQvLyBEZXUgY2VydG9cclxuXHRcdFx0XHRzY29wZS5mb3JtRGF0YSA9IHJlc3AuZGF0YS5SZXRvcm5vO1xyXG5cdFx0XHRcdGRvY3VtZW50LnRpdGxlID0gc2NvcGUuZm9ybURhdGEubm9tZTtcclxuXHRcdFx0XHRkZWxldGUgc2NvcGUuY2FycmVnYW5kbztcclxuXHRcdFx0XHQvLyBBZ3J1cGEgZ3VpYXMgZGVudHJvIGRvcyBjb250ZWluZXJzIGNlcnRvc1xyXG5cdFx0XHRcdHNjb3BlLmZvcm1EYXRhLnRlbGFzLmZvckVhY2goZnVuY3Rpb24odGVsYSl7XHJcblx0XHRcdFx0XHR0ZWxhLmNvbnRhaW5lcnMgPSBbXTtcclxuXHRcdFx0XHRcdHRlbGEuZ3VpYXMuZm9yRWFjaChmdW5jdGlvbihndWlhKXtcclxuXHRcdFx0XHRcdFx0dmFyIGluZGV4ID0gMDtcclxuXHRcdFx0XHRcdFx0aWYoZ3VpYS5jb250YWluZXIpIGluZGV4ID0gZ3VpYS5jb250YWluZXI7XHJcblx0XHRcdFx0XHRcdGRlbGV0ZSBndWlhLmNvbnRhaW5lcjtcclxuXHRcdFx0XHRcdFx0aWYodGVsYS5jb250YWluZXJzW2luZGV4XSkgXHJcblx0XHRcdFx0XHRcdFx0dGVsYS5jb250YWluZXJzW2luZGV4XS5wdXNoKGd1aWEpOyBcclxuXHRcdFx0XHRcdFx0ZWxzZSBcclxuXHRcdFx0XHRcdFx0XHR0ZWxhLmNvbnRhaW5lcnNbaW5kZXhdPVtndWlhXTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0ZGVsZXRlIHRlbGEuZ3VpYXM7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0Ly8gSW5zdGFuY2lhIG8gbW9kZWxvIHF1ZSBvIEFuZ3VsYXIgaXLDoSB1c2FyXHJcblx0XHRcdFx0Ly8gY29tbyByZXByZXNlbnRhw6fDo28gZG9zIGRhZG9zIGRvIGZvcm11bMOhcmlvXHJcblx0XHRcdFx0c2NvcGUuZm9ybURhdGEubW9kZWwgPSBzY29wZS5tb2RlbG8gfHwge307XHJcblx0XHRcdFx0dmFyIG1vZGVsb0FuZ3VsYXIgPSBzY29wZS5mb3JtRGF0YS5tb2RlbDtcclxuXHRcdFx0XHQvLyBFc3RydXR1cmEgbyBtb2RlbG8gZG8gZm9ybXVsw6FyaW8gZGUgYWNvcmRvXHJcblx0XHRcdFx0Ly8gY29tIGEgZXN0cnV0dXJhIG5lY2Vzc8OhcmlhXHJcblx0XHRcdFx0c2NvcGUuZm9ybURhdGEudGVsYXMuZm9yRWFjaChmdW5jdGlvbih0ZWxhKXtcclxuXHRcdFx0XHRcdGlmKHRlbGEudGlwbyA9PT0gJ1RFTEEgREUgUEVTUVVJU0EnKSByZXR1cm47XHJcblx0XHRcdFx0XHR0ZWxhLmNvbnRhaW5lcnMuZm9yRWFjaChmdW5jdGlvbihjb250YWluZXIpe1xyXG5cdFx0XHRcdFx0XHRjb250YWluZXIuZm9yRWFjaChmdW5jdGlvbihndWlhKXtcclxuXHRcdFx0XHRcdFx0XHRpZighZ3VpYS5jb21wb25lbnRlcykgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRcdGlmKGd1aWEudGlwby5tYXRjaCgnQ09MQVBTRScpKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRndWlhLm1vZGVsbyA9IHtjb21wb25lbnRlczogZ3VpYS5jb21wb25lbnRlcywgbm9tZTogZ3VpYS5ub21lfTtcclxuXHRcdFx0XHRcdFx0XHRcdGd1aWEuY29sYXBzZXM9W2d1aWEubW9kZWxvXTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0Z3VpYS5jb21wb25lbnRlcy5mb3JFYWNoKGZ1bmN0aW9uKGNvbXBvbmVudGUpe1xyXG5cdFx0XHRcdFx0XHRcdFx0JGVjdi51dGlscy5yZWN1cihtb2RlbG9Bbmd1bGFyLCBjb21wb25lbnRlLnJlZmVyZW5jaWEsIGNvbXBvbmVudGUpO1xyXG5cdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH0pO1x0XHJcblx0XHRcdH1cclxuXHRcdFx0ZnVuY3Rpb24gZXJyb3IoZXJyKXtcclxuXHRcdFx0XHQvLyBFbSBjYXNvIGRlIGVycm8gbmEgY29tdW5pY2HDp8OjbyBvdSBubyBzZXJ2aWRvcixcclxuXHRcdFx0XHQvLyBtb3N0cmEgbyBlcnJvIG5hIHRlbGFcclxuXHRcdFx0XHRzY29wZS5jYXJyZWdhckVycm9yID0gdHJ1ZTtcclxuXHRcdFx0XHRkZWxldGUgc2NvcGUuY2FycmVnYW5kbztcclxuXHRcdFx0XHRzY29wZS5lcnJvci5lNTAwID0gZXJyLmRhdGE7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHRcdC8vIFJvdGEgcXVlIGJ1c2NhIG8gZm9ybXVsw6FyaW9cclxuXHRcdFx0JGh0dHAuZ2V0KEdldFJFU1RFbmRwb2ludCgnRk9STVVMQVJJTy9CVVNDQVInICsgcXVlcnlQYXJhbSkpLnRoZW4oc3VjY2VzcywgZXJyb3IpO1x0XHRcdFxyXG5cdFx0fVxyXG5cdH1cdFxyXG59XSk7IiwiLyoqXHJcbiAqIFtlY3ZNZW51SXRlbV1cclxuICogRGlyZXRpdmEgcGFyYSBjb250cm9sYXIgb3MgaXRlbnMgZGVudHJvIGRvIG1lbnUgZ2VyZW5jaWFkbyBwb3IgW2Vjdk1lbnVMYXRlcmFsXS5cclxuICogUmFwaGFlbCBCcmFuZMOjbyAtIDMxLzEyLzIwMTZcclxuICovXHJcbmFuZ3VsYXIubW9kdWxlKCdmaW5hbmNlaXJvJykuZGlyZWN0aXZlKCdlY3ZNZW51SXRlbScsIFsnJHN0YXRlJywgZnVuY3Rpb24oJHN0YXRlKXtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdGRlYnVnOiAnPScsXHJcblx0XHRcdGl0ZW06ICc9JyxcclxuXHRcdFx0cGFpOiAnPSdcclxuXHRcdH0sXHJcblx0XHR0ZW1wbGF0ZVVybDogR2V0RE9NSU5JT0VuZHBvaW50KCdhbmd1bGFyLXRlbXBsYXRlcy9tZW51L2Vjdi1tZW51LWl0ZW0uaHRtbCcpLFxyXG5cdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcclxuXHRcdFx0c2NvcGUuJHN0YXRlID0gJHN0YXRlO1xyXG5cdFx0XHQvLyBDb3JlcyBwYWRyw7VlcyBkbyBtZW51XHJcblx0XHRcdHNjb3BlLmNvcmVzID0geyBtZW51OiB7fSwgZm9ybToge30gfTtcclxuXHRcdFx0c2NvcGUuY29yZXMubWVudS5mdW5kbyA9ICdncmV5LTIwMCc7XHJcblx0XHRcdHNjb3BlLmNvcmVzLm1lbnUuY29yID0gJ2dyZXktQTIwMCc7XHJcblx0XHRcdHNjb3BlLmNvcmVzLmZvcm0uZnVuZG8gPSAnZ3JleS1BMTAwJztcclxuXHRcdFx0c2NvcGUuY29yZXMuZm9ybS5jb3IgPSAnZ3JleS1BMjAwJztcclxuXHRcdFx0Ly8gQ29yZXMgZG8gbWVudSBzZWxlY2lvbmFkb1xyXG5cdFx0XHRzY29wZS5jb3Jlcy5tZW51LmZ1bmRvQSA9ICdhY2NlbnQnO1xyXG5cdFx0XHRzY29wZS5jb3Jlcy5tZW51LmNvckEgPSAnZ3JleS1BMTAwJztcclxuXHRcdFx0c2NvcGUuY29yZXMuZm9ybS5mdW5kb0EgPSAnYWNjZW50JztcclxuXHRcdFx0c2NvcGUuY29yZXMuZm9ybS5jb3JBID0gJ2dyZXktQTEwMCc7XHRcdFx0XHJcblx0XHR9XHRcclxuXHR9XHJcbn1dKTsiLCIvKipcclxuICogW2Vjdk1lbnVMYXRlcmFsXVxyXG4gKiBEaXJldGl2YSBwYXJhIGNvbnRyb2xhciBhIGhpZXJhcnF1aWEgZSBkaXNwb3Npw6fDo28gZG8gbWVudSBsYXRlcmFsLlxyXG4gKiBSYXBoYWVsIEJyYW5kw6NvIC0gMzEvMTIvMjAxNlxyXG4gKi9cclxuYW5ndWxhci5tb2R1bGUoJ2ZpbmFuY2Vpcm8nKS5kaXJlY3RpdmUoJ2Vjdk1lbnVMYXRlcmFsJywgWyckaHR0cCcsICckZWN2JyxcclxuXHRmdW5jdGlvbigkaHR0cCwgJGVjdil7XHJcblx0cmV0dXJuIHtcclxuXHRcdHJlc3RyaWN0OiAnRScsXHJcblx0XHRzY29wZToge1xyXG5cdFx0XHRkZWJ1ZzogJz0nLFxyXG5cdFx0XHRkYXRhOiAnPSdcclxuXHRcdH0sXHJcblx0XHR0ZW1wbGF0ZVVybDogR2V0RE9NSU5JT0VuZHBvaW50KCdhbmd1bGFyLXRlbXBsYXRlcy9tZW51L2Vjdi1tZW51LWxhdGVyYWwuaHRtbCcpLFxyXG5cdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcclxuXHRcdFx0c2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCl7IHJldHVybiAkZWN2LmNvbmZpZy50aXBvX2lkaW9tYTsgfSwgZnVuY3Rpb24oYmFuZGVpcmFDb2Qpe1xyXG5cdFx0XHRcdHN3aXRjaChiYW5kZWlyYUNvZCl7XHJcblx0XHRcdFx0Y2FzZSAxNjAyOlxyXG5cdFx0XHRcdFx0c2NvcGUuYmFuZGVpcmEgPSAnZmxhZy1pY29uLWVzJztcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdGNhc2UgMTYwMzpcclxuXHRcdFx0XHRcdHNjb3BlLmJhbmRlaXJhID0gJ2ZsYWctaWNvbi11cyc7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRkZWZhdWx0OlxyXG5cdFx0XHRcdFx0c2NvcGUuYmFuZGVpcmEgPSAnZmxhZy1pY29uLWJyJztcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHRcdFxyXG5cdFx0XHRzY29wZS5tZW51Q2FycmVnYWRvID0gZmFsc2U7XHJcblx0XHRcdHNjb3BlLmVycm9Bb0NhcnJlZ2FyID0gZmFsc2U7XHJcblx0XHRcdHNjb3BlLm1lbnUgPSAkZWN2Lm1lbnU7XHJcblx0XHRcdFxyXG5cdFx0XHQkaHR0cC5nZXQoR2V0UkVTVEVuZHBvaW50KCdUOTgwMicpKVxyXG5cdFx0XHQudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdHNjb3BlLm1lbnVDYXJyZWdhZG8gPSB0cnVlO1xyXG5cdFx0XHRcdGlmKHJlcy5kYXRhLlJlc3VsdGFkbyA9PT0gJ0VSUk8nKSB7XHJcblx0XHRcdFx0XHRzY29wZS5lcnJvQW9DYXJyZWdhciA9IHRydWU7XHJcblx0XHRcdFx0XHRyZXR1cm4gJGVjdi50b2FzdC5lcnJvKHJlcy5kYXRhLkVycm8sICdIb3V2ZSB1bSBlcnJvIGFvIGJ1c2NhciBvIG1lbnUnKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYocmVzLmRhdGEuUmV0b3Jubyl7XHJcblx0XHRcdFx0XHRzY29wZS5pdGVtcyA9IHJlcy5kYXRhLlJldG9ybm87XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdHNjb3BlLm1lbnVDYXJyZWdhZG8gPSB0cnVlO1xyXG5cdFx0XHRcdHNjb3BlLmVycm9Bb0NhcnJlZ2FyID0gdHJ1ZTtcclxuXHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdIb3V2ZSB1bSBlcnJvIGFvIGJ1c2NhciBvIG1lbnUnKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fVxyXG59XSk7IiwiLyoqXHJcbiAqIFtlY3ZNb2RhbEF1dG9jb21wbGV0ZV1cclxuICogQ29udHJvbGVyIHBhcmEgbyBtb2RhbCBkZSBidXNjYSBjb20gYXV0b2NvbXBsZXRlLlxyXG4gKiBHdXN0YXZvIERvbWluZ3VldGkgLSAxNi8xMi8yMDE2XHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmNvbnRyb2xsZXIoJ2Vjdk1vZGFsQXV0b2NvbXBsZXRlJywgWyckc2NvcGUnLCAnY29tcG9uZW50ZScsICdmbicsICckaHR0cCcsIFxyXG5cdGZ1bmN0aW9uKCRzY29wZSwgY29tcG9uZW50ZSwgZm4sICRodHRwKXtcclxuXHRcdCRzY29wZS5jb21wb25lbnRlID0gY29tcG9uZW50ZTtcclxuXHRcdCRzY29wZS5mbiA9IGZuO1xyXG5cdFx0Ly9idXNjYSBhc3PDrW5jcm9uYVxyXG5cdFx0JHNjb3BlLnF1ZXJ5U2VhcmNoID0gZnVuY3Rpb24oY29tcG9uZW50ZSwgcXVlcnkpe1xyXG5cdFx0XHRpZihjb21wb25lbnRlLmRldGFsaGFtZW50by5jYXJhY3RlcmVzTWluaW1vcyAmJiBjb21wb25lbnRlLmRldGFsaGFtZW50by5jYXJhY3RlcmVzTWluaW1vcyA+IHF1ZXJ5Lmxlbmd0aCkgcmV0dXJuO1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KEdldFJFU1RFbmRwb2ludChjb21wb25lbnRlLmRldGFsaGFtZW50by5vcGNvZXMpICsgXCImcXVlcnk9JyUyNVwiICsgcXVlcnkgKyBcIiUyNSdcIikudGhlbihmdW5jdGlvbihyZXNwKXtcclxuXHRcdFx0XHRpZihyZXNwLmRhdGEuUmV0b3JubylcclxuXHRcdFx0XHRcdHJldHVybiByZXNwLmRhdGEuUmV0b3JubztcclxuXHRcdFx0fSk7XHJcblx0XHR9O1x0XHJcbn1dKTsiLCIvKipcclxuICogW2Vjdk1vZGFsRm9ybURldGFpbF1cclxuICogQ29udHJvbGxlciByZXNwb25zw6F2ZWwgcG9yIGdlcmVuY2lhciBvIG1vZGFsIHF1ZSBjYXJyZWdhIGFzIFxyXG4gKiBlc3BlY2lhbGlkYWRlcyBkb3MgZGV0YWxoZXMuXHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmNvbnRyb2xsZXIoJ2Vjdk1vZGFsRm9ybURldGFpbCcsIFsnJHNjb3BlJywgJyRtZERpYWxvZycsICckZGF0YScsICckaHR0cCcsXHJcbiAgICBmdW5jdGlvbigkc2NvcGUsICRtZERpYWxvZywgJGRhdGEpe1xyXG5cdFxyXG5cdCRzY29wZS5kYXRhID0gJGRhdGE7XHJcbn1dKTsiLCIvKipcclxuICogW2Vjdk1vZGFsQXV0b2NvbXBsZXRlODAxXVxyXG4gKiBDb250cm9sZXIgcGFyYSBvIG1vZGFsIGRlIGJ1c2NhIGNvbSBhdXRvY29tcGxldGUgZGEgdGFiZWxhIHQ4MDEuXHJcbiAqIFJhcGhhZWwgQnJhbmTDo28gLSAyNi8wMS8yMDE3XHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmNvbnRyb2xsZXIoJ2Vjdk1vZGFsSHRtbEF1dG9jb21wbGV0ZScsIFsnJHNjb3BlJywgJ2NvbXBvbmVudGUnLCAnZm4nLCAnJGh0dHAnLCBcclxuXHRmdW5jdGlvbigkc2NvcGUsIGNvbXBvbmVudGUsIGZuLCAkaHR0cCl7XHJcblx0XHQkc2NvcGUuY29tcG9uZW50ZSA9IGNvbXBvbmVudGU7XHJcblx0XHQkc2NvcGUuZm4gPSBmbjtcclxuXHRcdC8vYnVzY2EgYXNzw61uY3JvbmFcclxuXHRcdCRzY29wZS5xdWVyeVNlYXJjaCA9IGZ1bmN0aW9uKGNvbXBvbmVudGUsIHF1ZXJ5KXtcclxuXHRcdFx0aWYoIWNvbXBvbmVudGUub3Bjb2VzKSByZXR1cm47XHJcblx0XHRcdGlmKGNvbXBvbmVudGUuY2FyYWN0ZXJlc01pbmltb3MgJiYgY29tcG9uZW50ZS5jYXJhY3RlcmVzTWluaW1vcyA+IHF1ZXJ5Lmxlbmd0aCkgcmV0dXJuO1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KEdldFJFU1RFbmRwb2ludChjb21wb25lbnRlLm9wY29lcykgKyBcIiZxdWVyeT0nJTI1XCIgKyBxdWVyeSArIFwiJTI1J1wiKS50aGVuKGZ1bmN0aW9uKHJlc3Ape1xyXG5cdFx0XHRcdGlmKHJlc3AuZGF0YS5SZXRvcm5vKVxyXG5cdFx0XHRcdFx0cmV0dXJuIHJlc3AuZGF0YS5SZXRvcm5vO1xyXG5cdFx0XHR9KTtcclxuXHRcdH07XHRcclxufV0pOyIsIi8qKlxyXG4gKiBbZWN2TW9kYWxJbWFnZW1VcGxvYWRdXHJcbiAqIENvbnRyb2xlciBwYXJhIG8gbW9kYWwgZGUgaW5zZXLDp8OjbyBkZSBpbWFnZW0uXHJcbiAqIFJhcGhhZWwgQnJhbmTDo28gLSAyOS8xMC8yMDE2XHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmNvbnRyb2xsZXIoJ2Vjdk1vZGFsSW1hZ2VtVXBsb2FkJywgWyckc2NvcGUnLCAnY29tcG9uZW50ZScsICdjb21wb25lbnRlTGVnZW5kYScsICdmbicsIFxyXG5cdGZ1bmN0aW9uKCRzY29wZSwgY29tcG9uZW50ZSwgY29tcG9uZW50ZUxlZ2VuZGEsIGZuKXtcclxuXHRcdCRzY29wZS5jb21wb25lbnRlID0gY29tcG9uZW50ZTtcclxuXHRcdCRzY29wZS5jb21wb25lbnRlTGVnZW5kYSA9IGNvbXBvbmVudGVMZWdlbmRhO1xyXG5cdFx0dmFyIGRldGFsaGFtZW50byA9IGNvbXBvbmVudGUuZGV0YWxoYW1lbnRvO1xyXG5cdFx0JHNjb3BlLmZuID0gZm47XHJcblx0XHJcblx0XHR2YXIgY3JvcCA9IG51bGw7XHJcblx0XHRcclxuXHRcdC8vIENoYW1hZG8gcXVhbmRvIGEgaW1hZ2VtIGZvciBzZWxlY2lvbmFkYVxyXG5cdFx0JHNjb3BlLmltYWdlbVNlbGVjaW9uYWRhID0gZnVuY3Rpb24gKGVyciwgZmlsZXMpIHtcclxuXHRcdFx0dmFyIGltZ1Byb2ZpbGUgPSAkKCcjaW1nUHJvZmlsZScpO1xyXG5cdFx0XHRpZiAoY3JvcCkge1xyXG5cdFx0XHRcdGNyb3AuY3JvcHBlcigncmVwbGFjZScsIGZpbGVzLmZpbGU2NCk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0aW1nUHJvZmlsZS5hdHRyKCdzcmMnLCBmaWxlcy5maWxlNjQpO1xyXG5cdFx0XHRcdGltZ1Byb2ZpbGUuY3JvcHBlcih7XHJcblx0XHRcdFx0XHRjcm9wOiBmdW5jdGlvbiAoZSkge1xyXG5cdFx0XHRcdFx0XHRjb21wb25lbnRlLmltYWdlbUNvcnRlID0ge1xyXG5cdFx0XHRcdFx0XHRcdHggOiBlLngsXHJcblx0XHRcdFx0XHRcdFx0eSA6IGUueSxcclxuXHRcdFx0XHRcdFx0XHR3IDogZS53aWR0aCxcclxuXHRcdFx0XHRcdFx0XHRoIDogZS5oZWlnaHQsXHJcblx0XHRcdFx0XHRcdFx0b3c6IGUudGFyZ2V0LndpZHRoLFxyXG5cdFx0XHRcdFx0XHRcdG9oOiBlLnRhcmdldC5oZWlnaHRcclxuXHRcdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRidWlsdDogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRjcm9wID0gJCh0aGlzKTtcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRhc3BlY3RSYXRpbzogZGV0YWxoYW1lbnRvLmxhcmd1cmEgJiYgZGV0YWxoYW1lbnRvLmFsdHVyYSAmJiBcclxuXHRcdFx0XHRcdFx0cGFyc2VJbnQoZGV0YWxoYW1lbnRvLmxhcmd1cmEpL3BhcnNlSW50KGRldGFsaGFtZW50by5hbHR1cmEpLFxyXG5cdFx0XHRcdFx0dmlld01vZGU6IDEsXHJcblx0XHRcdFx0XHRiYWNrZ3JvdW5kOiBmYWxzZSxcclxuXHRcdFx0XHRcdG1vZGFsOiBmYWxzZSxcclxuXHRcdFx0XHRcdG1vdmFibGU6IGZhbHNlLFxyXG5cdFx0XHRcdFx0cm90YXRhYmxlOiBmYWxzZSxcclxuXHRcdFx0XHRcdHNjYWxhYmxlOiBmYWxzZSxcclxuXHRcdFx0XHRcdHpvb21hYmxlOiBmYWxzZSxcclxuXHRcdFx0XHRcdHpvb21PblRvdWNoOiBmYWxzZSxcclxuXHRcdFx0XHRcdHpvb21PbldoZWVsOiBmYWxzZVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHRcdCRzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXtcclxuXHRcdFx0XHQkc2NvcGUuZmlsZXMgPSBmaWxlcztcclxuXHRcdFx0XHQkc2NvcGUuaW1hZ2VtQWJlcnRhID0gdHJ1ZTtcclxuXHRcdFx0fSk7XHJcblx0XHR9O1xyXG5cdFxyXG5cdFx0JHNjb3BlLnJlY29ydGFyID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0ZGV0YWxoYW1lbnRvLmltYWdlbVJlY29ydGFkYSA9IGNyb3AuY3JvcHBlcignZ2V0Q3JvcHBlZENhbnZhcycsIHt3aWR0aDogZGV0YWxoYW1lbnRvLmxhcmd1cmEsIGhlaWdodDogZGV0YWxoYW1lbnRvLmFsdHVyYX0pO1xyXG5cdFx0XHRkZXRhbGhhbWVudG8uaW1hZ2VtUmVjb3J0YWRhLnRvQmxvYihmdW5jdGlvbihibG9iKXtcclxuXHRcdFx0XHRibG9iVG9CYXNlNjQoYmxvYiwgZnVuY3Rpb24oYmFzZTY0KXtcclxuXHRcdFx0XHRcdCRzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRcdFx0Y29tcG9uZW50ZS5tb2RlbG9bY29tcG9uZW50ZS51bHRpbWFSZWZlcmVuY2lhXSA9ICdkYXRhOmltYWdlL2pwZWc7YmFzZTY0LCcgKyBiYXNlNjQ7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdGZuLmNsb3NlKCk7XHJcblx0XHR9O1xyXG5cdFx0XHJcblx0XHRmdW5jdGlvbiBibG9iVG9CYXNlNjQgKGJsb2IsIGNiKSB7XHJcblx0XHQgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcblx0XHQgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0ICAgIHZhciBkYXRhVXJsID0gcmVhZGVyLnJlc3VsdDtcclxuXHRcdCAgICB2YXIgYmFzZTY0ID0gZGF0YVVybC5zcGxpdCgnLCcpWzFdO1xyXG5cdFx0ICAgIGNiKGJhc2U2NCk7XHJcblx0XHQgICAgfTtcclxuXHRcdCAgICByZWFkZXIucmVhZEFzRGF0YVVSTChibG9iKTtcclxuXHRcdH1cclxufV0pO1xyXG4iLCIvKipcclxuICogWyRlY3ZdXHJcbiAqIEZhY3RvcnkgcGFyYSBwYWRyb25pemFyIG8gJG1kVG9hc3QgZGUgc3VjZXNzbyBlIGVycm8uXHJcbiAqIFJhcGhhZWwgQnJhbmTDo28gLSAxOS8xMi8yMDE2XHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmZhY3RvcnkoJyRlY3YnLCBbJyRtZFRvYXN0JywgJyRtZERpYWxvZycsIGZ1bmN0aW9uKCRtZFRvYXN0LCAkbWREaWFsb2cpe1xyXG5cdHZhciBwb3NpY2FvID0gJ2JvdHRvbSByaWdodCc7XHJcblx0XHJcblx0dmFyIHRvYXN0RXJyb3IgPSAkbWRUb2FzdC5zaW1wbGUoKVxyXG5cdFx0LmFjdGlvbignTE9HJylcclxuXHRcdC5oaWdobGlnaHRBY3Rpb24odHJ1ZSlcclxuXHRcdC5oaWdobGlnaHRDbGFzcygnbWQtYWNjZW50JylcclxuXHRcdC5oaWRlRGVsYXkoNTAwMClcclxuXHRcdC5wb3NpdGlvbihwb3NpY2FvKTtcclxuXHJcblx0dmFyIHRvYXN0T2sgPSAkbWRUb2FzdC5zaW1wbGUoKVxyXG5cdFx0LmhpZGVEZWxheSgzMDAwKVxyXG5cdFx0LnBvc2l0aW9uKHBvc2ljYW8pO1xyXG5cdFxyXG5cdHZhciBkaWFsb2cgPSAkbWREaWFsb2cuYWxlcnQoKVxyXG5cdCAgICAuY2xpY2tPdXRzaWRlVG9DbG9zZShmYWxzZSlcclxuXHQgICAgLm9rKCdPaycpO1xyXG5cdFxyXG5cdGZ1bmN0aW9uIGVycm8oZXJyLCBtc2cpe1xyXG5cdCAgICAkbWRUb2FzdC5zaG93KFxyXG5cdCAgICBcdFx0dG9hc3RFcnJvci50ZXh0Q29udGVudChtc2cpXHJcblx0ICAgIFx0XHQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHQgICAgICBpZiAoIHJlc3BvbnNlID09ICdvaycgKVxyXG5cdCAgICBcdCAgJG1kRGlhbG9nLnNob3coXHJcblx0ICAgIFx0XHRcdCAgZGlhbG9nLnRpdGxlKG1zZylcclxuXHQgICAgXHRcdFx0ICAgIFx0Lmh0bWxDb250ZW50KGVycilcclxuXHQgICAgXHRcdFx0ICAgIFx0LmFyaWFMYWJlbChtc2cpXHJcblx0ICAgIFx0XHRcdCAgIFx0KTtcclxuXHQgICAgfSk7XHJcblx0fVxyXG5cdFxyXG5cdGZ1bmN0aW9uIG9rKG1zZyl7XHJcblx0XHQkbWRUb2FzdC5zaG93KHRvYXN0T2sudGV4dENvbnRlbnQobXNnKSk7XHJcblx0fVxyXG5cdFxyXG5cdC8qKlxyXG5cdCAqIExpbXBhIG9iamV0b3MgZSBhcnJheXMgdmF6aW9zIGRvIG9iamV0byBwYWkuXHJcblx0ICovXHJcblx0ZnVuY3Rpb24gbGltcGFWYXppb3Mob2JqUGFpKXtcclxuXHRcdHZhcnJlcihvYmpQYWksIGZ1bmN0aW9uKG9iaiwga2V5LCB0eXBlKXtcclxuXHRcdFx0aWYoIXR5cGUpe1xyXG5cdFx0XHRcdGRlbGV0ZSBvYmpba2V5XTtcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHRcdFx0aWYodHlwZSA9PT0gJ29iamVjdCcgJiYgT2JqZWN0LmtleXMob2JqW2tleV0pLmxlbmd0aCA9PT0gMCkge1xyXG5cdFx0XHRcdGlmKG9ialtrZXldLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xyXG5cdFx0XHRcdGRlbGV0ZSBvYmpba2V5XTtcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH1cclxuXHRcclxuXHQvKipcclxuXHQgKiBDcmlhIHVtYSBjw7NwaWEsIHZhcnJlIG8gb2JqZXRvIGUgbGltcGEgb3MgdmF6aW9zLlxyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIGNvcGlhckVMaW1wYXIob2JqUGFpKXtcclxuXHRcdHZhciBjb3BpYSA9IGFuZ3VsYXIuY29weShvYmpQYWkpO1xyXG5cdFx0Ly8gTElNUEVaQVxyXG5cdFx0Ly8gRGVsZXRhIG9iamV0b3MgZSBhcnJheXMgdmF6aW9zXHJcblx0XHRsaW1wYVZhemlvcyhjb3BpYSk7XHJcblx0XHRyZXR1cm4gY29waWE7XHJcblx0fVxyXG5cdFxyXG5cdC8qKlxyXG5cdCAqIFZhcnJlIHRvZG8gb2JqZXRvIGUgcmV0b3JuYSBwZWxvIGNhbGxiYWNrLlxyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIHZhcnJlcihvYmosIGNhbGxiYWNrKXtcclxuXHRcdGlmKCFvYmogfHwgIWNhbGxiYWNrKSByZXR1cm47XHJcblx0XHRpZih0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JykgcmV0dXJuIGNhbGxiYWNrKG9iaiwgbnVsbCwgdHlwZW9mIG9ialtrZXldKTtcclxuXHRcdGZvcih2YXIga2V5IGluIG9iail7XHJcblx0XHRcdGlmKCFvYmpba2V5XSAmJiBvYmpba2V5XSAhPT0gMCl7XHJcblx0XHRcdFx0Y2FsbGJhY2sob2JqLCBrZXksIG9ialtrZXldKTtcclxuXHRcdFx0XHRjb250aW51ZTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZih0eXBlb2Ygb2JqW2tleV0gPT09ICdvYmplY3QnKSB2YXJyZXIob2JqW2tleV0sIGNhbGxiYWNrKTsgXHJcblx0XHRcdGNhbGxiYWNrKG9iaiwga2V5LCB0eXBlb2Ygb2JqW2tleV0pO1xyXG5cdFx0fVxyXG5cdFx0Y2FsbGJhY2sob2JqLCBrZXksIHR5cGVvZiBvYmpba2V5XSk7XHJcblx0fVxyXG5cdFxyXG5cdC8qKlxyXG5cdCAqIExpbXBhIG8gbW9kZWxvIGRvIGZvcm11bMOhcmlvXHJcblx0ICovXHJcblx0ZnVuY3Rpb24gbGltcGFyKGRhdGEpe1xyXG5cdFx0ZGF0YS50ZWxhcy5mb3JFYWNoKGZ1bmN0aW9uKHRlbGEpe1xyXG5cdFx0XHRpZih0ZWxhLnRpcG8gPT09ICdURUxBIERFIFBFU1FVSVNBJykgcmV0dXJuO1xyXG5cdFx0XHR0ZWxhLmNvbnRhaW5lcnMuZm9yRWFjaChmdW5jdGlvbihjb250YWluZXIpe1xyXG5cdFx0XHRcdGNvbnRhaW5lci5mb3JFYWNoKGZ1bmN0aW9uKGd1aWEpe1xyXG5cdFx0XHRcdFx0aWYoIWd1aWEuY29tcG9uZW50ZXMpIHJldHVybjtcclxuXHRcdFx0XHRcdGd1aWEuY29tcG9uZW50ZXMuZm9yRWFjaChmdW5jdGlvbihjb21wb25lbnRlKXtcclxuXHRcdFx0XHRcdFx0aWYoIWNvbXBvbmVudGUucmVmZXJlbmNpYSkgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRpZihjb21wb25lbnRlLnRpcG8gPT09ICdHUkFERSBERSBFWElCSUNBTyAtIERFVEFJTCcpe1xyXG5cdFx0XHRcdFx0XHRcdGNvbXBvbmVudGUubW9kZWxvW2NvbXBvbmVudGUudWx0aW1hUmVmZXJlbmNpYV0ubGVuZ3RoID0gMDtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0aWYodHlwZW9mIGNvbXBvbmVudGUubW9kZWxvW2NvbXBvbmVudGUudWx0aW1hUmVmZXJlbmNpYV0gIT09ICdvYmplY3QnIHx8IGNvbXBvbmVudGUudmlzaXZlbClcclxuXHRcdFx0XHRcdFx0XHRjb21wb25lbnRlLm1vZGVsb1tjb21wb25lbnRlLnVsdGltYVJlZmVyZW5jaWFdID0gdW5kZWZpbmVkO1xyXG5cdFx0XHRcdFx0XHRpZighY29tcG9uZW50ZS52YWxvcikgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHR0cnl7XHJcblx0XHRcdFx0XHRcdFx0Y29tcG9uZW50ZS5tb2RlbG9bY29tcG9uZW50ZS51bHRpbWFSZWZlcmVuY2lhXSA9IEpTT04ucGFyc2UoY29tcG9uZW50ZS52YWxvcik7XHJcblx0XHRcdFx0XHRcdH1jYXRjaChlKXtcclxuXHRcdFx0XHRcdFx0XHRjb21wb25lbnRlLm1vZGVsb1tjb21wb25lbnRlLnVsdGltYVJlZmVyZW5jaWFdID0gY29tcG9uZW50ZS52YWxvcjtcclxuXHRcdFx0XHRcdFx0fVx0XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcdFxyXG5cdH1cclxuXHRcclxuXHQvKipcclxuXHQgKiBDcmlhIGEgw6Fydm9yZSBubyBPYmogZW52aWFkbyBzZWd1bmRvIGEgUmVmIGVudmlhZGEuXHJcblx0ICovXHJcblx0ZnVuY3Rpb24gcmVjdXIob2JqLCByZWYsIGNvbXApe1xyXG5cdFx0aWYoIXJlZikgcmV0dXJuO1xyXG5cdFx0aWYoIW9iaiB8fCAhY29tcCkgdGhyb3cgJ0VDVi1SRUNVUkV4Y2VwdGlvbjpcXG5GYWx0YW5kbyBwYXLDom1ldHJvc1xcbicgXHJcblx0XHQrIGNvbXAucmVmZXJlbmNpYSArICdcXG5Db21wb25lbnRlIGlkOiAnICsgY29tcC5pZCArICdcXG5yZWN1cignKyBKU09OLnN0cmluZ2lmeShvYmopICsgJywgJyArIHJlZiArICcsICcgKyBKU09OLnN0cmluZ2lmeShjb21wKSArICcpOyc7XHJcblx0XHRpZihyZWYuaW5kZXhPZignLicpPT09LTEpe1xyXG5cdFx0XHRpZihyZWYuaW5kZXhPZignWycpID4gMCl7XHJcblx0XHRcdFx0dmFyIHJ4ID0gLyguKylcXFsoW15cXF1dKilcXF0vLmV4ZWMocmVmKTsgLy9yeFsxXSBjaGF2ZSwgcnhbMl0gcG9zaWNhb1xyXG5cdFx0XHRcdGlmKHJ4KXtcclxuXHRcdFx0XHRcdGlmKCFvYmpbcnhbMV1dKSBvYmpbcnhbMV1dID0gW107XHJcblx0XHRcdFx0XHRjb21wLm1vZGVsbyA9IG9iajtcclxuXHRcdFx0XHRcdGNvbXAudWx0aW1hUmVmZXJlbmNpYSA9IHJlZi5zdWJzdHIoMCwgcmVmLmluZGV4T2YoJ1snKSk7XHJcblx0XHRcdFx0XHRjb21wLm1vZGVsb1tjb21wLnVsdGltYVJlZmVyZW5jaWFdID0gb2JqW3J4WzFdXTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHRcdGNvbXAudWx0aW1hUmVmZXJlbmNpYSA9IHJlZjtcclxuXHRcdFx0dmFyIHZhbCA9IG9ialtjb21wLnVsdGltYVJlZmVyZW5jaWFdIHx8IGNvbXAudmFsb3I7XHJcblx0XHRcdGNvbXAubW9kZWxvID0gb2JqO1xyXG5cdFx0XHRpZighdmFsKSByZXR1cm47XHRcclxuXHRcdFx0dHJ5e1xyXG5cdFx0XHRcdGNvbXAubW9kZWxvW2NvbXAudWx0aW1hUmVmZXJlbmNpYV0gPSBKU09OLnBhcnNlKHZhbCk7XHJcblx0XHRcdH1jYXRjaChlKXtcclxuXHRcdFx0XHRpZihjb21wLnRpcG89PT0nQ09NQk8gQk9YJyl7XHJcblx0XHRcdFx0XHRpZihjb21wLmRldGFsaGFtZW50byl7XHJcblx0XHRcdFx0XHRcdGlmKGNvbXAuZGV0YWxoYW1lbnRvLm9wY29lc0NhcnJlZ2FkYXMgJiYgY29tcC5kZXRhbGhhbWVudG8ub3Bjb2VzQ2FycmVnYWRhcy5sZW5ndGg+MCl7XHJcblx0XHRcdFx0XHRcdFx0Zm9yKHZhciBpPTA7IGk8Y29tcC5kZXRhbGhhbWVudG8ub3Bjb2VzQ2FycmVnYWRhcy5sZW5ndGg7IGkrKyl7XHJcblx0XHRcdFx0XHRcdFx0XHR2YXIgb2NPYmogPSBjb21wLmRldGFsaGFtZW50by5vcGNvZXNDYXJyZWdhZGFzW2ldO1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYodmFsW2NvbXAuZGV0YWxoYW1lbnRvLmRlc2NyaWNhb10gPT09IG9jT2JqW2NvbXAuZGV0YWxoYW1lbnRvLmRlc2NyaWNhb10pe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR2YWwgPSBvY09iajtcclxuXHRcdFx0XHRcdFx0XHRcdFx0YnJlYWtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0XHRcdGNvbXAuZGV0YWxoYW1lbnRvLm9wY29lc0NhcnJlZ2FkYXMgPSBbdmFsXTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVx0XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGNvbXAubW9kZWxvW2NvbXAudWx0aW1hUmVmZXJlbmNpYV0gPSB2YWw7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdFx0dmFyIHJlZmwgPSByZWYuaW5kZXhPZignLicpO1xyXG5cdFx0aWYocmVmLmluZGV4T2YoJ1snKSA8IHJlZmwpIHJlZmwgPSByZWYuaW5kZXhPZignXScpICsgMTtcclxuXHRcdHZhciBuID0gcmVmLnN1YnN0cigwLCByZWZsKTtcclxuXHRcdHJlZiA9IHJlZi5zdWJzdHIocmVmbCsxKTtcclxuXHRcdC8vIENvbmZlcmUgc2UgbyBvYmogYXR1YWwgw6kgdW0gYXJyYXlcclxuXHRcdHZhciByeCA9IC8oLispXFxbKFteXFxdXSopXFxdLy5leGVjKG4pOyAvL3J4WzFdIGNoYXZlLCByeFsyXSBwb3NpY2FvXHJcblx0XHRpZihyeCl7XHJcblx0XHRcdHZhciBpc1J4Mk51bWJlciA9IHBhcnNlSW50KHJ4WzJdKSA+IC0xO1xyXG5cdFx0XHRpZighb2JqW3J4WzFdXSkgb2JqW3J4WzFdXSA9IFtdO1xyXG5cdFx0XHR2YXIgcmNpID0gcnhbMl07XHJcblx0XHRcdGlmKCFpc1J4Mk51bWJlcil7XHJcblx0XHRcdFx0Ly8gQ3JpYSBvIG9iamV0byAoc2UgbsOjbyBob3V2ZXIpIHJlZmVyZW5jaWFDb21wb3N0YSBkZW50cm8gZG8gY29tcG9uZW50ZVxyXG5cdFx0XHRcdC8vIHBhcmEgYWJyaWdhciB0b2RhcyBhcyByZWZlcmVuY2lhcyBbe31dIHF1ZSBlc3NlIG9iamV0b1xyXG5cdFx0XHRcdC8vIHBvZGUgY29udGVyIGR1cmFudGUgYSBzdHJpbmcgZGEgcmVmZXJlbmNpYS5cclxuXHRcdFx0XHRpZighb2JqW3J4WzFdXS5yZWZlcmVuY2lhQ29tcG9zdGEpIG9ialtyeFsxXV0ucmVmZXJlbmNpYUNvbXBvc3RhID0ge307XHJcblx0XHRcdFx0Ly8gRGVudHJvIGRhIHJlZmVyZW5jaWEgY29tcG9zdGEsIGNyaWEgKHNlIG5hbyBob3V2ZXIpIFxyXG5cdFx0XHRcdC8vIHVtIGFycmF5IHVzYW5kbyByeFsxXSBjb21vIGNoYXZlIChvIG5vbWUgZG8gYXJyYXkgbm8gbW9kZWxvIEpQQSlcclxuXHRcdFx0XHRpZighb2JqW3J4WzFdXS5yZWZlcmVuY2lhQ29tcG9zdGFbcnhbMV1dKSBvYmpbcnhbMV1dLnJlZmVyZW5jaWFDb21wb3N0YVtyeFsxXV0gPSBbXTtcclxuXHRcdFx0XHQvLyBOZXN0ZSBhcnJheSDDqSBpbnNlcmlkbyAoc2UgbsOjbyBob3V2ZXIgbm8gbW9kZWxvIG91IG5vIHJlZmVyZW5jaWFDb21wb3N0YSkgXHJcblx0XHRcdFx0Ly8gbyB2YWxvciByeFsyXSBlIGEgcG9zacOnw6NvIGRlbGUgcmVwcmVzZW50YSBhIHBvc2nDp8OjbyByZWFsIG5vIGFycmF5IGRvIG1vZGVsbyBKUEEuXHJcblx0XHRcdFx0cmNpID0gb2JqW3J4WzFdXS5yZWZlcmVuY2lhQ29tcG9zdGFbcnhbMV1dLmluZGV4T2YocnhbMl0pO1xyXG5cdFx0XHRcdGlmKHJjaSA8IDApe1xyXG5cdFx0XHRcdFx0aWYob2JqW3J4WzFdXS5sZW5ndGggPiAwKXtcclxuXHRcdFx0XHRcdFx0dHJ5e1xyXG5cdFx0XHRcdFx0XHRcdHZhciByeDJKc29uID0gSlNPTi5wYXJzZShyeFsyXSk7XHJcblx0XHRcdFx0XHRcdFx0dmFyIGFjT2JqID0gYW5ndWxhci5jb3B5KG9ialtyeFsxXV0pO1xyXG5cdFx0XHRcdFx0XHRcdG9sOiBmb3IodmFyIGtleSBpbiByeDJKc29uKXtcclxuXHRcdFx0XHRcdFx0XHRcdGZvcih2YXIgaT1hY09iai5sZW5ndGggLSAxOyBpPi0xOyBpLS0pe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR2YXIgcngxT2JqID0gYWNPYmpbaV07XHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmKGV2YWwoJ3J4MU9iai4nICsga2V5KSAhPSByeDJKc29uW2tleV0pIGFjT2JqLnNwbGljZShpLCAxKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0ZWxzZXtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTb21lbnRlIDEgY2hhdmUgcG9yIGVucXVhbnRvLCBuYWRhIGRlIEFORFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdG9ialtyeFsxXV0ucmVmZXJlbmNpYUNvbXBvc3RhW3J4WzFdXVtpXSA9IHJ4WzJdO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJjaSA9IGk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0YnJlYWsgb2w7XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdH1jYXRjaChlKXtcclxuXHRcdFx0XHRcdFx0XHR0aHJvdyAnRUNWLVJFQ1VSRXhjZXB0aW9uOlxcbkhvdXZlIHVtIGVycm8gYW8gY29udmVydGVyIG8gSlNPTiBkYSByZWZlcmVuY2lhXFxuJyBcclxuXHRcdFx0XHRcdFx0XHRcdCsgY29tcC5yZWZlcmVuY2lhICsgJ1xcbkNvbXBvbmVudGUgaWQ6ICcgKyBjb21wLmlkICsgJ1xcbkVycm86XFxuJysgZTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fWVsc2VcclxuXHRcdFx0XHRcdFx0cmNpID0gb2JqW3J4WzFdXS5yZWZlcmVuY2lhQ29tcG9zdGFbcnhbMV1dLnB1c2gocnhbMl0pIC0gMTtcclxuXHRcdFx0XHR9XHRcclxuXHRcdFx0fVxyXG5cdFx0XHRpZighb2JqW3J4WzFdXVtyY2ldKSBvYmpbcnhbMV1dW3JjaV0gPSB7fTtcclxuXHRcdFx0cmV0dXJuIHJlY3VyKG9ialtyeFsxXV1bcmNpXSwgcmVmLCBjb21wKTtcclxuXHRcdH1lbHNle1xyXG5cdFx0XHRpZighb2JqW25dKSBvYmpbbl0gPSB7fTtcclxuXHRcdFx0cmV0dXJuIHJlY3VyKG9ialtuXSwgcmVmLCBjb21wKTtcclxuXHRcdH1cclxuXHR9XHJcblx0XHJcblx0LyoqXHJcblx0ICogTGltcGFyIG1haW9yIHBhaSBkbyBtb2RlbG8uXHJcblx0ICovXHJcblx0ZnVuY3Rpb24gbGltcGFyUGFpRG9Nb2RlbG8ob2JqLCByZWYsIG1hcGVhbWVudG8pe1xyXG5cdFx0dmFyIG4gPSByZWYuc3Vic3RyKDAsIHJlZi5pbmRleE9mKCcuJykpO1xyXG5cdFx0cmVmID0gcmVmLnN1YnN0cihyZWYuaW5kZXhPZignLicpKzEpO1xyXG5cdFx0Ly8gQ29uZmVyZSBzZSBvIG9iaiBhdHVhbCDDqSB1bSBhcnJheVxyXG5cdFx0dmFyIHJ4ID0gLyguKylcXFsoXFxkKylcXF0vLmV4ZWMobik7IC8vcnhbMV0gY2hhdmUsIHJ4WzJdIHBvc2ljYW9cclxuXHRcdGlmKHJ4KXtcclxuXHRcdFx0aWYob2JqW3J4WzFdXSAmJiBvYmpbcnhbMV1dW3J4WzJdXSl7XHJcblx0XHRcdFx0aWYocnhbMV0gPT09IG1hcGVhbWVudG8pIG9ialtyeFsxXV0uc3BsaWNlKHJ4WzJdLCAxKTtcclxuXHRcdFx0XHRlbHNlIHJldHVybiBsaW1wYXJQYWlEb01vZGVsbyhvYmpbcnhbMV1dW3J4WzJdXSwgcmVmLCBtYXBlYW1lbnRvKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gbGltcGFyUGFpRG9Nb2RlbG8ob2JqW25dLCByZWYsIG1hcGVhbWVudG8pO1xyXG5cdH1cclxuXHRcclxuXHQvKipcclxuXHQgKiBCdXNjYSBlIHJldG9ybmEgYSBpbnN0YW5jaWEgZG8gdWx0aW1vIGFycmF5IGNvbSBiYXNlIG5hIHJlZmVyZW5jaWEuXHJcblx0ICovXHJcblx0ZnVuY3Rpb24gdWx0aW1vQXJyYXlEYVJlZmVyZW5jaWEob2JqLCByZWYpe1xyXG5cdFx0dmFyIGxhc3QgPSByZWYubGFzdEluZGV4T2YoJ1snKTtcclxuXHRcdHJlZiA9IHJlZi5zdWJzdHIoMCwgbGFzdCk7XHJcblx0XHRyZWYgPSAnb2JqLicgKyByZWY7XHJcblx0XHRyZXR1cm4gZXZhbChyZWYpO1xyXG5cdH1cclxuXHRcclxuXHRyZXR1cm4ge1xyXG5cdFx0dG9hc3Q6IHtcclxuXHRcdFx0ZXJybzogZXJybyxcclxuXHRcdFx0b2s6IG9rXHJcblx0XHR9LFxyXG5cdFx0dXRpbHM6IHtcclxuXHRcdFx0cmVjdXI6IHJlY3VyLFxyXG5cdFx0XHR2YXJyZXIgOiB2YXJyZXIsXHJcblx0XHRcdGxpbXBhclBhaURvTW9kZWxvOiBsaW1wYXJQYWlEb01vZGVsbyxcclxuXHRcdFx0dWx0aW1vQXJyYXlEYVJlZmVyZW5jaWE6IHVsdGltb0FycmF5RGFSZWZlcmVuY2lhXHJcblx0XHR9LFxyXG5cdFx0bW9kZWxvIDoge1xyXG5cdFx0XHRsaW1wYXIgOiBsaW1wYXIsXHJcblx0XHRcdGNvcGlhckVMaW1wYXI6IGNvcGlhckVMaW1wYXIsXHJcblx0XHRcdGxpbXBhVmF6aW9zOiBsaW1wYVZhemlvc1xyXG5cdFx0fSxcclxuXHRcdG1lbnU6IHtcclxuXHRcdFx0aHRtbDoge30sXHJcblx0XHRcdGZuOiB7fVxyXG5cdFx0fSxcclxuXHRcdGNvbmZpZzoge1xyXG5cdFx0XHR0aXBvX2lkaW9tYTogMTYwMSwgXHJcblx0XHRcdGJhbmNvOiAnYmRfMCdcclxuXHRcdH1cclxuXHR9O1xyXG59XSk7IiwiLyoqIFtiY1VwbG9hZEZpbGVdXHJcbiAqXHREaXJldGl2YSBwYXJhIHJlYWxpemFyIGHDp8O1ZXMgZGUgdXBsb2FkLlxyXG4gKlx0QXRyaWJ1dG9zOlxyXG4gKlx0XHRhY2NlcHQgXHRcdFx0LSAnc3RyaW5nJyBcdFx0LSB0aXBvcyBkZSBhcnF1aXZvcyBhY2VpdGFkb3NcdFx0LSBvcGNpb25hbFxyXG4gKlx0XHRjYWxsYmFja1x0XHQtICdmdW5jdGlvbidcdC0gZnVuw6fDo28gcHJvdmluZGEgZG8gY29udHJvbGxlclx0XHQtIG9icmlnYXRvcmlvXHJcbiAqXHRleCBubyBodG1sOlxyXG4gKlx0XHQ8YmMtdXBsb2FkLWZpbGUgbWF0ZXJpYWwtaWNvbnM9XCJwaG90b1wiIGltYWdlPVwic2VpTGEuanBlZ1wiIGNhbGxiYWNrPVwiZm5DYWxsYmFja1wiIGFjY2VwdD1cIi5qcGVnXCI+PC9iYy11cGxvYWQtZmlsZT5cclxuKi9cclxuYW5ndWxhci5tb2R1bGUoJ2ZpbmFuY2Vpcm8nKS5kaXJlY3RpdmUoJ2JjVXBsb2FkRmlsZScsIFtmdW5jdGlvbigpIHtcclxucmV0dXJuIHtcclxuXHRyZXN0cmljdDogJ0UnLFxyXG5cdHNjb3BlOiB7XHJcblx0XHRjb21wb25lbnRlOiAnPScsXHJcblx0XHRjYWxsYmFjayA6ICcmJyxcclxuXHRcdGltYWdlIDogJz0nLFxyXG5cdFx0YWNjZXB0OiAnPSdcclxuXHR9LFxyXG5cdHRyYW5zY2x1ZGUgOiB0cnVlLFxyXG5cdHRlbXBsYXRlVXJsOiBHZXRET01JTklPRW5kcG9pbnQoJ2FuZ3VsYXItdGVtcGxhdGVzL3V0aWxzL2JjLXVwbG9hZC1maWxlLmh0bWwnKSxcclxuXHRjb21waWxlOiBmdW5jdGlvbihwYXJlbnQsIGF0dHJzKXtcclxuXHRcdHZhciBpbnB1dCA9IHBhcmVudC5maW5kKCdpbnB1dCcpO1xyXG5cdFx0cGFyZW50LmNzcygnY3Vyc29yJywgJ3BvaW50ZXInKTtcclxuXHJcblx0XHRyZXR1cm4gZnVuY3Rpb24oc2NvcGUsIHBhcmVudCkge1xyXG5cdFx0XHR2YXIgaW5wdXQgPSBwYXJlbnQuZmluZCgnaW5wdXQnKTtcclxuXHRcdFx0c2NvcGVbJ2FjY2VwdCddICYmIGlucHV0LmF0dHIoJ2FjY2VwdCcsIHNjb3BlWydhY2NlcHQnXSk7XHJcblxyXG5cdFx0XHRwYXJlbnQub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRpbnB1dC5jbGljaygpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdGlucHV0Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpe1xyXG5cdFx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0aW5wdXQub24oJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRpZiAoIXRoaXMuZmlsZXMgfHwgIXRoaXMuZmlsZXNbMF0pIHJldHVybiBzY29wZS5jYWxsYmFjaygpKCdOw6NvIGV4aXN0ZSBhcnF1aXZvJyk7XHJcblx0XHRcdFx0dmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcblx0XHRcdFx0dmFyIGZpbGUgPSB0aGlzLmZpbGVzWzBdO1xyXG5cdFx0XHRcdHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHNjb3BlLmNhbGxiYWNrKCkobnVsbCwge2ZpbGU6IGZpbGUsIGZpbGU2NDogZS50YXJnZXQucmVzdWx0fSk7XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0XHRyZWFkZXIucmVhZEFzRGF0YVVSTCh0aGlzLmZpbGVzWzBdKTtcclxuXHRcdFx0XHQkKHRoaXMpWzBdLnZhbHVlID0gJyc7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHR9XHJcbn07XHJcbn1dKTsiLCIvKiogW3RvcGljb11cclxuICpcdERpcmV0aXZhIHBhcmEgYWx0ZXJhciBvIGVzdGlsbyBkbyB0ZXh0byBzZXBhcmFkb3IgZGUgdMOzcGljby5cclxuKi9cclxuYW5ndWxhci5tb2R1bGUoJ2ZpbmFuY2Vpcm8nKS5kaXJlY3RpdmUoJ3RvcGljbycsIFtmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdHRyYW5zY2x1ZGUgOiB7XHJcblx0ICAgICAgICAndGl0dWxvJzogJ3RvcGljb1RpdHVsbycsXHJcblx0ICAgICAgICAnYm90b2VzJzogJz90b3BpY29Cb3RvZXMnLFxyXG5cdCAgICAgICAgJ2NvbnRldWRvJzogJ3RvcGljb0NvbnRldWRvJ1xyXG5cdCAgICB9LFxyXG5cdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdHRlbXBsYXRlVXJsOiBHZXRET01JTklPRW5kcG9pbnQoJ2FuZ3VsYXItdGVtcGxhdGVzL3V0aWxzL3RvcGljby5odG1sJylcclxuXHR9O1xyXG59XSk7IiwiLyoqXHJcbiAqIFtjYWRhc3Ryb0Zvcm11bGFyaW9dXHJcbiAqIENvbnRyb2xlciBwYXJhIG8gY2FkYXN0cm8gZGUgZm9ybXVsw6FyaW8uXHJcbiAqIFJhcGhhZWwgQnJhbmTDo28gLSAyNS8wMS8yMDE3XHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmNvbnRyb2xsZXIoJ2NhZGFzdHJvRm9ybXVsYXJpbycsIFtcclxuICAgICckc2NvcGUnLCAnJGVjdicsICckaHR0cCcsICdEVE9wdGlvbnNCdWlsZGVyJywgJ0RUQ29sdW1uQnVpbGRlcicsICckbWREaWFsb2cnLFxyXG4gICAgZnVuY3Rpb24oJHNjb3BlLCAkZWN2LCAkaHR0cCwgRFRPcHRpb25zQnVpbGRlciwgRFRDb2x1bW5CdWlsZGVyLCAkbWREaWFsb2cpe1xyXG4gICAgXHJcbiAgICBkb2N1bWVudC50aXRsZSA9ICdDQURBU1RSTyBGT1JNUyAxLjInO1x0XHJcbiAgICBcdFxyXG5cdCRlY3YubWVudS5odG1sLmNhcnJlZ2FkbyA9IHRydWU7XHJcblx0JHNjb3BlLnRvZ2dsZU1lbnUgPSAkZWN2Lm1lbnUuZm4udG9nZ2xlO1xyXG5cdCRzY29wZS5ib3RvZXMgPSB7fTtcclxuXHQkc2NvcGUubW9kZWxvID0ge307XHJcblx0JHNjb3BlLm1vZGVsb1RlbGEgPSB7fTtcclxuXHQkc2NvcGUubW9kZWxvR3VpYSA9IHt9O1xyXG5cdCRzY29wZS5tb2RlbG9Db21wb25lbnRlID0ge307XHJcblx0JHNjb3BlLm1vZGVsb0RldGFsaGUgPXt9O1xyXG5cdFxyXG5cdC8vIENhcnJlZ2EgdG9kb3MgZm9ybXVsw6FyaW9zXHJcblx0JGh0dHAuZ2V0KEdldFJFU1RFbmRwb2ludCgnVDIwMScpKVxyXG4gICAgLnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuICAgIFx0aWYocmVzLmRhdGEuUmVzdWx0YWRvID09PSAnRVJSTycpIHJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0Vycm8gYW8gYnVzY2FyJyk7XHJcbiAgICBcdCRzY29wZS5tb2RlbG9zID0gcmVzLmRhdGEuUmV0b3JubztcclxuICAgIH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdFcnJvIGFvIGJ1c2NhcicpO1xyXG5cdH0pO1xyXG5cdFxyXG5cdC8vIEdyYWRlIGRlIGV4aWJpw6fDo28gZGFzIHRlbGFzO1xyXG5cdCRzY29wZS5ncmFkZUZvcm11bGFyaW9zID0ge1xyXG5cdFx0ZGVsZXRhciA6IGZ1bmN0aW9uKG9iaiwgaW5kZXgsIGV2LCBjYil7XHJcblx0XHRcdCRodHRwKHtcclxuXHRcdFx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdCAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcclxuXHRcdFx0ICAgIH0sXHJcblx0XHRcdFx0bWV0aG9kOiAnREVMRVRFJyxcclxuXHRcdFx0XHRkYXRhOiBvYmosXHJcblx0XHRcdFx0dXJsOiBHZXRSRVNURW5kcG9pbnQoJ1QyMDEnKSwgXHJcblx0XHRcdH0pXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHRcdFx0aWYocmVzLmRhdGEuUmVzdWx0YWRvID09PSAnRVJSTycpcmV0dXJuICRlY3YudG9hc3QuZXJybyhyZXMuZGF0YS5FcnJvLCAnRXJybyBhbyBkZWxldGFyJyk7XHJcblx0XHRcdFx0JGVjdi50b2FzdC5vaygnRm9ybXVsw6FyaW8gZGVsZXRhZG8gY29tIHN1Y2Vzc28hJyk7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0Y2IoKTtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHQkc2NvcGUubW9kZWxvID0ge307XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb1RlbGEgPSB7fTtcclxuXHRcdFx0XHQkc2NvcGUubW9kZWxvR3VpYSA9IHt9O1xyXG5cdFx0XHRcdCRzY29wZS5tb2RlbG9Db21wb25lbnRlID0ge307XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb0RldGFsaGUgPXt9O1xyXG5cdFx0XHRcdFxyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0Vycm8gYW8gZGVsZXRhcicpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH0sXHJcblx0XHRlZGl0YXIgOiBmdW5jdGlvbihhRGF0YSwgZXYpe1xyXG5cdFx0XHRpZighYURhdGEuYzFfMjAxKSByZXR1cm47XHJcblx0XHRcdCRlY3YudG9hc3Qub2soJ0J1c2NhbmRvIGZvcm11bMOhcmlvLi4uJyk7XHJcblx0ICAgICAgICAkaHR0cC5nZXQoR2V0UkVTVEVuZHBvaW50KCdUMjAxLycgKyBhRGF0YS5jMV8yMDEpKVxyXG5cdCAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHQgICAgICAgIFx0aWYocmVzLmRhdGEuUmVzdWx0YWRvID09PSAnRVJSTycpIHJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0Vycm8gYW8gYnVzY2FyJyk7XHJcblx0ICAgICAgICBcdFxyXG5cdCAgICAgICAgXHQkc2NvcGUubW9kZWxvID0gcmVzLmRhdGEuUmV0b3JubztcclxuXHQgICAgICAgIFx0JHNjb3BlLnRlbGFTZWxlY2lvbmFkYSA9IDE7XHJcblx0ICAgICAgICBcdCRzY29wZS5kZXRhbGhlU2VsZWNpb25hZG8gPSAwO1xyXG5cdCAgICAgICAgXHQkc2NvcGUubW9kZWxvVGVsYSA9IHt9O1xyXG5cdCAgICAgICAgXHQkc2NvcGUubW9kZWxvR3VpYSA9IHt9O1xyXG5cdCAgICAgICAgXHQkc2NvcGUubW9kZWxvQ29tcG9uZW50ZSA9IHt9O1xyXG5cdCAgICAgICAgXHQkc2NvcGUubW9kZWxvRGV0YWxoZSA9e307XHJcblx0ICAgICAgICBcdCRlY3YudG9hc3Qub2soJ0Zvcm11bMOhcmlvIGNhcnJlZ2FkbyEnKTtcclxuXHRcdFx0XHRcclxuXHQgICAgICAgIH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0JGVjdi50b2FzdC5lcnJvKGVyci5kYXRhLCAnRXJybyBhbyBidXNjYXInKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0Ly8gR3JhZGUgZGUgZXhpYmnDp8OjbyBkYXMgdGVsYXM7XHJcblx0JHNjb3BlLmdyYWRlVGVsYXMgPSB7XHJcblx0XHRkZWxldGFyIDogZnVuY3Rpb24ob2JqLCBpbmRleCwgZXYsIGNiKXtcclxuXHRcdFx0JGh0dHAoe1xyXG5cdFx0XHRcdGhlYWRlcnM6IHtcclxuXHRcdFx0ICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG5cdFx0XHQgICAgfSxcclxuXHRcdFx0XHRtZXRob2Q6ICdERUxFVEUnLFxyXG5cdFx0XHRcdGRhdGE6IG9iaixcclxuXHRcdFx0XHR1cmw6IEdldFJFU1RFbmRwb2ludCgnVDIwMicpLCBcclxuXHRcdFx0fSlcclxuXHRcdFx0LnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJylyZXR1cm4gJGVjdi50b2FzdC5lcnJvKHJlcy5kYXRhLkVycm8sICdFcnJvIGFvIGRlbGV0YXInKTtcclxuXHRcdFx0XHQkZWN2LnRvYXN0Lm9rKCdUZWxhIGRlbGV0YWRhIGNvbSBzdWNlc3NvIScpO1xyXG5cdFx0XHRcdCRzY29wZS5tb2RlbG9UZWxhID0ge307XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb0d1aWEgPSB7fTtcclxuXHRcdFx0XHQkc2NvcGUubW9kZWxvQ29tcG9uZW50ZSA9IHt9O1xyXG5cdFx0XHRcdCRzY29wZS5tb2RlbG9EZXRhbGhlID17fTtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRjYigpO1xyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0Vycm8gYW8gZGVsZXRhcicpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH0sXHJcblx0XHRlZGl0YXIgOiBmdW5jdGlvbihhRGF0YSwgZXYpe1xyXG5cdFx0XHRpZighYURhdGEuYzFfMjAyKSByZXR1cm47XHJcblx0ICAgIFx0JGVjdi50b2FzdC5vaygnQnVzY2FuZG8gdGVsYS4uLicpO1xyXG5cdCAgICAgICAgJGh0dHAuZ2V0KEdldFJFU1RFbmRwb2ludCgnVDIwMi8nICsgYURhdGEuYzFfMjAyKSlcclxuXHRcdCAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdCAgICAgICAgXHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJykgcmV0dXJuICRlY3YudG9hc3QuZXJybyhyZXMuZGF0YS5FcnJvLCAnRXJybyBhbyBidXNjYXInKTtcclxuXHRcdCAgICAgICAgXHRcclxuXHRcdCAgICAgICAgXHQkc2NvcGUubW9kZWxvVGVsYSA9IHJlcy5kYXRhLlJldG9ybm87XHJcblx0XHQgICAgICAgIFx0JHNjb3BlLm1vZGVsb0d1aWEgPSB7fTtcclxuXHRcdCAgICAgICAgXHQkc2NvcGUubW9kZWxvQ29tcG9uZW50ZSA9IHt9O1xyXG5cdFx0ICAgICAgICBcdCRzY29wZS5tb2RlbG9EZXRhbGhlID17fTtcclxuXHRcdCAgICAgICAgXHQkc2NvcGUuZGV0YWxoZVNlbGVjaW9uYWRvID0gMTtcclxuXHRcdCAgICAgICAgXHQkZWN2LnRvYXN0Lm9rKCdUZWxhIGNhcnJlZ2FkYSEnKTtcclxuXHRcdFx0XHRcdFxyXG5cdFx0ICAgICAgICB9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdFx0JGVjdi50b2FzdC5lcnJvKGVyci5kYXRhLCAnRXJybyBhbyBidXNjYXInKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHQvLyBHcmFkZSBkZSBleGliacOnw6NvIGRhcyBndWlhcztcclxuXHQkc2NvcGUuZ3JhZGVHdWlhcyA9IHtcclxuXHRcdGRlbGV0YXIgOiBmdW5jdGlvbihvYmosIGluZGV4LCBldiwgY2Ipe1xyXG5cdFx0XHQkaHR0cCh7XHJcblx0XHRcdFx0aGVhZGVyczoge1xyXG5cdFx0XHQgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcblx0XHRcdCAgICB9LFxyXG5cdFx0XHRcdG1ldGhvZDogJ0RFTEVURScsXHJcblx0XHRcdFx0ZGF0YTogb2JqLFxyXG5cdFx0XHRcdHVybDogR2V0UkVTVEVuZHBvaW50KCdUMjAzJyksIFxyXG5cdFx0XHR9KVxyXG5cdFx0XHQudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdGlmKHJlcy5kYXRhLlJlc3VsdGFkbyA9PT0gJ0VSUk8nKXJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0Vycm8gYW8gZGVsZXRhcicpO1xyXG5cdFx0XHRcdCRlY3YudG9hc3Qub2soJ0d1aWEgZGVsZXRhZGEgY29tIHN1Y2Vzc28hJyk7XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb0d1aWEgPSB7fTtcclxuXHRcdFx0XHQkc2NvcGUubW9kZWxvQ29tcG9uZW50ZSA9IHt9O1xyXG5cdFx0XHRcdCRzY29wZS5tb2RlbG9EZXRhbGhlID17fTtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRjYigpO1xyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0Vycm8gYW8gZGVsZXRhcicpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH0sXHJcblx0XHRlZGl0YXIgOiBmdW5jdGlvbihhRGF0YSwgZXYpe1xyXG5cdFx0XHRpZighYURhdGEuYzFfMjAzKSByZXR1cm47XHJcblx0ICAgIFx0JGVjdi50b2FzdC5vaygnQnVzY2FuZG8gZ3VpYS4uLicpO1xyXG5cdCAgICAgICAgJGh0dHAuZ2V0KEdldFJFU1RFbmRwb2ludCgnVDIwMy8nICsgYURhdGEuYzFfMjAzKSlcclxuXHRcdCAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdCAgICAgICAgXHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJykgcmV0dXJuICRlY3YudG9hc3QuZXJybyhyZXMuZGF0YS5FcnJvLCAnRXJybyBhbyBidXNjYXInKTtcclxuXHRcdCAgICAgICAgXHRcclxuXHRcdCAgICAgICAgXHQkc2NvcGUubW9kZWxvR3VpYSA9IHJlcy5kYXRhLlJldG9ybm87XHJcblx0XHQgICAgICAgIFx0JHNjb3BlLmRldGFsaGVTZWxlY2lvbmFkbyA9IDI7XHJcblx0XHQgICAgICAgIFx0JHNjb3BlLm1vZGVsb0NvbXBvbmVudGUgPSB7fTtcclxuXHRcdCAgICAgICAgXHQkc2NvcGUubW9kZWxvRGV0YWxoZSA9e307XHJcblx0XHQgICAgICAgIFx0JGVjdi50b2FzdC5vaygnR3VpYSBjYXJyZWdhZGEhJyk7XHJcblx0XHRcdFx0XHRcclxuXHRcdCAgICAgICAgfSwgZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0Vycm8gYW8gYnVzY2FyJyk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fTtcclxuXHRcclxuXHQvLyBHcmFkZSBkZSBleGliacOnw6NvIGRvcyBjb21wb25lbnRlcztcclxuXHQkc2NvcGUuZ3JhZGVDb21wb25lbnRlcyA9IHtcclxuXHRcdGRlbGV0YXIgOiBmdW5jdGlvbihvYmosIGluZGV4LCBldiwgY2Ipe1xyXG5cdFx0XHQkaHR0cCh7XHJcblx0XHRcdFx0aGVhZGVyczoge1xyXG5cdFx0XHQgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcblx0XHRcdCAgICB9LFxyXG5cdFx0XHRcdG1ldGhvZDogJ0RFTEVURScsXHJcblx0XHRcdFx0ZGF0YTogb2JqLFxyXG5cdFx0XHRcdHVybDogR2V0UkVTVEVuZHBvaW50KCdUMjA0JyksIFxyXG5cdFx0XHR9KVxyXG5cdFx0XHQudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdGlmKHJlcy5kYXRhLlJlc3VsdGFkbyA9PT0gJ0VSUk8nKXJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0Vycm8gYW8gZGVsZXRhcicpO1xyXG5cdFx0XHRcdCRlY3YudG9hc3Qub2soJ0NvbXBvbmVudGUgZGVsZXRhZG8gY29tIHN1Y2Vzc28hJyk7XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb0NvbXBvbmVudGUgPSB7fTtcclxuXHRcdFx0XHQkc2NvcGUubW9kZWxvRGV0YWxoZSA9e307XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0Y2IoKTtcclxuXHRcdFx0fSwgZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdFcnJvIGFvIGRlbGV0YXInKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9LFxyXG5cdFx0ZWRpdGFyIDogZnVuY3Rpb24oYURhdGEsIGV2KXtcclxuXHRcdFx0aWYoIWFEYXRhLmMxXzIwNCkgcmV0dXJuO1xyXG5cdCAgICBcdCRlY3YudG9hc3Qub2soJ0J1c2NhbmRvIGNvbXBvbmVudGUuLi4nKTtcclxuXHQgICAgICAgICRodHRwLmdldChHZXRSRVNURW5kcG9pbnQoJ1QyMDQvJyArIGFEYXRhLmMxXzIwNCkpXHJcblx0XHQgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHQgICAgICAgIFx0aWYocmVzLmRhdGEuUmVzdWx0YWRvID09PSAnRVJSTycpIHJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0Vycm8gYW8gYnVzY2FyJyk7XHJcblx0XHQgICAgICAgIFx0XHJcblx0XHQgICAgICAgIFx0JHNjb3BlLm1vZGVsb0NvbXBvbmVudGUgPSByZXMuZGF0YS5SZXRvcm5vO1xyXG5cdFx0ICAgICAgICBcdCRzY29wZS5tb2RlbG9EZXRhbGhlID17fTtcclxuXHRcdCAgICAgICAgXHQkc2NvcGUubW9kZWxvQ29tcG9uZW50ZS50aXBvID0geyB9O1xyXG5cdFx0ICAgICAgICBcdCRzY29wZS5kZXRhbGhlU2VsZWNpb25hZG8gPSAzO1xyXG5cdFx0ICAgICAgICBcdCRlY3YudG9hc3Qub2soJ0NvbXBvbmVudGUgY2FycmVnYWRvIScpO1xyXG5cdFx0XHRcdFx0XHJcblx0XHQgICAgICAgIH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdFcnJvIGFvIGJ1c2NhcicpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdH07XHJcblx0XHJcblx0Ly8gR3JhZGUgZGUgZXhpYmnDp8OjbyBkb3MgY29tcG9uZW50ZXM7XHJcblx0JHNjb3BlLmdyYWRlRGV0YWxoZXMgPSB7XHJcblx0XHRkZWxldGFyIDogZnVuY3Rpb24ob2JqLCBpbmRleCwgZXYsIGNiKXtcclxuXHRcdFx0JGh0dHAoe1xyXG5cdFx0XHRcdGhlYWRlcnM6IHtcclxuXHRcdFx0ICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG5cdFx0XHQgICAgfSxcclxuXHRcdFx0XHRtZXRob2Q6ICdERUxFVEUnLFxyXG5cdFx0XHRcdGRhdGE6IG9iaixcclxuXHRcdFx0XHR1cmw6IEdldFJFU1RFbmRwb2ludCgnVDIwNicpLCBcclxuXHRcdFx0fSlcclxuXHRcdFx0LnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJylyZXR1cm4gJGVjdi50b2FzdC5lcnJvKHJlcy5kYXRhLkVycm8sICdFcnJvIGFvIGRlbGV0YXInKTtcclxuXHRcdFx0XHQkZWN2LnRvYXN0Lm9rKCdEZXRhbGhlIGRlbGV0YWRvIGNvbSBzdWNlc3NvIScpO1xyXG5cdFx0XHRcdCRzY29wZS5tb2RlbG9EZXRhbGhlID17fTtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRjYigpO1xyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0Vycm8gYW8gZGVsZXRhcicpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH0sXHJcblx0XHRlZGl0YXIgOiBmdW5jdGlvbihhRGF0YSwgZXYpe1xyXG5cdFx0XHRpZighYURhdGEuYzFfMjA2KSByZXR1cm47XHJcblx0ICAgIFx0JGVjdi50b2FzdC5vaygnQnVzY2FuZG8gZGV0YWxoZSBkbyBjb21wb25lbnRlLi4uJyk7XHJcblx0ICAgICAgICAkaHR0cC5nZXQoR2V0UkVTVEVuZHBvaW50KCdUMjA2LycgKyBhRGF0YS5jMV8yMDYpKVxyXG5cdFx0ICAgICAgICAudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0ICAgICAgICBcdGlmKHJlcy5kYXRhLlJlc3VsdGFkbyA9PT0gJ0VSUk8nKSByZXR1cm4gJGVjdi50b2FzdC5lcnJvKHJlcy5kYXRhLkVycm8sICdFcnJvIGFvIGJ1c2NhcicpO1xyXG5cdFx0ICAgICAgICBcdFxyXG5cdFx0ICAgICAgICBcdCRzY29wZS5tb2RlbG9EZXRhbGhlID0gcmVzLmRhdGEuUmV0b3JubztcclxuXHRcdCAgICAgICAgXHQkc2NvcGUuZGV0YWxoZVNlbGVjaW9uYWRvID0gNDtcclxuXHRcdCAgICAgICAgXHQkZWN2LnRvYXN0Lm9rKCdEZXRhbGhlIGNhcnJlZ2FkbyEnKTtcclxuXHRcdFx0XHRcdFxyXG5cdFx0ICAgICAgICB9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdFx0JGVjdi50b2FzdC5lcnJvKGVyci5kYXRhLCAnRXJybyBhbyBidXNjYXInKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdH1cclxuXHR9O1xyXG5cdFxyXG5cdC8vIE1vbml0b3JhIGEgbXVkYW7Dp2EgZGEgcMOhZ2luYSBDb21wb25lbnRlXHJcblx0KGZ1bmN0aW9uKCl7XHJcblx0XHRmdW5jdGlvbiBtdWRvdShuKXtcclxuXHRcdFx0aWYoIW4pIHJldHVybjtcclxuXHRcdFx0aWYoISRzY29wZS5tb2RlbG9Db21wb25lbnRlLnQyMDZDNSkgcmV0dXJuO1xyXG5cdFx0XHRcclxuXHRcdFx0JHNjb3BlLm1vZGVsb0NvbXBvbmVudGUudDIwNkM1LmZvckVhY2goZnVuY3Rpb24oZGV0YWxoZSl7XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb0NvbXBvbmVudGUudGlwb1sndCcgKyBkZXRhbGhlLmM2XzIwNl81MDAyLmMxXzUwMDJdID0gZGV0YWxoZTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0XHRcclxuXHRcdC8vIE1vbml0b3JhIGEgbXVkYW7Dp2EgZG8gY29tcG9uZW50ZVxyXG5cdFx0JHNjb3BlLiR3YXRjaChmdW5jdGlvbigpe1xyXG5cdFx0XHRyZXR1cm4gJHNjb3BlLm1vZGVsb0NvbXBvbmVudGU7XHJcblx0XHR9LG11ZG91KTtcclxuXHRcdFxyXG5cdFx0Ly8gTW9uaXRvcmEgYSBtdWRhbsOnYSBkZSB0aXBvIGRvIGNvbXBvbmVudGVcclxuXHRcdCRzY29wZS4kd2F0Y2goZnVuY3Rpb24oKXtcclxuXHRcdFx0aWYoJHNjb3BlLm1vZGVsb0NvbXBvbmVudGUpXHJcblx0XHRcdFx0cmV0dXJuICRzY29wZS5tb2RlbG9Db21wb25lbnRlLmM2XzIwNF81MDAyO1xyXG5cdFx0fSxtdWRvdSk7XHJcblx0fSkoKTtcclxuXHRcclxuXHQvLyBBw6fDtWVzIGRvcyBib3TDtWVzXHJcblx0KGZ1bmN0aW9uKCl7XHJcblx0XHR2YXIgYWNhb1NhbHZhciA9IHt9O1xyXG5cdFx0YWNhb1NhbHZhci5GT1JNID0gZnVuY3Rpb24oZm9ybSl7XHJcblx0XHRcdCRzY29wZS5ib3RvZXMuZ3JhdmFyRm9ybUNhcnJlZ2FuZG8gPSB0cnVlO1xyXG5cdFx0XHQkaHR0cC5wb3N0KEdldFJFU1RFbmRwb2ludCgnVDIwMScpLCAkc2NvcGUubW9kZWxvKVxyXG5cdFx0XHQudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdCRzY29wZS5ib3RvZXMuZ3JhdmFyRm9ybUNhcnJlZ2FuZG8gPSBmYWxzZTtcclxuXHRcdFx0XHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJykgcmV0dXJuICRlY3YudG9hc3QuZXJybyhyZXMuZGF0YS5FcnJvLCAnRXJybyBhbyBpbnNlcmlyIG8gZm9ybXVsw6FyaW8nKTtcclxuXHRcdFx0XHRcclxuXHQgICAgICAgIFx0JHNjb3BlLm1vZGVsbyA9IHJlcy5kYXRhLlJldG9ybm87XHJcblx0XHRcdFx0JGVjdi50b2FzdC5vaygnRm9ybXVsw6FyaW8gaW5zZXJpZG8gY29tIHN1Y2Vzc28hJyk7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0JGh0dHAuZ2V0KEdldFJFU1RFbmRwb2ludCgnVDIwMScpKVxyXG5cdFx0ICAgICAgICAudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0ICAgICAgICBcdGlmKHJlcy5kYXRhLlJlc3VsdGFkbyA9PT0gJ0VSUk8nKSByZXR1cm4gJGVjdi50b2FzdC5lcnJvKHJlcy5kYXRhLkVycm8sICdFcnJvIGFvIGJ1c2NhcicpO1xyXG5cdFx0ICAgICAgICBcdCRzY29wZS5tb2RlbG9zID0gcmVzLmRhdGEuUmV0b3JubztcclxuXHRcdCAgICAgICAgXHQkZWN2LnRvYXN0Lm9rKCdHcmFkZSByZWNhcnJlZ2FkbyEnKTtcclxuXHRcdCAgICAgICAgfSwgZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0Vycm8gYW8gYnVzY2FyJyk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0JHNjb3BlLmJvdG9lcy5ncmF2YXJGb3JtQ2FycmVnYW5kbyA9IGZhbHNlO1xyXG5cdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0Vycm8gYW8gaW5zZXJpciBvIGZvcm11bMOhcmlvJyk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHRcdGFjYW9TYWx2YXIuVEVMQSA9IGZ1bmN0aW9uKGZvcm0pe1xyXG5cdFx0XHQkc2NvcGUubW9kZWxvVGVsYS5jMl8yMDJfMjAxID0gJHNjb3BlLm1vZGVsbztcclxuXHRcdFx0JHNjb3BlLmJvdG9lcy5ncmF2YXJUZWxhQ2FycmVnYW5kbyA9IHRydWU7XHJcblx0XHRcdCRodHRwLnBvc3QoR2V0UkVTVEVuZHBvaW50KCdUMjAyJyksICRzY29wZS5tb2RlbG9UZWxhKVxyXG5cdFx0XHQudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdCRzY29wZS5ib3RvZXMuZ3JhdmFyVGVsYUNhcnJlZ2FuZG8gPSBmYWxzZTtcclxuXHRcdFx0XHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJykgcmV0dXJuICRlY3YudG9hc3QuZXJybyhyZXMuZGF0YS5FcnJvLCAnRXJybyBhbyBpbnNlcmlyIGEgdGVsYScpO1xyXG5cdCAgICAgICAgXHQkc2NvcGUubW9kZWxvVGVsYSA9IHJlcy5kYXRhLlJldG9ybm87XHJcblx0ICAgICAgICBcdFxyXG5cdCAgICAgICAgXHQkZWN2LnRvYXN0Lm9rKCdUZWxhIGluc2VyaWRhIGNvbSBzdWNlc3NvIScpO1xyXG5cdCAgICAgICAgXHQkaHR0cC5nZXQoR2V0UkVTVEVuZHBvaW50KCdUMjAxLycgKyAkc2NvcGUubW9kZWxvLmMxXzIwMSkpXHJcblx0XHQgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHQgICAgICAgIFx0aWYocmVzLmRhdGEuUmVzdWx0YWRvID09PSAnRVJSTycpIHJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0Vycm8gYW8gYnVzY2FyJyk7XHJcblx0XHQgICAgICAgIFx0JHNjb3BlLm1vZGVsbyA9IHJlcy5kYXRhLlJldG9ybm87XHJcblx0XHQgICAgICAgIFx0JGVjdi50b2FzdC5vaygnRm9ybXVsw6FyaW8gcmVjYXJyZWdhZG8hJyk7XHJcblx0XHQgICAgICAgIH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdFcnJvIGFvIGJ1c2NhcicpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdCRzY29wZS5ib3RvZXMuZ3JhdmFyVGVsYUNhcnJlZ2FuZG8gPSBmYWxzZTtcclxuXHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdFcnJvIGFvIGluc2VyaXIgYSB0ZWxhJyk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHRcdGFjYW9TYWx2YXIuR1VJQSA9IGZ1bmN0aW9uKGZvcm0pe1xyXG5cdFx0XHQkc2NvcGUubW9kZWxvR3VpYS5jMl8yMDNfMjAxID0gJHNjb3BlLm1vZGVsbztcclxuXHRcdFx0JHNjb3BlLm1vZGVsb0d1aWEuYzNfMjAzXzIwMiA9ICRzY29wZS5tb2RlbG9UZWxhO1xyXG5cdFx0XHQkc2NvcGUuYm90b2VzLmdyYXZhckd1aWFDYXJyZWdhbmRvID0gdHJ1ZTtcclxuXHRcdFx0JGh0dHAucG9zdChHZXRSRVNURW5kcG9pbnQoJ1QyMDMnKSwgJHNjb3BlLm1vZGVsb0d1aWEpXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHRcdFx0JHNjb3BlLmJvdG9lcy5ncmF2YXJHdWlhQ2FycmVnYW5kbyA9IGZhbHNlO1xyXG5cdFx0XHRcdGlmKHJlcy5kYXRhLlJlc3VsdGFkbyA9PT0gJ0VSUk8nKSByZXR1cm4gJGVjdi50b2FzdC5lcnJvKHJlcy5kYXRhLkVycm8sICdFcnJvIGFvIGluc2VyaXIgYSBndWlhJyk7XHJcblx0ICAgICAgICBcdCRzY29wZS5tb2RlbG9HdWlhID0gcmVzLmRhdGEuUmV0b3JubztcclxuXHQgICAgICAgIFx0XHJcblx0ICAgICAgICBcdCRlY3YudG9hc3Qub2soJ0d1aWEgaW5zZXJpZGEgY29tIHN1Y2Vzc28hJyk7XHJcblx0ICAgICAgICBcdCRodHRwLmdldChHZXRSRVNURW5kcG9pbnQoJ1QyMDIvJyArICRzY29wZS5tb2RlbG9UZWxhLmMxXzIwMikpXHJcblx0XHQgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHQgICAgICAgIFx0aWYocmVzLmRhdGEuUmVzdWx0YWRvID09PSAnRVJSTycpIHJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0Vycm8gYW8gYnVzY2FyJyk7XHJcblx0XHQgICAgICAgIFx0JHNjb3BlLm1vZGVsb1RlbGEgPSByZXMuZGF0YS5SZXRvcm5vO1xyXG5cdFx0ICAgICAgICBcdCRlY3YudG9hc3Qub2soJ1RlbGEgcmVjYXJyZWdhZGEhJyk7XHJcblx0XHQgICAgICAgIH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdFcnJvIGFvIGJ1c2NhcicpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdCRzY29wZS5ib3RvZXMuZ3JhdmFyR3VpYUNhcnJlZ2FuZG8gPSBmYWxzZTtcclxuXHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdFcnJvIGFvIGluc2VyaXIgYSBndWlhJyk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0YWNhb1NhbHZhci5DT01QT05FTlRFID0gZnVuY3Rpb24oZm9ybSl7XHJcblx0XHRcdHZhciBjcCA9IGFuZ3VsYXIuY29weSgkc2NvcGUubW9kZWxvQ29tcG9uZW50ZSk7XHJcblx0XHRcdGZvcih2YXIga2V5IGluIGNwLnRpcG8pe1xyXG5cdFx0XHRcdHZhciBkZXRhbGhlID0gY3AudGlwb1trZXldO1xyXG5cdFx0XHRcdGlmKGRldGFsaGUuYzFfMjA2KSBjb250aW51ZTtcclxuXHRcdFx0XHRkZXRhbGhlLmMyXzIwNl8yMDEgPSAkc2NvcGUubW9kZWxvO1xyXG5cdFx0XHRcdGRldGFsaGUuYzNfMjA2XzIwMiA9ICRzY29wZS5tb2RlbG9UZWxhO1xyXG5cdFx0XHRcdGRldGFsaGUuYzRfMjA2XzIwMyA9ICRzY29wZS5tb2RlbG9HdWlhO1xyXG5cdFx0XHRcdGRldGFsaGUuYzZfMjA2XzUwMDIgPSB7XHJcblx0XHRcdFx0XHRcdGMxXzUwMDIgOiBwYXJzZUludChrZXkuc3Vic3RyKDEpKVxyXG5cdFx0XHRcdH07XHJcblx0XHRcdFx0aWYoIWNwLnQyMDZDNSkgY3AudDIwNkM1ID0gW107XHJcblx0XHRcdFx0Y3AudDIwNkM1LnB1c2goZGV0YWxoZSk7XHJcblx0XHRcdH1cclxuXHRcdFx0XHJcblx0XHRcdFxyXG5cdFx0XHRjcC5jMl8yMDRfMjAxID0gJHNjb3BlLm1vZGVsbztcclxuXHRcdFx0Y3AuYzNfMjA0XzIwMiA9ICRzY29wZS5tb2RlbG9UZWxhO1xyXG5cdFx0XHRjcC5jNF8yMDRfMjAzID0gJHNjb3BlLm1vZGVsb0d1aWE7XHJcblx0XHRcdCRzY29wZS5ib3RvZXMuZ3JhdmFyQ29tcG9uZW50ZUNhcnJlZ2FuZG8gPSB0cnVlO1xyXG5cdFx0XHQkaHR0cC5wb3N0KEdldFJFU1RFbmRwb2ludCgnVDIwNCcpLCBjcClcclxuXHRcdFx0LnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHQkc2NvcGUuYm90b2VzLmdyYXZhckNvbXBvbmVudGVDYXJyZWdhbmRvID0gZmFsc2U7XHJcblx0XHRcdFx0aWYocmVzLmRhdGEuUmVzdWx0YWRvID09PSAnRVJSTycpIHJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0Vycm8gYW8gaW5zZXJpciBvIGNvbXBvbmVudGUnKTtcclxuXHQgICAgICAgIFx0JHNjb3BlLm1vZGVsb0NvbXBvbmVudGUgPSByZXMuZGF0YS5SZXRvcm5vO1xyXG5cdCAgICAgICAgXHQkc2NvcGUubW9kZWxvQ29tcG9uZW50ZS50aXBvID0geyB9O1xyXG5cdCAgICAgICAgXHRcclxuXHQgICAgICAgIFx0JGVjdi50b2FzdC5vaygnQ29tcG9uZW50ZSBpbnNlcmlkbyBjb20gc3VjZXNzbyEnKTtcclxuXHQgICAgICAgIFx0JGh0dHAuZ2V0KEdldFJFU1RFbmRwb2ludCgnVDIwMy8nICsgJHNjb3BlLm1vZGVsb0d1aWEuYzFfMjAzKSlcclxuXHRcdCAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdCAgICAgICAgXHRpZihyZXMuZGF0YS5SZXN1bHRhZG8gPT09ICdFUlJPJykgcmV0dXJuICRlY3YudG9hc3QuZXJybyhyZXMuZGF0YS5FcnJvLCAnRXJybyBhbyBidXNjYXInKTtcclxuXHRcdCAgICAgICAgXHQkc2NvcGUubW9kZWxvR3VpYSA9IHJlcy5kYXRhLlJldG9ybm87XHJcblx0XHQgICAgICAgIFx0JGVjdi50b2FzdC5vaygnR3VpYSByZWNhcnJlZ2FkYSEnKTtcclxuXHRcdCAgICAgICAgfSwgZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0Vycm8gYW8gYnVzY2FyJyk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0JHNjb3BlLmJvdG9lcy5ncmF2YXJDb21wb25lbnRlQ2FycmVnYW5kbyA9IGZhbHNlO1xyXG5cdFx0XHRcdCRlY3YudG9hc3QuZXJybyhlcnIuZGF0YSwgJ0Vycm8gYW8gaW5zZXJpciBvIGNvbXBvbmVudGUnKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9O1xyXG5cdFx0YWNhb1NhbHZhci5ERVRBTEhFID0gZnVuY3Rpb24oZm9ybSl7XHJcblx0XHRcdCRzY29wZS5tb2RlbG9EZXRhbGhlLmMyXzIwNl8yMDEgPSAkc2NvcGUubW9kZWxvO1xyXG5cdFx0XHQkc2NvcGUubW9kZWxvRGV0YWxoZS5jM18yMDZfMjAyID0gJHNjb3BlLm1vZGVsb1RlbGE7XHJcblx0XHRcdCRzY29wZS5tb2RlbG9EZXRhbGhlLmM0XzIwNl8yMDMgPSAkc2NvcGUubW9kZWxvR3VpYTtcclxuXHRcdFx0JHNjb3BlLm1vZGVsb0RldGFsaGUuYzVfMjA2XzIwNCA9ICRzY29wZS5tb2RlbG9Db21wb25lbnRlO1xyXG5cdFx0XHQkc2NvcGUuYm90b2VzLmdyYXZhckRldGFsaGVDYXJyZWdhbmRvID0gdHJ1ZTtcclxuXHRcdFx0JGh0dHAucG9zdChHZXRSRVNURW5kcG9pbnQoJ1QyMDYnKSwgJHNjb3BlLm1vZGVsb0RldGFsaGUpXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHRcdFx0JHNjb3BlLmJvdG9lcy5ncmF2YXJEZXRhbGhlQ2FycmVnYW5kbyA9IGZhbHNlO1xyXG5cdFx0XHRcdGlmKHJlcy5kYXRhLlJlc3VsdGFkbyA9PT0gJ0VSUk8nKSByZXR1cm4gJGVjdi50b2FzdC5lcnJvKHJlcy5kYXRhLkVycm8sICdFcnJvIGFvIGluc2VyaXIgbyBkZXRhbGhlJyk7XHJcblx0ICAgICAgICBcdCRzY29wZS5tb2RlbG9EZXRhbGhlID0gcmVzLmRhdGEuUmV0b3JubztcclxuXHQgICAgICAgIFx0XHJcblx0ICAgICAgICBcdCRlY3YudG9hc3Qub2soJ0RldGFsaGUgaW5zZXJpZG8gY29tIHN1Y2Vzc28hJyk7XHJcblx0ICAgICAgICBcdCRodHRwLmdldChHZXRSRVNURW5kcG9pbnQoJ1QyMDQvJyArICRzY29wZS5tb2RlbG9Db21wb25lbnRlLmMxXzIwNCkpXHJcblx0XHQgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHQgICAgICAgIFx0aWYocmVzLmRhdGEuUmVzdWx0YWRvID09PSAnRVJSTycpIHJldHVybiAkZWN2LnRvYXN0LmVycm8ocmVzLmRhdGEuRXJybywgJ0Vycm8gYW8gYnVzY2FyJyk7XHJcblx0XHQgICAgICAgIFx0JHNjb3BlLm1vZGVsb0NvbXBvbmVudGUgPSByZXMuZGF0YS5SZXRvcm5vO1xyXG5cdFx0ICAgICAgICBcdCRlY3YudG9hc3Qub2soJ0NvbXBvbmVudGUgcmVjYXJyZWdhZGEhJyk7XHJcblx0XHQgICAgICAgIH0sIGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdFcnJvIGFvIGJ1c2NhcicpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdCRzY29wZS5ib3RvZXMuZ3JhdmFyRGV0YWxoZUNhcnJlZ2FuZG8gPSBmYWxzZTtcclxuXHRcdFx0XHQkZWN2LnRvYXN0LmVycm8oZXJyLmRhdGEsICdFcnJvIGFvIGluc2VyaXIgbyBkZXRhbGhlJyk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHRcdFxyXG5cdFx0Ly8gVmVyaWZpY2Egc2Ugb3MgY2FtcG9zIG9icmlnYXTDs3Jpb3MgZXN0w6NvIHByZWVuY2hpZG9zXHJcblx0XHQkc2NvcGUudmFsaWRhciA9IGZ1bmN0aW9uKGZvcm0sIGlkKXtcclxuXHRcdFx0aWYgKGZvcm0uJGludmFsaWQpIHtcclxuXHRcdFx0ICAgIGFuZ3VsYXIuZm9yRWFjaChmb3JtLiRlcnJvciwgZnVuY3Rpb24gKGZpZWxkKSB7XHJcblx0XHRcdCAgICAgICAgYW5ndWxhci5mb3JFYWNoKGZpZWxkLCBmdW5jdGlvbihlcnJvckZpZWxkKXtcclxuXHRcdFx0ICAgICAgICAgICAgZXJyb3JGaWVsZC4kc2V0VG91Y2hlZCgpO1xyXG5cdFx0XHQgICAgICAgIH0pO1xyXG5cdFx0XHQgICAgfSk7XHJcblx0XHRcdCAgICByZXR1cm47XHJcblx0XHRcdH1cclxuXHRcdFx0YWNhb1NhbHZhcltpZF0oZm9ybSk7XHJcblx0XHR9O1xyXG5cdFx0XHJcblx0XHQvLyBBw6fDo28gZG9zIG91dHJvcyBib3TDtWVzXHJcblx0XHQkc2NvcGUuYWNhb0NydWQgPSBmdW5jdGlvbihpZCwgZXYpe1xyXG5cdFx0XHRzd2l0Y2ggKGlkKSB7XHJcblx0XHRcdGNhc2UgJ05PVk8nOlxyXG5cdFx0XHRcdCRzY29wZS5tb2RlbG8gPSB7fTtcclxuXHRcdFx0XHQkc2NvcGUubW9kZWxvVGVsYSA9IHt9O1xyXG5cdFx0XHRcdCRzY29wZS5tb2RlbG9HdWlhID0ge307XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb0NvbXBvbmVudGUgPSB7fTtcclxuXHRcdFx0XHQkc2NvcGUubW9kZWxvRGV0YWxoZSA9e307XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgJ05PVk9fVEVMQSc6XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb1RlbGEgPSB7fTtcclxuXHRcdFx0XHQkc2NvcGUubW9kZWxvR3VpYSA9IHt9O1xyXG5cdFx0XHRcdCRzY29wZS5tb2RlbG9Db21wb25lbnRlID0ge307XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb0RldGFsaGUgPXt9O1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlICdOT1ZPX0dVSUEnOlxyXG5cdFx0XHRcdCRzY29wZS5tb2RlbG9HdWlhID0ge307XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb0NvbXBvbmVudGUgPSB7fTtcclxuXHRcdFx0XHQkc2NvcGUubW9kZWxvRGV0YWxoZSA9e307XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgJ05PVk9fQ09NUE9ORU5URSc6XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb0NvbXBvbmVudGUgPSB7fTtcclxuXHRcdFx0XHQkc2NvcGUubW9kZWxvRGV0YWxoZSA9e307XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgJ05PVk9fREVUQUxIRSc6XHJcblx0XHRcdFx0JHNjb3BlLm1vZGVsb0RldGFsaGUgPXt9O1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRkZWZhdWx0OlxyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH0pKCk7XHJcblx0XHJcbn1dKTsiLCIvKipcclxuICogW2NvbmZpZ3VyYWNvZXNdXHJcbiAqIENvbnRyb2xlciBwYXJhIGdlcmlyIGEgVUktUm91dGVyIGNvbmZpZ3VyYWNvZXMuXHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmNvbnRyb2xsZXIoJ2NvbmZpZ3VyYWNvZXMnLCBbJyRzY29wZScsICckZWN2JywgXHJcblx0ZnVuY3Rpb24oJHNjb3BlLCAkZWN2KXtcclxuXHQkc2NvcGUuY29uZmlnID0ge307XHJcblx0JHNjb3BlLmNvbmZpZyA9ICRlY3YuY29uZmlnO1xyXG5cdCRzY29wZS5mbGFncyA9IFtcclxuXHRcdHtcclxuXHRcdFx0aWQ6IDE2MDEsXHJcblx0XHRcdGJhbmRlaXJhIDogJ2ZsYWctaWNvbi1icicsXHJcblx0XHRcdHRpdHVsbzogJ1BvcnR1Z3XDqnMgYnJhc2lsZWlybydcclxuXHRcdH0sXHJcblx0XHR7XHJcblx0XHRcdGlkOiAxNjAzLFxyXG5cdFx0XHRiYW5kZWlyYSA6ICdmbGFnLWljb24tdXMnLFxyXG5cdFx0XHR0aXR1bG86ICdJbmdsw6pzJ1xyXG5cdFx0fSxcclxuXHRcdHtcclxuXHRcdFx0aWQ6IDE2MDIsXHJcblx0XHRcdGJhbmRlaXJhIDogJ2ZsYWctaWNvbi1lcycsXHJcblx0XHRcdHRpdHVsbzogJ0VzcGFuaG9sJ1xyXG5cdFx0fVxyXG5cdF07XHJcblx0JGVjdi5tZW51Lmh0bWwuY2FycmVnYWRvID0gdHJ1ZTtcclxuXHQkc2NvcGUudG9nZ2xlTWVudSA9ICRlY3YubWVudS5mbi50b2dnbGU7XHJcbn1dKTtcclxuIiwiLyoqXHJcbiAqIFtmb3JtdWxhcmlvXVxyXG4gKiBDb250cm9sZXIgcGFyYSBnZXJpciBhIFVJLVJvdXRlciBmb3JtdWxhcmlvLlxyXG4gKi9cclxuYW5ndWxhci5tb2R1bGUoJ2ZpbmFuY2Vpcm8nKS5jb250cm9sbGVyKCdmb3JtdWxhcmlvJywgWyckc2NvcGUnLCAnJHN0YXRlJyxcclxuXHRmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSl7XHJcblx0XHJcblx0JHNjb3BlLmlkRm9ybSA9ICRzdGF0ZS5wYXJhbXNbXCJpZF9mb3JtXCJdO1xyXG5cdCRzY29wZS50aXBvSWRpb21hID0gJHN0YXRlLnBhcmFtc1tcInRpcG9faWRpb21hXCJdO1xyXG5cdCRzY29wZS5iYW5jbyA9ICRzdGF0ZS5wYXJhbXNbXCJiYW5jb1wiXTtcclxuXHRcclxufV0pOyIsIi8qKlxyXG4gKiBbcHJpbmNpcGFsXVxyXG4gKiBDb250cm9sZXIgcGFyYSBnZXJpciBhIFVJLVJvdXRlciBwcmluY2lwYWwuXHJcbiAqL1xyXG5hbmd1bGFyLm1vZHVsZSgnZmluYW5jZWlybycpLmNvbnRyb2xsZXIoJ3ByaW5jaXBhbCcsIFsnJHNjb3BlJywgJyRlY3YnLCBcclxuXHRmdW5jdGlvbigkc2NvcGUsICRlY3Ype1xyXG5cdCRlY3YubWVudS5odG1sLmNhcnJlZ2FkbyA9IHRydWU7XHJcblx0JHNjb3BlLnRvZ2dsZU1lbnUgPSAkZWN2Lm1lbnUuZm4udG9nZ2xlO1xyXG59XSk7Il19
